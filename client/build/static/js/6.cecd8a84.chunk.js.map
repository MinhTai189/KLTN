{"version":3,"sources":["components/FormFields/SelectField.tsx","features/admin/components/AdminSider.tsx","components/Common/ModalUp.tsx","contexts/ApproveContext.ts","features/approves/components/Motels/TableRoom.tsx","features/approves/components/common/ComparingBody.tsx","features/approves/components/layouts/ApproveLayout.tsx","features/approves/components/common/AddRowContent.tsx","features/approves/components/Motels/AddBodyMotel.tsx","features/approves/components/Posts/AddBodyPost.tsx","features/approves/components/Posts/PreviewingBody.tsx","features/approves/components/Rates/AddBodyRate.tsx","features/approves/components/Reports/BodyReport.tsx","features/approves/components/ApproveSection.tsx","features/approves/components/common/ApproveItem.tsx","features/admin/pages/ApprovePage.tsx","features/admin/components/Feedback/FeedbackTable.tsx","features/admin/pages/FeedbackPage.tsx","features/admin/pages/MotelListPage.tsx","features/admin/pages/MotelPage.tsx","features/admin/pages/PostListPage.tsx","features/admin/pages/PostPage.tsx","features/users/components/UserTable.tsx","features/users/components/FormUpdate.tsx","features/users/components/Operation.tsx","features/admin/pages/UserListPage.tsx","features/admin/pages/UserPage.tsx","features/dashboard/components/Statistics/StatisticCard.tsx","features/dashboard/components/Statistics/Statistics.tsx","features/dashboard/components/Layouts/RecentActivitiesLayout.tsx","features/dashboard/components/RecentActivities/RecentActivitiesTable.tsx","features/dashboard/components/RecentActivities/RecentActivity.tsx","features/dashboard/components/RecentActivities/RecentMotelTable.tsx","features/dashboard/components/RecentActivities/RecentMotel.tsx","features/dashboard/components/RecentActivities/RecentActivities.tsx","features/dashboard/components/ListSider/ListOnline.tsx","features/dashboard/components/ListSider/ListPermission.tsx","features/dashboard/components/ListSider/ListSider.tsx","features/dashboard/components/Charts/LineChart.tsx","features/dashboard/components/Charts/DoughnutChart.tsx","features/admin/pages/DashboardPage.tsx","pages/AdminPage.tsx"],"names":["SelectField","label","name","control","options","disabled","defaultValue","size","margin","props","useController","field","value","onChange","onBlur","ref","fieldState","invalid","error","variant","fullWidth","labelId","inputRef","inputProps","map","option","index","style","color","id","message","Sider","Layout","AdminSider","location","useLocation","useState","collapsed","setCollapsed","collapsible","onCollapse","defaultSelectedKeys","pathname","split","mode","theme","Item","icon","PieChartOutlined","marginTop","to","UserOutlined","HomeOutlined","ReadOutlined","FileDoneOutlined","SolutionOutlined","useStyles","makeStyles","root","position","inset","opacity","zIndex","transform","transition","height","background","cursor","padding","spacing","borderRadius","ModalUp","children","open","onClose","classes","useEffect","body","document","querySelector","overflow","Box","className","onClick","initialApproveContext","type","ApproveContext","createContext","openModalApprove","setOpenModalApprove","fontSize","TableRoom","rooms","dataTable","changeRoomToTable","Table","TableHead","TableRow","TableCell","align","maxWidth","TableBody","row","component","scope","price","status","area","additional","_id","width","textAlign","marginBottom","maxHeight","objectFit","display","flexWrap","justifyContent","gap","alignItems","marginRight","fill","palette","text","secondary","listContactIcon","phone","Phone","email","Email","facebook","Facebook","zalo","ComparingBody","motelId","setDataTable","loading","setLoading","a","approveApis","getComparisonMotel","response","mapData","mapComparisonMotel","data","toast","fetchComparisonMotel","Typography","stickyHeader","oldRow","mapRowTable","key","old","newRow","new","listLabel","address","school","desc","contact","available","thumbnail","images","room","listConvertData","x","join","result","Object","keys","forEach","oldData","newData","push","src","alt","imgUrl","idx","toString","textTransform","fontWeight","placeItems","marginLeft","primary","main","ApproveLayout","isExpand","quantity","Accordion","expanded","AccordionSummary","expandIcon","Paper","marginBlock","AddRowContent","labelLeft","contentLeft","titleContentLeft","linkContentLeft","labelRight","contentRight","titleContentRight","linkContentRight","wordBreak","history","useHistory","handleNavigate","isLeft","Grid","container","item","sm","Tooltip","title","arrow","lineHeight","minWidth","border","outline","boxShadow","right","left","AddBodyMotel","dataMotel","length","slice","listImg","useMemo","undefined","mt","mb","itemsToShow","isRTL","pagination","itemPosition","enableSwipe","enableMouseSwipe","itemPadding","showEmptySlots","url","them","AddBodyPost","motelOrSchool","require","schools","motel","additionals","motelLink","content","tags","marginInline","borderBottom","listStylePosition","paddingLeft","listStyleType","paddingRight","fontStyle","borderLeft","PreviewingBody","dangerouslySetInnerHTML","__html","AddBodyRate","rate","tooltipContent","star","BodyReport","seeMoreLinks","post","comment","ApproveSection","dispatch","useAppDispatch","dataMotelApprove","useAppSelector","selectDataMotelApprove","loadingMotelApprove","selectLoadingMotelApprove","paginationMotelApprove","selectPaginationMotelApprove","dataPostApprove","selectDataPostApprove","loadingPostApprove","selectLoadingPostApprove","paginationPostApprove","selectPaginationPostApprove","dataRateApprove","selectDataRateApprove","loadingRateApprove","selectLoadingRateApprove","paginationRateApprove","selectPaginationRateApprove","dataReportApprove","selectDataReportApprove","loadingReportApprove","selectLoadingReportApprove","paginationReportApprove","selectPaginationReportApprove","dataPreviewModal","setDataPreviewModal","setOpen","showAccordion","setShowAccordion","handleShowAccordion","panel","prev","actionApprovalMotel","handlePagination","e","page","motelApproveActions","setFilter","_page","handleApprove","approve","handleRefuse","refuse","actionApprovalPost","postApproveActions","postId","actionApprovalRate","rateApproveActions","rateId","actionApprovalReport","reportApproveActions","reportId","Provider","_totalRows","my","Pagination","count","Math","ceil","_limit","shape","xs","modalId","isUpdate","user","owner","createdAt","onApprove","onRefuse","subject","isReview","createAt","report","isReport","flex","shadows","ApproveItem","valueContext","useContext","Avatar","avatarUrl","calculateCreatedTimeHDMY","Button","borderColor","ApprovePage","filterMotelApprove","selectFilterMotelApprove","filterPostApprove","selectFilterPostApprove","filterRateApprove","selectFilterRateApprove","filterReportApprove","selectFilterReportApprove","get","FeedbackTable","handleRemoveFeedback","dataSource","dataIndex","render","record","okText","cancelText","okButtonProps","danger","onConfirm","DeleteOutlined","FeedbackPage","feedbackTable","setFeedbackTable","fetchFeedback","feedbackApis","getFeedback","then","res","feedback","category","date","catch","err","LinearProgress","feedbackId","removeFeedback","MotelListPage","filter","selectFilterMotel","selectLoadingMotel","dataMotelSplited","selectMotelSplited","showUpdateForm","setShowUpdateForm","selectedMotelUpdate","setSelectMotelUpdate","selectedRoomUpdate","setSelectRoomUpdate","formThumbnail","setFormThumbnail","formImages","setFormImages","motelActions","getMotel","handleSearch","searchWithDebounce","handleFilter","newFilter","_sort","_order","handleClearFilter","onClickEditMotel","dataMotelUpdate","find","dataUpdateRoom","handleRemove","removeMotel","handleUploadThumbnail","files","formData","FormData","append","handleUploadImages","filesSplit","reduce","arr","file","isRead","form","handleUpdateMotel","updateMotel","handleUpdateRoom","motelOfRoom","listRoomId","includes","updateRoom","MotelPage","path","exact","AddPage","PostListPage","selectFilterPost","selectLoadingPost","postAction","resetFilter","searchWidthDebounce","PostPage","UserTable","setUserUpdating","selectLoading","selectPagination","selectFilter","paginationTB","setPaginationTB","userData","selectData","columns","avatar","ellipsis","showTitle","placement","isAdmin","Chip","Face","fixed","EyeOutlined","EditFilled","onClickEditBtn","DeleteFilled","number","username","credit","province","district","current","pageSize","total","userUpdating","getUserById","pagi","userActions","scroll","radioOptions","schema","yup","trim","strict","min","max","required","FormUpdate","onSubmit","useForm","defaultValues","resolver","yupResolver","handleSubmit","setValue","Form","setProvince","optionsProvince","setOptionsProvince","setDistrict","optionsDistrict","setOptionsDistrict","optionsSchool","setOptionsSchool","defaultValueSchool","setDefaultValueSchool","formLoading","setFormLoading","isErrForm","setIsErrForm","provinceApi","getAll","listProvince","mapProvinces","defalultProvince","codeName","districtApi","getByCodeProvince","listDistrict","defalultDistrict","schoolApi","getByProDis","listSchool","mapOptions","defaultSchool","console","log","handleProvinceSelected","handleDistrictSelected","onFinish","visible","onCancel","onOk","submit","htmlType","confirmLoading","spinning","RadioBtnField","Option","Select","Operation","_keysearch","searchData","setSearchData","_province","provinceData","setProvinceData","_district","districtData","setDistrictData","_school","schoolData","setSchoolData","creditSortValue","setCreditSelectValue","createdAtSortValue","setCreateAtSelectValue","autoCompProvince","useProvince","autoCompDistrict","useDistrict","autoCompSchool","useSchool","onChangeAutoComp","onChangeSortSelect","md","placeholder","target","removeAccents","allowClear","prefix","SearchOutlined","_role","filterOption","inputValue","toUpperCase","indexOf","UserListPage","getUser","handleUpdateForm","temp","updateUser","removeUser","UserPage","StatisticCard","gridTemplateColumns","listLabelIcon","account","People","Home","approval","Queue","access","Hearing","Folder","Statistics","entries","RecentActivitiesLayout","RecentActivitiesTablee","currentPage","setCurrentPage","activity","hover","TablePagination","rowsPerPageOptions","labelDisplayedRows","from","nextIconButtonText","backIconButtonText","rowsPerPage","onPageChange","RecentActivity","dashboardData","selectDataDashboard","RecentActivitiesTable","recents","activities","RecentMotelTable","RecentMotel","motels","RecentActivities","lg","ListOnline","socket","useRef","Row","ListRow","list","onlines","isOnline","socketClient","listener","dashboardActions","setListOnline","on","SOCKET_EVENT","online","off","itemCount","itemSize","ListPermission","importants","paddingInline","ListSider","memo","listMode","setListMode","ButtonGroup","calcColums","maxYear","maxMonth","year","month","calcMaxYearMonth","Array","reverse","calcDataLine","charts","mathMonthYear","chart","LineChart","createDataChart","labels","registerdAccount","totalMotelEveryMonth","datasets","totalPostEveryMonth","backgroundColor","DoughnutChart","ratioPost","dataSize","totalSize","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","ArcElement","Title","Legend","DashboardPage","listenerMotel","setRecentMotel","listenerActivities","setRecentActivities","listenerStatistics","setStatistic","motelActivities","getData","statistics","doughnut","Header","Content","AdminPage","minHeight","ArrowLeftOutlined"],"mappings":"qSAoBaA,EAAc,SAAC,GAA4H,IAA1HC,EAAyH,EAAzHA,MAAOC,EAAkH,EAAlHA,KAAMC,EAA4G,EAA5GA,QAASC,EAAmG,EAAnGA,QAAmG,IAA1FC,gBAA0F,SAAxEC,EAAwE,EAAxEA,aAAwE,IAA1DC,YAA0D,MAAnD,SAAmD,MAAzCC,cAAyC,MAAhC,SAAgC,EAAnBC,EAAmB,iBACnJ,EAAoFC,YAAc,CAC9FR,OACAC,YAFJ,IAAQQ,MAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,SAAUC,EAAlC,EAAkCA,OAAQC,EAA1C,EAA0CA,IAA1C,IAAiDC,WAAcC,EAA/D,EAA+DA,QAASC,EAAxE,EAAwEA,MAKxE,OACI,eAAC,IAAD,CAAaC,QAAQ,WAAWC,WAAS,EAACf,SAAUA,EAAUE,KAAMA,EAAMC,OAAQA,EAAlF,UACI,cAAC,IAAD,UAAaP,IACb,cAAC,IAAD,yBACIoB,QAAQ,oCACRT,MAAOA,EACPC,SAAUA,EACVC,OAAQA,EACRQ,SAAUP,EACVd,MAAOA,EACPsB,WAAYd,EACZS,MAAOD,EACPX,aAAcA,GACVG,GAVR,aAaQL,EAAQoB,KAAI,SAACC,EAAQC,GAAT,OACR,cAAC,IAAD,CAAsBd,MAAOa,EAAOb,MAApC,SAA4Ca,EAAOxB,OAApCyB,SAI3B,cAAC,IAAD,CAAgBC,MAAO,CAAEC,MAAO,WAAaC,GAAG,uBAAhD,gBAAwEX,QAAxE,IAAwEA,OAAxE,EAAwEA,EAAOY,e,2KC1CnFC,EAAUC,IAAVD,MAEKE,EAAa,WACtB,IAAMC,EAAWC,cACjB,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,OACI,cAACP,EAAD,CACIQ,aAAW,EACXF,UAAWA,EACXG,WAAY,SAACH,GAAD,OAAeC,EAAaD,IAH5C,SAKI,eAAC,IAAD,CAAMI,oBAAqB,CAACP,EAASQ,SAASC,MAAM,KAAK,IAAKC,KAAK,SAASC,MAAM,OAAlF,UACI,cAAC,IAAKC,KAAN,CAA2BC,KAAM,cAACC,EAAA,EAAD,IAAsBrB,MAAO,CAAEsB,UAAW,GAA3E,SACI,cAAC,IAAD,CAAMC,GAAG,mBAAT,+BADW,aAIf,cAAC,IAAKJ,KAAN,CAAuBC,KAAM,cAACI,EAAA,EAAD,IAA7B,SACI,cAAC,IAAD,CAAMD,GAAG,eAAT,gCADW,SAIf,cAAC,IAAKJ,KAAN,CAAwBC,KAAM,cAACK,EAAA,EAAD,IAA9B,SACI,cAAC,IAAD,CAAMF,GAAG,gBAAT,8BADW,UAIf,cAAC,IAAKJ,KAAN,CAAuBC,KAAM,cAACM,EAAA,EAAD,IAA7B,SACI,cAAC,IAAD,CAAMH,GAAG,eAAT,+BADW,SAIf,cAAC,IAAKJ,KAAN,CAA0BC,KAAM,cAACO,EAAA,EAAD,IAAhC,SACI,cAAC,IAAD,CAAMJ,GAAG,kBAAT,sCADW,YAIf,cAAC,IAAKJ,KAAN,CAA0BC,KAAM,cAACQ,EAAA,EAAD,IAAhC,SACI,cAAC,IAAD,CAAML,GAAG,kBAAT,0BADW,kB,mDC7BzBM,EAAYC,aAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,CACFC,SAAU,QACVC,MAAO,EACPC,QAAS,EACTC,OAAQ,KACRC,UAAW,WACXC,WAAY,QAEZ,WAAY,CACRD,UAAW,WACXF,QAAS,GAGb,mBAAoB,CAChBI,OAAQ,GACRC,WAAY,mBACZC,OAAQ,WAGZ,UAAW,CACPF,OAAQ,qBACRC,WAAY,OACZE,QAASvB,EAAMwB,QAAQ,KACvBC,aAAc,sBAiCXC,EA5BC,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,QACzBC,EAAUnB,IAgBhB,OAdAoB,qBAAU,WACN,IAAMC,EAAYC,SAASC,cAAc,QAQzC,OALIF,EAAKlD,MAAMqD,SADXP,EACsB,SAEA,OAGnB,WACHI,EAAKlD,MAAMqD,SAAW,UAE3B,CAACP,IAGA,eAACQ,EAAA,EAAD,CAAKC,UAAS,UAAKP,EAAQjB,KAAb,YAAqBe,EAAO,SAAW,IAArD,UACI,qBAAKS,UAAU,gBAAgBC,QAAST,IAExC,cAACO,EAAA,EAAD,CAAKC,UAAU,OAAf,SACKV,QChDJY,EAAwB,CACnCC,KAAM,GACNxD,GAAI,IAQSyD,EALQC,wBAAmC,CACxDC,iBAAkBJ,EAClBK,oBAAqB,e,+KCXjBjC,EAAYC,aAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,CACF,uBAAwB,CACpBgC,SAAU,UAGd,uBAAwB,CACpBA,SAAU,WAGd,YAAa,CACTA,SAAU,qBACVtB,QAAS,2BAsCNuB,EAjCG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MACXjB,EAAUnB,IACVqC,EAAYC,YAAkBF,GAEpC,OACI,eAACG,EAAA,EAAD,CAAOb,UAAWP,EAAQjB,KAAMnD,KAAK,QAArC,UACI,cAACyF,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,4BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,2CACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,+BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAASxE,MAAO,CAAEyE,SAAU,KAA7C,mCAIR,cAACC,EAAA,EAAD,UACKR,EAAUrE,KAAI,SAAC8E,GAAD,OACX,eAACL,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWK,UAAU,KAAKC,MAAM,MAAhC,SACKF,EAAIpG,OAET,cAACgG,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BG,EAAIG,QAC/B,cAACP,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BG,EAAII,SAC/B,cAACR,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BG,EAAIK,OAC/B,cAACT,EAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBG,EAAIM,eAPlBN,EAAIO,cCtBjCrD,EAAYC,aAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,CACFO,OAAQ,OAER,yBAA0B,CACtB6C,MAAO,GAGX,aAAc,CACVC,UAAW,SACXrB,SAAU,SACVsB,aAAcnE,EAAMwB,QAAQ,IAGhC,WAAY,CACR7D,OAAQ,OACRyD,OAAQ,oBACRe,SAAU,OAEV,eAAgB,CACZiC,UAAW,IACXH,MAAO,OACPI,UAAW,SAGf,cAAe,CACXC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,IAAK,GAEL,WAAY,CACRR,MAAO,MAEP,SAAU,CACNA,MAAO,OACP7C,OAAQ,GACRiD,UAAW,WAKvB,kBAAmB,CACf,SAAU,CACNC,QAAS,OACTI,WAAY,SAEZ,qBAAsB,CAClBP,aAAcnE,EAAMwB,QAAQ,IAGhC,QAAS,CACLyC,MAAO,GACP7C,OAAQ,GACRuD,YAAa3E,EAAMwB,QAAQ,GAC3BoD,KAAM5E,EAAM6E,QAAQC,KAAKC,mBAQ3CC,EAAkB,CACpBC,MAAO,cAACC,EAAA,EAAD,IACPC,MAAO,cAACC,EAAA,EAAD,IACPC,SAAU,cAACC,EAAA,EAAD,IACVC,KAAM,cAAC,IAAD,KAoFKC,GAjFO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QACf3D,EAAUnB,IAEhB,EAAkCpB,mBAA0B,IAA5D,mBAAOyD,EAAP,KAAkB0C,EAAlB,KACA,EAA8BnG,oBAAS,GAAvC,mBAAOoG,EAAP,KAAgBC,EAAhB,KAuBA,OApBA7D,qBAAU,YACoB,uCAAG,8BAAA8D,EAAA,6DACzBD,GAAW,GADc,kBAI6BE,IAAYC,mBAAmBN,GAJ5D,OAIfO,EAJe,OAKfC,EAAUC,GAAmBF,EAASG,MAE5CT,EAAaO,GAEbL,GAAW,GATU,kDAWrBA,GAAW,GACXQ,IAAM/H,MAAM,KAAM2H,SAASG,KAAKlH,SAZX,0DAAH,qDAgB1BoH,KACD,CAACZ,IAEAE,EAAgB,cAAC,eAAD,CAAcjI,KAAK,UAGnC,eAAC0E,EAAA,EAAD,CAAKC,UAAWP,EAAQjB,KAAxB,UACI,cAACyF,EAAA,EAAD,CACIjE,UAAU,QACV/D,QAAQ,KAFZ,6DAOA,cAAC8D,EAAA,EAAD,CAAKC,UAAU,QAAf,SACI,eAACa,EAAA,EAAD,CAAOqD,cAAY,EAAnB,UACI,cAACpD,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWvE,MAAO,CACdmF,MAAO,SAEX,cAACZ,EAAA,EAAD,CAAWvE,MAAO,CACdmF,MAAO,OADX,kDAMA,cAACZ,EAAA,EAAD,CAAWvE,MAAO,CACdmF,MAAO,OADX,uDAQR,cAACT,EAAA,EAAD,UACKR,EAAUrE,KAAI,SAAA8E,GACX,IAAM+C,EAASC,GAAYhD,EAAIiD,IAAKjD,EAAIkD,KAClCC,EAASH,GAAYhD,EAAIiD,IAAKjD,EAAIoD,KAExC,OACI,eAACzD,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAAYI,EAAIrG,QAEhB,cAACiG,EAAA,EAAD,UAAYmD,IAEZ,cAACnD,EAAA,EAAD,UAAYuD,MALDnD,EAAIiD,mBAkBnD,SAASR,GAAmBC,GACxB,IAAMW,EAAY,CACdzJ,KAAM,yBACN0J,QAAS,yBACTC,OAAQ,4CACRC,KAAM,6BACNC,QAAS,kBACTjC,MAAO,4BACPE,MAAO,QACPE,SAAU,WACVE,KAAM,OACN1B,OAAQ,qBACRsD,UAAW,sBACXC,UAAW,kBACXC,OAAQ,mBACRC,KAAM,qBAGJC,EAAkB,CACpBP,OAAQ,SAACA,GACL,OAAOA,EAAOrI,KAAI,SAAA6I,GAAC,OAAIA,EAAEnK,QAAMoK,KAAK,MAExC5D,OAAQ,SAACA,GAAD,OAAqBA,EAAS,kBAAc,sBAGlD6D,EAA0B,GAsBhC,OAnBAC,OAAOC,KAAKzB,EAAKQ,KAAKkB,SAAQ,SAAAnB,GAE1B,GAAKI,EAAUJ,GAAf,CAIA,IAAMoB,EAAUP,EAAgBb,GAAOa,EAAgBb,GAAKP,EAAKQ,IAAID,IAAQP,EAAKQ,IAAID,GAEhFqB,EAAUR,EAAgBb,GAAOa,EAAgBb,GAAKP,EAAKU,IAAIH,IAAQP,EAAKU,IAAIH,GAEtFgB,EAAOM,KAAK,CAER5K,MAAO0J,EAAUJ,GACjBC,IAAG,OAAEmB,QAAF,IAAEA,IAAW,KAChBjB,IAAG,OAAEkB,QAAF,IAAEA,IAAW,KAChBrB,YAIDgB,EAGX,SAASjB,GAAYC,EAAaP,GAC9B,GAAa,OAATA,EAAe,MAAO,GAE1B,OAAQO,GACJ,IAAK,YACD,OACI,qBAAKrE,UAAU,YAAY4F,IAAK9B,EAAM+B,IAAI,KAElD,IAAK,SACD,OACI,oBAAI7F,UAAU,WAAd,SACK8D,EAAKxH,KAAI,SAACwJ,EAAgBC,GAAjB,OACN,oBAAc/F,UAAU,MAAxB,SACI,qBAAK4F,IAAKE,EAAQD,IAAI,MADjBE,QAMzB,IAAK,UACD,OACI,oBAAI/F,UAAU,eAAd,SACKsF,OAAOC,KAAKzB,GAAMxH,KAAI,SAAC+H,GACpB,OAAKP,EAAKO,GAGN,qBAAcrE,UAAU,MAAxB,UAEK2C,EAAgB0B,GAEjB,cAACJ,EAAA,EAAD,CAAYjE,UAAU,OAAOqB,UAAU,OAAvC,SACKyC,EAAKO,OALLA,GAHU,UAevC,IAAK,OACD,OACI,cAAC,EAAD,CAAW3D,MAAOoD,IAE1B,QACI,OACI,cAACG,EAAA,EAAD,CAAYjE,UAAU,OAAOqB,UAAU,OAAvC,SACKyC,EAAKkC,c,iEChQpB1H,GAAYC,cAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,CACF,8BAA+B,CAC3B,WAAY,CACRgC,SAAU,OACVyF,cAAe,YACfC,WAAY,KAGhB,YAAa,CACTjE,QAAS,OACTkE,WAAY,SACZvE,MAAO,GACP7C,OAAQ,GACRqH,WAAYzI,EAAMwB,QAAQ,GAC1BH,WAAYrB,EAAM6E,QAAQ6D,QAAQC,KAClC9F,SAAU,SACV9D,MAAO,OACP0C,aAAc,QAItB,aAAc,CACVF,QAASvB,EAAMwB,QAAQ,SAqCpBoH,GAhCO,SAAC,GAA6D,IAA3DjH,EAA0D,EAA1DA,SAAUvE,EAAgD,EAAhDA,MAAOyL,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,SAAUjH,EAAqB,EAArBA,QACpDC,EAAUnB,KAEhB,OACI,eAACoI,GAAA,EAAD,CACI1G,UAAWP,EAAQjB,KACnBmI,SAAUH,EACV7K,SAAU6D,EAHd,UAMI,eAACoH,GAAA,EAAD,CACIC,WAAY,cAAC,KAAD,IADhB,UAGI,cAAC5C,EAAA,EAAD,CACIjE,UAAU,QACV/D,QAAQ,KAFZ,SAIKlB,IAGL,cAACkJ,EAAA,EAAD,CAAYjE,UAAU,SAASqB,UAAU,OAAzC,SACKoF,OAIT,cAACK,GAAA,EAAD,CAAO9G,UAAU,UAAjB,SACKV,Q,6BClDXhB,GAAYC,cAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,CACFuI,YAAapJ,EAAMwB,QAAQ,KAE3B,iBAAkB,CACdqB,SAAU,SAEV,SAAU,CACNvB,OAAQ,UACRH,WAAY,QAEZ,UAAW,CACPpC,MAAOiB,EAAM6E,QAAQ6D,QAAQC,aAgDlCU,GAzCO,SAAC,GAAmK,IAAjKC,EAAgK,EAAhKA,UAAWC,EAAqJ,EAArJA,YAAaC,EAAwI,EAAxIA,iBAAkBC,EAAsH,EAAtHA,gBAAiBC,EAAqG,EAArGA,WAAYC,EAAyF,EAAzFA,aAAcC,EAA2E,EAA3EA,kBAAmBC,EAAwD,EAAxDA,iBAAwD,IAAtCC,iBAAsC,MAA1B,aAA0B,EAC/KhI,EAAUnB,KACVoJ,EAAUC,cAEVC,EAAiB,SAACC,GACpBA,GAAUT,GAAmBM,EAAQ/B,KAAKyB,GAC1CI,GAAoBE,EAAQ/B,KAAK6B,IAGrC,OACI,cAACzH,EAAA,EAAD,CAAKC,UAAWP,EAAQjB,KAAxB,SACI,eAACsJ,EAAA,EAAD,CAAMC,WAAS,EAAC5I,QAAS,EAAzB,UACI,cAAC2I,EAAA,EAAD,CAAME,MAAI,EAACC,GAAIZ,EAAa,EAAI,GAAhC,SACI,cAACa,GAAA,EAAD,CAASC,MAAK,OAAEhB,QAAF,IAAEA,IAAoB,GAAIiB,OAAK,EAA7C,SACI,eAACnE,EAAA,EAAD,CACIjE,UAAS,sBAAiBoH,EAAkB,OAAS,IACrDnH,QAAS,kBAAM2H,GAAe,IAFlC,UAIKX,EAJL,gBAImCC,SAK1CG,GAAc,cAACS,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACX,cAACC,GAAA,EAAD,CAASC,MAAK,OAAEZ,QAAF,IAAEA,IAAqB,GAAIa,OAAK,EAA9C,SACI,eAACnE,EAAA,EAAD,CACIjE,UAAS,sBAAiBwH,EAAmB,OAAS,IACtD/K,MAAO,CACHgL,aAEJxH,QAAS,kBAAM2H,GAAe,IALlC,UAOKP,EAPL,gBAOoCC,eCvDtDhJ,GAAYC,cAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,CACF,cAAe,CACX,kBAAmB,CACfC,SAAU,YAGd,0BAA2B,CACvBnD,OAAQ,GAGZ,eAAgB,CACZmD,SAAU,WACVmD,MAAO,GACP7C,OAAQ,GACRsJ,WAAY,QACZ7H,SAAU,GACVxB,WAAY,qBACZsJ,SAAU,QACVlJ,aAAc,EACdmJ,OAAQ,OACRC,QAAS,OACTC,UAAW,OACX/L,MAAO,OAEP,aAAc,CACVuC,OAAQ,WAGZ,kBAAmB,CACfD,WAAY,sBAGhB,oBAAqB,CACjB0J,MAAO,GAGX,mBAAoB,CAChBC,KAAM,EACN/J,OAAQ,IAIhB,YAAa,CACTgD,MAAO,OACP7C,OAAQ,GACRiD,UAAW,eAuFZ4G,GAjFM,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UACdpJ,EAAUnB,KAEVsG,EAAOiE,EAAUjE,KAAKkE,OAAS,IAAxB,UAAiCD,EAAUjE,KAAKmE,MAAM,EAAG,KAAzD,OAAqEF,EAAUjE,KAEtFoE,EAAO,CAAIH,EAAU9D,WAAd,oBAA4B8D,EAAU7D,SAE7CL,EAASsE,mBAAQ,WACnB,OAAOJ,EAAUlE,OAAOrI,KAAI,SAAA6I,GAAC,OAAIA,EAAEnK,QAAMoK,KAAK,OAC/C,CAACyD,IAEJ,OACI,eAAC9I,EAAA,EAAD,CAAKC,UAAWP,EAAQjB,KAAxB,UACI,cAAC,GAAD,CACIyI,UAAU,yBACVC,YAAa2B,EAAU7N,KACvBoM,gBAAoC,WAAnByB,EAAU1I,KAAV,kBAAyC0I,EAAUlH,UAAQuH,EAC5E7B,WAAW,yBACXC,aAAcuB,EAAUnE,UAG5B,cAAC,GAAD,CACIuC,UAAU,gBACVC,YAAatC,EACbuC,iBAAkB0B,EAAUjE,KAC5ByC,WAAW,4BACXC,aAAc3C,IAGlB,cAAC,GAAD,CACIsC,UAAU,4BACVC,YAAa2B,EAAUhE,QAAQjC,OAAS,GACxCyE,WAAW,QACXC,aAAcuB,EAAUhE,QAAQ/B,OAAS,KAG7C,cAAC,GAAD,CACImE,UAAU,WACVC,YAAa2B,EAAUhE,QAAQ7B,UAAY,GAC3CqE,WAAW,OACXC,aAAcuB,EAAUhE,QAAQ3B,MAAQ,KAG5C,cAAC,GAAD,CACI+D,UAAU,qBACVC,YAAa2B,EAAUrH,OAAS,kBAAc,oBAC9C6F,WAAW,sBACXC,aAAcuB,EAAU/D,UAAV,UAAyB+D,EAAU/D,UAAnC,aAAuD,KAGxE+D,EAAU5D,MAAQ,cAAC,EAAD,CAAWvE,MAAOmI,EAAU5D,OAE/C,cAAClF,EAAA,EAAD,CAAKoJ,GAAI,EAAGC,GAAI,EAAhB,SACI,cAAC,KAAD,CACIpJ,UAAU,WACVqJ,YAAa,EACbC,OAAO,EACPC,YAAY,EACZC,aAAa,QACbC,aAAa,EACbC,kBAAkB,EAClBC,YAAa,CAAC,EAAG,EAAG,EAAG,GACvBC,gBAAgB,EATpB,SAWKZ,EAAQ1M,KAAI,SAACuN,EAAKrN,GAEf,OACI,qBAEIwD,UAAU,SACV4F,IAAKiE,EACLhE,IAAI,uCAHCrJ,EAAMwJ,uBC3HrC1H,GAAYC,cAAW,SAACuL,GAAD,MAAkB,CAC3CtL,KAAM,OA0CKuL,GAvCK,SAAC,GAAqB,IAAD,IAAlBjG,EAAkB,EAAlBA,KACbrE,EAAUnB,KAEV0L,EAA8B,IAAdlG,EAAK3D,KAAa2D,EAAKmG,QAAQC,QAAQ5N,KAAI,SAAA6I,GAAC,OAAIA,EAAEnK,QAAMoK,KAAK,KAA7D,UAAoEtB,EAAKqG,aAAzE,aAAoE,EAAYnP,KAChGoP,EAAW,OAAGtG,QAAH,IAAGA,GAAH,UAAGA,EAAMmG,eAAT,aAAG,EAAevI,WAC7B2I,EAA0B,IAAdvG,EAAK3D,KAAL,kBAA6B2D,EAAKqG,MAAMxI,UAAQuH,EAE9DoB,EAAwB,IAAdxG,EAAK3D,KAAa,2IAA4E2D,EAAKwG,QAGjH,OAFAA,EAAUA,EAAQxB,OAAS,IAAjB,UAA0BwB,EAAQvB,MAAM,EAAG,KAA3C,OAAuDuB,EAG7D,mCACI,eAACvK,EAAA,EAAD,CAAKC,UAAWP,EAAQjB,KAAxB,UACI,cAAC,GAAD,CACIyI,UAAU,uBACVC,YAAapD,EAAKqE,MAClBd,WAAW,mBACXC,aAAcxD,EAAKyG,KAAKnF,KAAK,KAC7BqC,UAAU,cAGd,cAAC,GAAD,CACIR,UAAyB,IAAdnD,EAAK3D,KAAa,mCAAmB,kBAChD+G,YAAa8C,EACb5C,gBAAiBiD,EACjBhD,WAA0B,IAAdvD,EAAK3D,UAAa+I,EAAY,mCAC1C5B,aAAc8C,IAGlB,cAAC,GAAD,CACInD,UAAU,gBACVC,YAAaoD,EACbnD,iBAAgC,IAAdrD,EAAK3D,MAAc2D,EAAKwG,QAAQxB,OAAS,IAAMhF,EAAKwG,QAAU,WCnC9FhM,GAAYC,cAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,CACFoD,MAAO,OACPV,SAAU,IACVnC,OAAQ,mBACRe,SAAU,OACVxE,OAAQ,OAER,uBAAwB,CACpBsG,MAAO,GAGX,aAAc,CACVpB,SAAU,OACV0F,WAAY,IACZpE,aAAcnE,EAAMwB,QAAQ,IAGhC,aAAc,CACV,OAAQ,CACJqB,SAAU,SACVsB,aAAcnE,EAAMwB,QAAQ,IAEhC,OAAQ,CACJqB,SAAU,QACVsB,aAAcnE,EAAMwB,QAAQ,IAEhC,OAAQ,CACJqB,SAAU,SACVsB,aAAcnE,EAAMwB,QAAQ,IAEhC,OAAQ,CACJqB,SAAU,QACVsB,aAAcnE,EAAMwB,QAAQ,IAEhC,OAAQ,CACJqB,SAAU,SACVsB,aAAcnE,EAAMwB,QAAQ,IAEhC,OAAQ,CACJqB,SAAU,QACVsB,aAAcnE,EAAMwB,QAAQ,IAGhC,MAAO,CACHzC,MAAOiB,EAAM6E,QAAQ6D,QAAQC,MAGjC,QAAS,CACL1E,MAAO,OACP7C,OAAQ,OACRgI,YAAapJ,EAAMwB,QAAQ,GAC3BC,aAAc,IAGlB,UAAW,CACPoL,aAAc,OACdzD,YAAapJ,EAAMwB,QAAQ,GAC3BoJ,OAAQ,iBAER,OAAQ,CACJrJ,QAASvB,EAAMwB,QAAQ,EAAG,IAG9B,OAAQ,CACJsL,aAAc,mBAItB,aAAc,CACVC,kBAAmB,SACnBC,YAAahN,EAAMwB,QAAQ,GAC3B4H,YAAapJ,EAAMwB,QAAQ,GAE3B,OAAQ,CACJqB,SAAU,WAIlB,OAAQ,CACJoK,cAAe,QAGnB,OAAQ,CACJA,cAAe,QAGnB,eAAgB,CACZ9K,SAAU,SACV+K,aAAc,QACdF,YAAa,QACbrP,OAAQqC,EAAMwB,QAAQ,EAAG,GACzB2L,UAAW,SACXC,WAAY,kBAGhB,MAAO,CACHvK,SAAU,QACV0F,WAAY,IACZmC,WAAY,EACZtB,YAAapJ,EAAMwB,QAAQ,UAuB5B6L,GAjBQ,SAAC,GAAqB,IAAnBlH,EAAkB,EAAlBA,KAChBrE,EAAUnB,KAEhB,OACI,eAACyB,EAAA,EAAD,CAAKC,UAAWP,EAAQjB,KAAxB,UACI,cAACyF,EAAA,EAAD,CAAYjE,UAAU,QAAQ/D,QAAQ,KAAtC,SACK6H,EAAKqE,QAGV,cAACpI,EAAA,EAAD,CACIC,UAAU,UACViL,wBAAyB,CAAEC,OAAQpH,EAAKwG,eChGzCa,GAvBK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KACbd,EAAUc,EAAKd,QAAQxB,OAAS,IAAtB,UAA+BsC,EAAKd,QAAQvB,MAAM,EAAG,KAArD,OAAiEqC,EAAKd,QAChFe,EAAiBD,EAAKd,QAAQxB,OAAS,IAAMsC,EAAKd,QAAU,GAElE,OACI,eAACvK,EAAA,EAAD,WACI,cAAC,GAAD,CACIkH,UAAU,kBACVC,YAAakE,EAAKjB,MAAMnP,KACxBoM,gBAAe,kBAAagE,EAAKjB,MAAMxI,KACvC0F,WAAW,yBACXC,aAAY,UAAK8D,EAAKE,KAAV,UAGhB,cAAC,GAAD,CACIrE,UAAU,gBACVC,YAAaoD,EACbnD,iBAAkBkE,QCmBnBE,GApCI,SAAC,GAAqB,IAAD,QAAlBzH,EAAkB,EAAlBA,KACZ0H,EAAe,CACjBJ,KAAK,WAAD,iBAAatH,EAAKA,YAAlB,iBAAa,EAAWqG,aAAxB,aAAa,EAAkBxI,KACnC8J,KAAK,UAAD,iBAAY3H,EAAKA,YAAjB,aAAY,EAAWnC,KAC3B+J,QAAQ,UAAD,iBAAY5H,EAAKA,YAAjB,aAAY,EAAW2H,OAQ5BnB,EAAwB,SAAdxG,EAAK3D,MACiB,YAAd2D,EAAK3D,KAAzB2D,EAAKA,KAAKwG,aACcpB,EAE5B,OACI,eAACnJ,EAAA,EAAD,WACI,cAAC,GAAD,CACIkH,UAAU,gBACVC,YAAapD,EAAKwG,QAClBjD,WAAW,eACXC,aAAa,oBAEbE,iBAAkBgE,EAAa1H,EAAK3D,QAGzB,SAAd2D,EAAK3D,MAAmB,cAAC,GAAD,CAErB8G,UAtBM,CACdmE,KAAM,oCACNM,QAAS,mCAoBoB5H,EAAK3D,MAC1B+G,YAAaoD,QClBhBqB,GAAiB,WAC1B,IAAMC,EAAWC,cAEXC,EAAmBC,YAAeC,KAClCC,EAAsBF,YAAeG,KACrCC,EAAyBJ,YAAeK,KAExCC,EAAkBN,YAAeO,KACjCC,EAAqBR,YAAeS,KACpCC,EAAwBV,YAAeW,KAEvCC,EAAkBZ,YAAea,KACjCC,EAAqBd,YAAee,KACpCC,EAAwBhB,YAAeiB,KAEvCC,EAAoBlB,YAAemB,KACnCC,EAAuBpB,YAAeqB,KACtCC,EAA0BtB,YAAeuB,KAE/C,EAAgDpQ,mBAAS,CACrDiL,MAAO,GACPmC,QAAS,KAFb,mBAAOiD,EAAP,KAAyBC,EAAzB,KAIA,EAAwBtQ,mBAA2BgD,GAAnD,mBAAOX,EAAP,KAAakO,EAAb,KACA,EAA0CvQ,mBAAS,IAAnD,mBAAOwQ,EAAP,KAAsBC,EAAtB,KAEMC,EAAsB,SAACC,GACzBF,GAAiB,SAAAG,GAAI,OAAIA,IAASD,EAAQ,GAAKA,MAG7CE,EAAsB,CACxBC,iBADwB,SACPC,EAAQC,GACrBtC,EAASuC,IAAoBC,UAAU,CACnCC,MAAOH,MAGfI,cANwB,SAMVlL,GACVwI,EAASuC,IAAoBI,QAAQnL,KAEzCoL,aATwB,SASXpL,EAAiBjD,GAC1ByL,EAASuC,IAAoBM,OAAO,CAChCrL,UACAjD,YAKNuO,EAAqB,CACvBV,iBADuB,SACNC,EAAQC,GACrBtC,EAAS+C,IAAmBP,UAAU,CAClCC,MAAOH,MAGfI,cANuB,SAMTM,GACVhD,EAAS+C,IAAmBJ,QAAQK,KAExCJ,aATuB,SASVI,GACThD,EAAS+C,IAAmBF,OAAOG,MAIrCC,EAAqB,CACvBb,iBADuB,SACNC,EAAQC,GACrBtC,EAASkD,IAAmBV,UAAU,CAClCC,MAAOH,MAGfI,cANuB,SAMTS,GACVnD,EAASkD,IAAmBP,QAAQQ,KAExCP,aATuB,SASVO,EAAgB3L,GACzBwI,EAASkD,IAAmBL,OAAO,CAC/BM,SACA3L,eAKN4L,EAAuB,CACzBhB,iBADyB,SACRC,EAAQC,GACrBtC,EAASqD,IAAqBb,UAAU,CACpCC,MAAOH,MAGfI,cANyB,SAMXY,GACVtD,EAASqD,IAAqBV,QAAQW,KAE1CV,aATyB,SASZU,GACTtD,EAASqD,IAAqBR,OAAOS,MAI7C,OACI,qCACI,eAAC,EAAeC,SAAhB,CAAyBzT,MAAO,CAC5B4E,iBAAkBf,EAClBgB,oBAAqBkN,GAFzB,UAII,cAAC,GAAD,CACI1S,MAAM,sCACN0L,SAAU0F,EAAuBiD,WACjC5I,SAA4B,UAAlBkH,EACVlO,QAAS,kBAAMoO,EAAoB,UAJvC,SAMK3B,EAAsB,cAAC,eAAD,IACjB,qCACE,cAAClM,EAAA,EAAD,CAAKkC,QAAQ,OAAOE,eAAe,WAAWkN,GAAI,EAAlD,SACI,cAACC,EAAA,EAAD,CACIC,MAAOC,KAAKC,KAAKtD,EAAuBiD,WAAajD,EAAuBuD,QAC5ExB,KAAM/B,EAAuBkC,MAC7B1S,SAAUoS,EAAoBC,iBAC9B/R,QAAQ,WACR0T,MAAM,UACNtU,KAAK,YAIb,cAACyM,EAAA,EAAD,CAAMC,WAAS,EAAC5I,QAAS,EAAzB,SACK2M,GAAoBA,EAAiBxP,KAAI,SAAAwH,GACtC,IAAM3D,EAAqB,WAAd2D,EAAK3D,KAAoB,qBAAa,mBAEnD,OACI,cAAC2H,EAAA,EAAD,CAAqBE,MAAI,EAAC4H,GAAI,EAA9B,SACI,cAAC,GAAD,CACIC,QAAS/L,EAAKnC,IACdxB,KAAMA,EACN2P,SAAwB,WAAdhM,EAAK3D,KACf4P,KAAMjM,EAAKkM,MACXC,UAAWnM,EAAKmM,UAChBC,UAAW,kBAAMnC,EAAoBO,cAAcxK,EAAKnC,MACxDwO,SAAU,kBAAMpC,EAAoBS,aAAa1K,EAAKnC,IAAKmC,EAAK3D,OAPpE,SASI,cAAC,GAAD,CAAc0I,UAAW/E,OAVtBA,EAAKnC,eAoBxC,cAAC,GAAD,CACI5G,MAAM,4CACN0L,SAAUgG,EAAsB2C,WAChC5I,SAA4B,SAAlBkH,EACVlO,QAAS,kBAAMoO,EAAoB,SAJvC,SAMKrB,EAAqB,cAAC,eAAD,IAChB,qCACE,cAACxM,EAAA,EAAD,CAAKkC,QAAQ,OAAOE,eAAe,WAAWkN,GAAI,EAAlD,SACI,cAACC,EAAA,EAAD,CACIC,MAAOC,KAAKC,KAAKhD,EAAsB2C,WAAa3C,EAAsBiD,QAC1ExB,KAAMzB,EAAsB4B,MAC5B1S,SAAU+S,EAAmBV,iBAC7B/R,QAAQ,WACR0T,MAAM,UACNtU,KAAK,YAIb,cAACyM,EAAA,EAAD,CAAMC,WAAS,EAAC5I,QAAS,EAAzB,SACKkN,GAAmBA,EAAgB/P,KAAI,SAAAmP,GACpC,OACI,cAAC3D,EAAA,EAAD,CAAqBE,MAAI,EAAC4H,GAAI,EAA9B,SACI,cAAC,GAAD,CACIzP,KAAMsL,EAAK2E,QAAQpV,KACnBqV,SAAwB,IAAd5E,EAAKtL,KACf0P,QAASpE,EAAK9J,IACdoO,KAAMtE,EAAKuE,MACXC,UAAWxE,EAAKwE,UAChB9H,MAAOsD,EAAKtD,MACZmC,QAASmB,EAAKnB,QACdkD,oBAAqBA,EACrB0C,UAAW,kBAAMxB,EAAmBJ,cAAc7C,EAAK9J,MACvDwO,SAAU,kBAAMzB,EAAmBF,aAAa/C,EAAK9J,MAVzD,SAYI,cAAC,GAAD,CAAamC,KAAM2H,OAbhBA,EAAK9J,eAuBxC,cAAC,GAAD,CACI5G,MAAM,0DACN0L,SAAUsG,EAAsBqC,WAChC5I,SAA4B,SAAlBkH,EACVlO,QAAS,kBAAMoO,EAAoB,SAJvC,SAMKf,EAAqB,cAAC,eAAD,IAChB,qCACE,cAAC9M,EAAA,EAAD,CAAKkC,QAAQ,OAAOE,eAAe,WAAWkN,GAAI,EAAlD,SACI,cAACC,EAAA,EAAD,CACIC,MAAOC,KAAKC,KAAK1C,EAAsBqC,WAAarC,EAAsB2C,QAC1ExB,KAAMnB,EAAsBsB,MAC5B1S,SAAUkT,EAAmBb,iBAC7B/R,QAAQ,WACR0T,MAAM,UACNtU,KAAK,YAIb,cAACyM,EAAA,EAAD,CAAMC,WAAS,EAAC5I,QAAS,EAAzB,SACKwN,GAAmBA,EAAgBrQ,KAAI,SAAA8O,GAAI,OACxC,cAACtD,EAAA,EAAD,CAAqBE,MAAI,EAAC4H,GAAI,EAA9B,SACI,cAAC,GAAD,CACIzP,KAAK,sCACL4P,KAAM3E,EAAK4E,MACXC,UAAW7E,EAAKkF,SAChBJ,UAAW,kBAAMrB,EAAmBP,cAAclD,EAAKzJ,MACvDwO,SAAU,kBAAMtB,EAAmBL,aAAapD,EAAKzJ,IAAKyJ,EAAKjB,MAAMxI,MALzE,SAOI,cAAC,GAAD,CAAayJ,KAAMA,OARhBA,EAAKzJ,eAiBpC,cAAC,GAAD,CACI5G,MAAM,uCACN0L,SAAU4G,EAAwB+B,WAClC5I,SAA4B,WAAlBkH,EACVlO,QAAS,kBAAMoO,EAAoB,WAJvC,SAMKT,EAAuB,cAAC,eAAD,IAClB,qCACE,cAACpN,EAAA,EAAD,CAAKkC,QAAQ,OAAOE,eAAe,WAAWkN,GAAI,EAAlD,SACI,cAACC,EAAA,EAAD,CACIC,MAAOC,KAAKC,KAAKpC,EAAwB+B,WAAa/B,EAAwBqC,QAC9ExB,KAAMb,EAAwBgB,MAC9B1S,SAAUqT,EAAqBhB,iBAC/B/R,QAAQ,WACR0T,MAAM,UACNtU,KAAK,YAIb,cAACyM,EAAA,EAAD,CAAMC,WAAS,EAAC5I,QAAS,EAAzB,SACK8N,GAAqBA,EAAkB3Q,KAAI,SAAAiU,GAOxC,OACI,cAACzI,EAAA,EAAD,CAAuBE,MAAI,EAAC4H,GAAI,EAAhC,SACI,cAAC,GAAD,CACIY,UAAQ,EAERrQ,KAXK,CACbiL,KAAM,oCACNK,KAAM,iCACNC,QAAS,mCAQc6E,EAAOpQ,MACtB4P,KAAMQ,EAAOP,MACbC,UAAWM,EAAON,UAClBC,UAAW,kBAAMlB,EAAqBV,cAAciC,EAAO5O,MAC3DwO,SAAU,kBAAMnB,EAAqBR,aAAa+B,EAAO5O,MAP7D,SASI,cAAC,GAAD,CAAYmC,KAAMyM,OAVfA,EAAO5O,kBAoB/B,WAAdpC,EAAKY,MAAqB,cAAC,EAAD,CACvBZ,KAAoB,WAAdA,EAAKY,KACXX,QAAS,kBAAMiO,EAAQvN,IAFA,SAIvB,cAAC,GAAD,CAAekD,QAAS7D,EAAK5C,OAGlB,WAAd4C,EAAKY,MAAqB,cAAC,EAAD,CACvBZ,KAAoB,WAAdA,EAAKY,KACXX,QAAS,kBAAMiO,EAAQvN,IAFA,SAIvB,cAAC,GAAD,CACI4D,KAAMyJ,U,sCCzRpBjP,GAAYC,aAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,CACFU,QAASvB,EAAMwB,QAAQ,GAEvB,iBAAkB,CACd8C,QAAS,OAET,eAAgB,CACZA,QAAS,OACTI,WAAY,SACZoO,KAAM,EAEN,YAAa,CACTnO,YAAa3E,EAAMwB,QAAQ,IAG/B,YAAa,CACT+G,WAAY,MAIpB,UAAW,CACPjE,QAAS,OACTI,WAAY,SAEZ,UAAW,CACP7B,SAAU,SACV9D,MAAOiB,EAAM6E,QAAQC,KAAKC,WAG9B,SAAU,CACNd,MAAO,EACP7C,OAAQ,EACRC,WAAY,OACZI,aAAc,MACdoL,aAAc,GAGlB,UAAW,CACPhK,SAAU,SACVtB,QAASvB,EAAMwB,QAAQ,GAAK,IAC5BC,aAAc,GACdJ,WAAY,aAKxB,YAAa,CACTE,QAASvB,EAAMwB,QAAQ,GAAK,KAC5BpB,UAAWJ,EAAMwB,QAAQ,GACzBsJ,UAAW9K,EAAM+S,QAAQ,SAKxBC,GAAc,SAAC,GAAiJ,IAA/IrR,EAA8I,EAA9IA,SAAUuQ,EAAoI,EAApIA,QAASC,EAA2H,EAA3HA,SAAUO,EAAiH,EAAjHA,SAAUG,EAAuG,EAAvGA,SAAUrQ,EAA6F,EAA7FA,KAAM4P,EAAuF,EAAvFA,KAAME,EAAiF,EAAjFA,UAAW9H,EAAsE,EAAtEA,MAAOmC,EAA+D,EAA/DA,QAASkD,EAAsD,EAAtDA,oBAAqB0C,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,SAC5I1Q,EAAUnB,KACVsS,EAAeC,qBAAWzQ,GAuBhC,OACI,eAACL,EAAA,EAAD,CAAKC,UAAWP,EAAQjB,KAAxB,UACI,eAACuB,EAAA,EAAD,CAAKC,UAAU,cAAf,UACI,eAACD,EAAA,EAAD,CAAKC,UAAU,YAAf,UACI,cAAC,IAAD,CAAMhC,GAAE,mBAAc+R,EAAKpO,KAA3B,SACI,cAACmP,GAAA,EAAD,CACI9Q,UAAU,SACV4F,IAAKmK,EAAKgB,UAFd,SAIKhB,EAAK/U,KAAK,OAInB,uBAAMgF,UAAU,UAAhB,UACI,cAACiE,EAAA,EAAD,CAAYjE,UAAU,OAAtB,SACI,cAAC,IAAD,CAAMhC,GAAE,mBAAc+R,EAAKpO,KAA3B,SACKoO,EAAK/U,SAId,uBAAMgF,UAAU,OAAhB,UACI,cAACiE,EAAA,EAAD,CAAYjE,UAAU,OAAtB,SACKgR,aAAyBf,KAG9B,sBAAMjQ,UAAU,QAEhB,cAACiE,EAAA,EAAD,CAAYjE,UAAU,OAAtB,SACKG,aAMjB,eAACJ,EAAA,EAAD,CAAKC,UAAU,sBAAf,UACI,cAACiR,GAAA,EAAD,CACIjR,UAAU,iBACVtD,MAAM,UACNT,QAAQ,WACRZ,KAAK,QACLoB,MAAO,CACHyU,YAAa,UACbxU,MAAO,UACP4F,YAAa,GACb2D,cAAe,WAEnBhG,QAASkQ,EAXb,qBAgBEL,GAAYO,IAAa,cAACY,GAAA,EAAD,CACvBjR,UAAU,iBACVtD,MAAM,UACNT,QAAQ,WACRZ,KAAK,QACLoB,MAAO,CACHyU,YAAa,UACbxU,MAAO,UACP4F,YAAa,GACb2D,cAAe,WAEnBhG,QAnFI,WAChB6P,EACAc,EAAarQ,oBAAb,6BACOqQ,EAAatQ,kBADpB,IAEIH,KAAM,SACNxD,GAAIkT,KAGHQ,IACc,OAAnB7C,QAAmB,IAAnBA,KAAsB,CAClBrF,MAAOA,GAAS,GAChBmC,QAASA,GAAW,KAExBsG,EAAarQ,oBAAb,6BACOqQ,EAAatQ,kBADpB,IAEIH,KAAM,SACNxD,GAAIkT,OAwD2B,SAatBQ,EAAW,sBAAc,eAG5BG,EAaI,cAACS,GAAA,EAAD,CACEjR,UAAU,iBACVtD,MAAM,UACNT,QAAQ,YACRZ,KAAK,QACLoB,MAAO,CACHwJ,cAAe,WANrB,wBAbO,cAACgL,GAAA,EAAD,CACTjR,UAAU,iBACVtD,MAAM,UACNT,QAAQ,YACRZ,KAAK,QACLoB,MAAO,CACHwJ,cAAe,WAEnBhG,QAASiQ,EARA,8BA2BrB,cAACpJ,GAAA,EAAD,CAAO9G,UAAU,OAAjB,SACKV,QC9LXhB,GAAYC,aAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,CACFU,QAASvB,EAAMwB,QAAQ,QAoChBgS,GAhCK,WAChB,IAAM1R,EAAUnB,KACVsN,EAAWC,cAEXuF,EAAqBrF,YAAesF,KACpCC,EAAoBvF,YAAewF,KACnCC,EAAoBzF,YAAe0F,KACnCC,EAAsB3F,YAAe4F,KAkB3C,OAhBAjS,qBAAU,WACNkM,EAASuC,IAAoByD,IAAIR,MAClC,CAACA,EAAoBxF,IAExBlM,qBAAU,WACNkM,EAAS+C,IAAmBiD,IAAIN,MACjC,CAACA,EAAmB1F,IAEvBlM,qBAAU,WACNkM,EAASkD,IAAmB8C,IAAIJ,MACjC,CAACA,EAAmB5F,IAEvBlM,qBAAU,WACNkM,EAASqD,IAAqB2C,IAAIF,MACnC,CAACA,EAAqB9F,IAGrB,cAAC7L,EAAA,EAAD,CAAKC,UAAWP,EAAQjB,KAAxB,SACI,cAAC,GAAD,O,iFC5BNF,GAAYC,cAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,CACFU,QAASvB,EAAMwB,QAAQ,GAEvB,gBAAiB,CACb8C,QAAS,OACTkE,WAAY,eA2DT0L,GAtDO,SAAC,GAAyD,IAAvDlR,EAAsD,EAAtDA,UAAW2C,EAA2C,EAA3CA,QAASwO,EAAkC,EAAlCA,qBACnCrS,EAAUnB,KAEhB,OACI,cAACyB,EAAA,EAAD,CAAKC,UAAWP,EAAQjB,KAAxB,SACI,eAAC,KAAD,CAAOuT,WAAYpR,EAAW2C,QAASA,EAAvC,UACI,cAAC,KAAD,CAAQ1B,MAAO,GAAIuG,MAAM,MAAM6J,UAAU,SAAY,SAErD,cAAC,KAAD,CACI7J,MAAM,8BACN6J,UAAU,QAEVpQ,MAAO,IACPX,MAAM,SACNgR,OAAQ,SAACnO,GAAD,OACJ,cAAC,cAAD,CAAaA,KAAMA,EAAnB,SACI,cAAC,KAAD,CACI8B,IAAK9B,EAAKiN,UACV1V,KAAK,cAPb,SAaR,cAAC,KAAD,CAAQ8M,MAAM,wBAASvG,MAAO,IAAKoQ,UAAU,YAAe,YAE5D,cAAC,KAAD,CAAQ7J,MAAM,gBAAW6J,UAAU,WAAc,WAEjD,cAAC,KAAD,CAAQ7J,MAAM,iBAAY6J,UAAU,QAAW,QAE/C,cAAC,KAAD,CACI7J,MAAM,yBAENlH,MAAM,SACNgR,OAAQ,SAACxP,EAAMyP,GAAP,OACJ,cAAC,KAAD,CACI/J,MAAM,mCACNgK,OAAO,SACPC,WAAW,WACXC,cAAe,CAAEC,QAAQ,GACzBC,UAAW,kBAAMT,EAAqBI,EAAO7N,MALjD,SAQI,cAAC,KAAD,CAAS8D,MAAM,SAAf,SACI,cAAC,IAAD,CAAQhI,KAAK,UAAUmS,QAAM,EAACzU,KAAM,cAAC2U,GAAA,EAAD,YAZ5C,gB,UCjDlBlU,GAAYC,aAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,OAwDKiU,GA1CM,WACjB,IAAMhT,EAAUnB,KAChB,EAA0CpB,mBAAgB,IAA1D,mBAAOwV,EAAP,KAAsBC,EAAtB,KACA,EAA8BzV,oBAAS,GAAvC,mBAAOoG,EAAP,KAAgBC,EAAhB,KAEA7D,qBAAU,WACNkT,MACD,IAEH,IAAMA,EAAgB,WAClBrP,GAAW,GAEXsP,KAAaC,cACRC,MAAK,SAAAC,GACFL,EAAoCK,EAAIlP,KAxBnCxH,KAAI,SAAC2W,EAAUzW,GAAX,MAAsB,CACvC6H,IAAK4O,EAAStR,IACdnF,MAAOA,EAAQ,EACfwT,MAAOiD,EAASjD,MAChBkD,SAAUD,EAAS9K,MACnBmC,QAAS2I,EAAS3I,QAClB6I,KAAMnC,aAAyBiC,EAAShD,gBAmBhC1M,GAAW,MAEd6P,OAAM,SAACC,GACJ9P,GAAW,GACXQ,IAAM/H,MAAMqX,EAAI1P,SAASG,KAAKlH,aAU1C,OACI,eAACmD,EAAA,EAAD,CAAKC,UAAWP,EAAQjB,KAAxB,UACK8E,GAAW,cAACgQ,GAAA,EAAD,IAEZ,cAAC,GAAD,CACIhQ,QAASA,EACT3C,UAAW+R,EACXZ,qBAbiB,SAACyB,GAC1BV,KAAaW,eAAeD,GACvBR,KAAKH,GACLQ,OAAM,SAACC,GAAD,OAActP,IAAM/H,MAAMqX,EAAI1P,SAASG,KAAKlH,mB,qCC4HhD6W,GAtKO,WAClB,IAAM7H,EAAWC,cACX6H,EAAS3H,YAAe4H,MACxBrQ,EAAUyI,YAAe6H,MAEzBC,EAAmB9H,YAAe+H,MACxC,EAA4C5W,oBAAS,GAArD,mBAAO6W,EAAP,KAAuBC,EAAvB,KACA,EAAoD9W,qBAApD,mBAAO+W,EAAP,KAA4BC,EAA5B,KAEA,EAAkDhX,qBAAlD,mBAAOiX,EAAP,KAA2BC,EAA3B,KACA,EAA0ClX,qBAA1C,mBAAOmX,EAAP,KAAsBC,EAAtB,KACA,EAAoCpX,wBAAmEgM,GAAvG,mBAAOqL,EAAP,KAAmBC,EAAnB,KAEA9U,qBAAU,WACNkM,EAAS6I,KAAaC,SAAShB,MAChC,CAAC9H,EAAU8H,IAmHd,OACI,eAAC3T,EAAA,EAAD,WACKuD,GAAW,cAACgQ,GAAA,EAAD,IAEZ,eAACvT,EAAA,EAAD,CAAKb,QAAS,EAAd,UACI,cAACa,EAAA,EAAD,CAAKqJ,GAAI,EAAT,SACI,cAAC,KAAD,CACIuL,aAxHC,SAACjB,GAClB9H,EAAS6I,KAAaG,mBAAmBlB,KAwHzBmB,aArHC,SAAC5G,EAAQ5J,GAC1B,IAAIyQ,EAAY,GAEhB,GAAY,UAARzQ,EACA,GAAI4J,EAAG,CACH,MAAwBA,EAAExQ,MAAM,KAAhC,mBAAOsX,EAAP,KAAcC,EAAd,KAEAF,EAAS,6BACFpB,GADE,IAELqB,QACAC,gBAGJF,EAAS,6BACFpB,GADE,IAELqB,MAAO9G,EACP+G,OAAQ/G,IAKR,YAAR5J,IACAyQ,EAAS,6BACFpB,GADE,mBAEJrP,EAAM4J,KAIfrC,EAAS6I,KAAarG,UAAU0G,KA0FhBG,kBAvFM,WACtBrJ,EAAS6I,KAAarG,UAAU,CAC5BC,MAAO,EACPqB,OAAQ,WAyFJ,cAAC,KAAD,CACIwF,iBA1BS,SAAChD,GACtB,IAAMiD,EAAkBtB,EAAiBuB,MAAK,SAAAjL,GAAK,OAAIA,EAAMA,MAAMxI,MAAQuQ,EAAO7N,OAC5EgR,EAAc,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAiBlQ,KAAK3I,KAAI,SAAA2I,GAAI,oCAAUA,GAAV,IAAgB7B,QAAS+R,EAAgBhL,MAAMxI,SAEhGwT,IACAjB,EAAqBiB,EAAgBhL,OACrCiK,EAAoBiB,GACpBrB,GAAkB,KAoBVsB,aA1DK,SAACpD,GAClBtG,EAAS6I,KAAac,YAAYrD,EAAO7N,YA6DpC4P,GAAuBE,GACpB,cAAC,KAAD,CAEIJ,eAAgBA,EAChBC,kBAAmBA,EACnBC,oBAAqBA,EACrBE,mBAAoBA,EACpBqB,sBAjEc,SAACC,GAC3B,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQH,EAAM,IAC9BnB,EAAiBoB,IA+DLG,mBA5DW,SAACJ,GACxB,IAAMK,EAA6CL,EAAMM,QAAO,SAACC,EAAUC,GAIvE,MAHsB,kBAAVA,EACRD,EAAI1R,IAAIqB,KAAKsQ,GACZD,EAAIxR,IAAImB,KAAKsQ,GACXD,IACR,CAAE1R,IAAK,GAAIE,IAAK,KACf0R,GAAS,EAEPC,EAAO,IAAIR,SAEbG,EAAWtR,IAAIsE,OAAS,IACxBoN,GAAS,EACTJ,EAAWtR,IAAIgB,SAAQ,SAAAyQ,GACnBE,EAAKP,OAAO,QAASK,OAI7BzB,EAAc,6BAAKsB,GAAN,IAAkBtR,IAAK0R,EAASC,OAAOjN,MA2CxCkN,kBApGU,SAACtS,GAEnBuQ,GACAA,EAAcuB,OAAO,SAAU9R,EAAKnC,KAIpC4S,GAAcA,EAAW/P,KACzB+P,EAAW/P,IAAIoR,OAAO,SAAU9R,EAAKnC,KAGzCmC,EAAI,6BACGA,GADH,IAEAtC,OAA+B,mBAAhBsC,EAAKtC,OAAuC,QAAhBsC,EAAKtC,OAAkCsC,EAAKtC,OACvFuD,UAAWsP,GAAgCvQ,EAAKiB,UAChDC,OAAQuP,GAA0BzQ,EAAKkB,SAG3C4G,EAAS6I,KAAa4B,YAAYvS,IAClCkQ,GAAkB,IAkFNsC,iBA/ES,SAACxS,GAEtB,IAAMyS,EAAc1C,EAAiBuB,MAAK,SAAApN,GAAI,OAAIA,EAAKmC,MAAMqM,WAAWC,SAAS3S,EAAKnC,QAEtF4U,GAAe3K,EAAS6I,KAAaiC,WAAb,6BAA6B5S,GAA7B,IAAmCV,QAASmT,EAAYpM,MAAMxI,UAmErEsS,EAAoBtS,SC7I9BgV,GAdG,WACd,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,gBAAgBC,OAAK,EAAjC,SACI,cAAC,GAAD,MAGJ,cAAC,IAAD,CAAOD,KAAK,oBAAZ,SACI,cAACE,GAAA,EAAD,U,mBCgFDC,GArFM,WACjB,IAAMnL,EAAWC,cACX6H,EAAS3H,YAAeiL,MACxB1T,EAAUyI,YAAekL,MAE/BvX,qBAAU,WACNkM,EAASsL,KAAWtF,IAAX,6BACF8B,GADE,IAELhE,OAAQ,SAEb,CAACgE,EAAQ9H,IAEZlM,qBAAU,WACN,OAAO,WACHkM,EAASsL,KAAWC,kBAEzB,CAACvL,IAqDJ,OACI,eAAC7L,EAAA,EAAD,WACKuD,GAAW,cAACgQ,GAAA,EAAD,IAEZ,eAACvT,EAAA,EAAD,CAAKb,QAAS,EAAd,UACI,cAACa,EAAA,EAAD,CAAKqJ,GAAI,EAAT,SACI,cAAC,KAAD,CAAWuL,aAzDN,SAACjZ,GAClBkQ,EAASsL,KAAWE,oBAAoB1b,KAwDWmZ,aArDlC,SAAC5G,EAAQ5J,GAC1B,IAAIyQ,EAAY,GAEhB,GAAY,UAARzQ,EACA,GAAI4J,EAAG,CACH,MAAwBA,EAAExQ,MAAM,KAAhC,mBAAOsX,EAAP,KAAcC,EAAd,KAEAF,EAAS,6BACFpB,GADE,IAELqB,QACAC,gBAGJF,EAAS,6BACFpB,GADE,IAELqB,MAAO9G,EACP+G,OAAQ/G,IAKR,aAAR5J,IACAyQ,EAAS,0CACFpB,GACAoB,GAFE,mBAGJzQ,EAAM4J,KAIH,WAAR5J,IACAyQ,EAAS,0CACFpB,GACAoB,GAFE,mBAGJzQ,EAAY,MAAN4J,GAAyB,MAANA,QAAoB/E,KAItD0C,EAASsL,KAAW9I,UAAU0G,KAgBiDG,kBAbzD,WACtBrJ,EAASsL,KAAW9I,UAAU,CAC1BC,MAAO,EACPqB,OAAQ,WAcJ,cAAC,KAAD,CAAWpM,QAASA,WC3ErB+T,GARE,WACb,OACI,cAACtX,EAAA,EAAD,UACI,cAAC,GAAD,O,sECYCuX,GAAY,SAAC,GAAiE,IAA/DtD,EAA8D,EAA9DA,kBAAmBuD,EAA2C,EAA3CA,gBAAiBjC,EAA0B,EAA1BA,aAC5D,EAAkCpY,mBAA0B,IAA5D,mBAAOyD,EAAP,KAAkB0C,EAAlB,KACMC,EAAUyI,YAAeyL,MACzBjO,EAAyBwC,YAAe0L,MAExC/D,EAAS3H,YAAe2L,MAC9B,EAAwCxa,mBAAgC,IAAxE,mBAAOya,EAAP,KAAqBC,EAArB,KACMhM,EAAWC,cAEXgM,EAAmB9L,YAAe+L,MAClCpQ,EAAUC,cAEVoQ,EAAU,CACZ,CACI5P,MAAO,MACP6J,UAAW,SACX3N,IAAK,SACLzC,MAAO,IAEX,CACIuG,MAAO,mCACP6J,UAAW,SACX3N,IAAK,SACLpD,MAAO,SACPW,MAAO,IACPqQ,OAAQ,SAAC+F,GAAD,OACJ,cAAC,KAAD,CAAQpS,IAAKoS,EAAOnO,IAAKxO,KAAK,YAGtC,CACI8M,MAAO,2BACP6J,UAAW,WACX3N,IAAK,YAET,CACI8D,MAAO,QACP6J,UAAW,QACX3N,IAAK,QACL4T,SAAU,CACNC,WAAW,GAEfjG,OAAQ,SAACnP,GAAD,OACJ,cAAC,KAAD,CAASqV,UAAU,UAAUhQ,MAAOrF,EAApC,SACKA,MAIb,CACIqF,MAAO,iBACP6J,UAAW,OACX3N,IAAK,QAET,CACI8D,MAAO,YACP6J,UAAW,SACX3N,IAAK,SACLzC,MAAO,IAEX,CACIuG,MAAO,aACP6J,UAAW,UACX3N,IAAK,UACLzC,MAAO,IACPX,MAAO,SACPgR,OAAQ,SAACmG,GACL,GAAIA,EACA,OAAO,cAACC,GAAA,EAAD,CACHxa,KAAM,cAACya,GAAA,EAAD,IACNvd,MAAM,QACN2B,MAAM,YACNrB,KAAK,YAIrB,CACI8M,MAAO,YACP6J,UAAW,WACX3N,IAAK,YAET,CACI8D,MAAO,0BACP6J,UAAW,WACX3N,IAAK,YAET,CACI8D,MAAO,4BACP6J,UAAW,SACX3N,IAAK,SACL4T,SAAU,CACNC,WAAW,GAEfjG,OAAQ,SAACtN,GAAD,OACJ,cAAC,KAAD,CAASwT,UAAU,UAAUhQ,MAAOxD,EAApC,SACKA,MAIb,CACIwD,MAAO,mBACP6J,UAAW,YACX3N,IAAK,aAET,CACI8D,MAAO,yBACP9D,IAAK,SACLzC,MAAO,IACP2W,MAAO,QACPtX,MAAO,SACPgR,OAAQ,SAACxP,EAAcyP,GAAf,OACJ,eAAC,KAAD,CAAO7W,KAAK,QAAZ,UACI,cAAC,KAAD,CAAS8M,MAAM,oBAAf,SACI,cAAC,IAAD,CACI1L,MAAO,CAAEuC,WAAY,UAAWkS,YAAa,WAC7C/Q,KAAK,UACLtC,KAAM,cAAC2a,GAAA,EAAD,IACNvY,QAAS,kBAAMyH,EAAQ/B,KAAR,mBAAyBuM,EAAO7N,WAIvD,cAAC,KAAD,CAAS8D,MAAM,WAAf,SACI,cAAC,IAAD,CAAQhI,KAAK,UAAUtC,KAAM,cAAC4a,GAAA,EAAD,IAAgBxY,QAAS,kBAAMyY,EAAexG,QAG/E,cAAC,KAAD,CACI/J,MAAM,6BACNgQ,UAAU,UACV5F,UAAW,kBAAM+C,EAAapD,IAC9BC,OAAO,QACPE,cAAe,CAAEC,QAAQ,GACzBF,WAAW,WANf,SAQI,cAAC,KAAD,CAASjK,MAAM,SAAf,SACI,cAAC,IAAD,CAAQhI,KAAK,UAAUmS,QAAM,EAACzU,KAAM,cAAC8a,GAAA,EAAD,gBAQ5DjZ,qBAAU,WACN,IAAMgG,EAAUmS,EAASvb,KAAI,SAACyT,EAAMvT,GAChC,IAAMoc,EAASpc,EAAQ,EAEvB,MAAO,CACH6H,IAAK0L,EAAKpO,IACViX,SACAR,QAASrI,EAAKqI,QACdS,SAAU9I,EAAK8I,SACf/V,MAAOiN,EAAKjN,MACZ9H,KAAM+U,EAAK/U,KACX8d,OAAQ/I,EAAK+I,OACbC,SAAUhJ,EAAKgJ,SACfC,SAAUjJ,EAAKiJ,SACfrU,OAAQoL,EAAKpL,OACbqT,OAAQjI,EAAKgB,UACbd,UAAWe,YAAyBjB,EAAKE,eAIjD5M,EAAaqC,GAEbkS,EAAgB,CACZqB,QAAS1P,EAAW8E,MACpB6K,SAAU3P,EAAWmG,OACrByJ,MAAO5P,EAAW6F,eAEvB,CAAC7F,EAAYmK,EAAQmE,IAExB,IAQMa,EAAiB,SAACxG,GACpB8B,GAAkB,GAElB,IAAMoF,EAAeC,YAAYnH,EAAO7N,IAAKwT,GAE7CN,EAAgB,CACZlT,IAAK+U,EAAazX,IAClB3G,KAAMoe,EAAape,KACnBod,QAASgB,EAAahB,QAAU,QAAU,OAC1CtV,MAAOsW,EAAatW,MACpBiW,SAAUK,EAAaL,SACvBC,SAAUI,EAAaJ,SACvBrU,OAAQyU,EAAazU,OACrBmU,OAAQM,EAAaN,UAI7B,OACI,cAAC,KAAD,CACI/G,WAAYpR,EACZoX,QAASA,EACTpc,SA7BkB,SAAC2d,GACvB1N,EAAS2N,KAAYnL,UAAZ,6BACFsF,GADE,IAELhE,OAAQ4J,EAAKJ,SACb7K,MAAOiL,EAAKL,aA0BZ1P,WAAYoO,EACZrU,QAASA,EACTkW,OAAQ,CAAErU,EAAG,S,+HCnMnBsU,GAA8B,CAChC,CACI/d,MAAO,QACPX,MAAO,SAEX,CACIW,MAAO,OACPX,MAAO,4BAIT2e,GAASC,OAAahK,MAAM,CAC9B3U,KAAM2e,OAEDC,KAAK,sGACLC,SACAC,IAAI,EAAG,uCACPC,IAAI,GAAI,wCACbjB,OAAQa,OAEHG,IAAI,EAAG,wCACPC,IAAI,GAAI,sCACbhB,SAAUY,OAELK,WACLhB,SAAUW,OAELK,WACLrV,OAAQgV,OAEHK,SAAS,2FACdlX,MAAO6W,OAEF7W,MAAM,yCAGFmX,GAAa,SAAC,GAA0E,IAAxElG,EAAuE,EAAvEA,eAAgBC,EAAuD,EAAvDA,kBAAmBkG,EAAoC,EAApCA,SAAUd,EAA0B,EAA1BA,aACtE,EAA4Ce,aAAQ,CAChDC,cAAehB,EACfiB,SAAUC,aAAYZ,MAFlBa,EAAR,EAAQA,aAActf,EAAtB,EAAsBA,QAASuf,EAA/B,EAA+BA,SAIzBlX,EAAUyI,YAAeyL,MAC/B,EAAeiD,KAAKN,UAAbhE,EAAP,oBAEA,EAAgCjZ,qBAAhC,mBAAO6b,EAAP,KAAiB2B,EAAjB,KACA,EAA8Cxd,mBAA0B,IAAxE,mBAAOyd,EAAP,KAAwBC,EAAxB,KAEA,EAAgC1d,qBAAhC,mBAAO8b,EAAP,KAAiB6B,EAAjB,KACA,EAA8C3d,mBAA0B,IAAxE,mBAAO4d,EAAP,KAAwBC,EAAxB,KACA,EAA0C7d,mBAA6B,IAAvE,mBAAO8d,EAAP,KAAsBC,EAAtB,KAEA,EAAoD/d,qBAApD,mBAAOge,EAAP,KAA2BC,EAA3B,KACA,EAAsCje,oBAAS,GAA/C,mBAAOke,EAAP,KAAoBC,EAApB,KACA,EAAkCne,oBAAS,GAA3C,mBAAOoe,EAAP,KAAkBC,EAAlB,KAEA7b,qBAAU,WACN2b,GAAe,GAEfG,KAAYC,SACP1I,MAAK,SAACpP,GACH,IAAM+X,EAAeC,YAAahY,EAASG,MAC3C8W,EAAmBc,GAEnB,IAAME,EAAmBF,EAAatG,MAAK,SAAA2D,GAAQ,OAAIA,EAAS8C,WAAazC,EAAaL,YAC1F2B,EAAYkB,GAGZE,KAAYC,kBAAkB3C,EAAaL,UAAUhG,MAAK,SAACpP,GACvD,IAAMqY,EAAerY,EAASG,KAE9BiX,EAAmBiB,GAEnB,IAAMC,EAAmBD,EAAa5G,MAAK,SAAA4D,GAAQ,OAAIA,EAAS6C,WAAazC,EAAaJ,YAC1F6B,EAAYoB,GAGZC,KAAUC,YAAY/C,EAAaL,SAAUK,EAAaJ,UAAUjG,MAAK,SAACpP,GACtE,IAAMyY,EAAazY,EAASG,KACtB5I,EAAUmhB,IAAW1X,OAAOhB,EAASG,MAE3CmX,EAAiB/f,GAEjB,IAAMohB,EAAgBF,EAAWhH,MAAK,SAAAzQ,GAAM,OAAIA,EAAOkX,WAAazC,EAAazU,UACjFwW,EAAsBmB,GACtBjB,GAAe,MAChBjI,OAAM,SAAAC,GACLkJ,QAAQC,IAAI,+BAAgCnJ,EAAIzW,SAChDye,GAAe,GACfE,GAAa,SAElBnI,OAAM,SAAAC,GACLkJ,QAAQC,IAAI,kCAAmCnJ,EAAIzW,SACnDye,GAAe,GACfE,GAAa,SAGpBnI,OAAM,SAAAC,GACHkJ,QAAQC,IAAI,kCAAmCnJ,EAAIzW,SACnDye,GAAe,GACfE,GAAa,QAGtB,CAACnC,EAAaJ,SAAUI,EAAaL,SAAUK,EAAazU,SAE/D,IAAM8X,EAAsB,uCAAG,WAAOxO,EAAQvS,GAAf,eAAA8H,EAAA,kEACvB9H,QADuB,IACvBA,OADuB,EACvBA,EAAOmgB,UADgB,wBAEvBnB,EAAYhf,GACZ8e,EAAS,WAAY9e,EAAMmgB,UAG3BhB,EAAY,IACZL,EAAS,SAAU,IACnBS,EAAiB,IAEjBI,GAAe,GAVQ,SAWwBS,KAAYC,kBAAkBrgB,EAAMmgB,UAX5D,OAWjBlY,EAXiB,OAYvBoX,EAAmBpX,EAASG,MAC5BuX,GAAe,GAbQ,4CAAH,wDAiBtBqB,EAAsB,uCAAG,WAAOzO,EAAQvS,GAAf,iBAAA8H,EAAA,kEACvB9H,QADuB,IACvBA,OADuB,EACvBA,EAAOmgB,UADgB,wBAEvBhB,EAAYnf,GACZ8e,EAAS,WAAY9e,EAAMmgB,UAE3BR,GAAe,GALQ,SAMsBa,KAAUC,YAAV,OAAsBpD,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAU8C,SAAoBngB,EAAMmgB,UANhF,OAMjBlY,EANiB,OAOjBzI,EAAUmhB,IAAW1X,OAAOhB,EAASG,MAE3CmX,EAAiB/f,GACjBmgB,GAAe,GAVQ,4CAAH,wDAkB5B,OACI,cAAC,KAAD,CAAMsB,SAAUpC,EAAaL,GAAW/D,KAAMA,EAA9C,SACI,cAAC,KAAD,CAAOhO,MAAM,qDAAgCyU,QAAS7I,EAAgB8I,SAAU,kBAAM7I,GAAkB,IAAQ8I,KANpG,WAChB3G,EAAK4G,UAKkI1K,cAAe,CAAE2K,SAAU,UAC1JC,eAAgB3Z,EAAS6O,OAAO,qBAAWC,WAAW,WAD1D,SAEI,cAACrS,EAAA,EAAD,UACI,eAAC,KAAD,CAAMmd,SAAU9B,EAAa/f,KAAK,QAAlC,UACKigB,GAAa,cAAC,KAAD,CAAO1e,QAAQ,gFAAyCuD,KAAK,UAE3E,cAAC,KAAD,CAAYA,KAAK,OAAOpF,MAAM,kBAAUC,KAAK,OAAOC,QAASA,EAAS+e,UAAQ,IAE9E,cAAC,KAAD,CAAY7Z,KAAK,QAAQlF,QAASA,EAASD,KAAK,QAAQD,MAAM,QAAQif,UAAU,IAEhF,cAAC,KAAD,CAAY7Z,KAAK,SAAS2Z,IAAI,IAAIC,IAAI,KAAKhf,MAAM,kCAAgBC,KAAK,SAASC,QAASA,EAAS+e,UAAQ,IAEzG,cAACmD,GAAA,EAAD,CAAeniB,KAAK,UAAUD,MAAM,cAASE,QAASA,EAASC,QAASue,KAEvEV,GAAY,cAAC,KAAD,CAAmBhe,MAAM,aAAQoN,MAAM,OAAOzM,MAAOqd,EAAUpd,SAAU8gB,EAAwBvhB,QAASyf,EAAiBxf,SAAqC,IAA3Bwf,EAAgB7R,UAEhKkQ,GAAyB,KAAbA,IAAoB,cAAC,KAAD,CAAmBje,MAAM,2BAAiBoN,MAAM,OAAOzM,MAAOsd,EAAUrd,SAAU+gB,EAAwBxhB,QAAS4f,EAAiB3f,SAAqC,IAA3B2f,EAAgBhS,SAE/LoS,GAAsB,cAACpgB,GAAA,EAAD,CAAaC,MAAM,oBAAUC,KAAK,SAASI,aAAc8f,EAAoBjgB,QAASA,EAASE,SAAmC,IAAzB6f,EAAclS,OAA6B5N,QAAS8f,EAAe7R,GAAI,GAAIC,GAAI,c,iDCtK/NgU,GAAWC,KAAXD,OAEF9e,GAAYC,cAAW,SAACZ,GAAD,MAAmB,CAC5CrC,OAAQ,CACJA,OAAO,GAAD,OAAKqC,EAAMwB,QAAQ,GAAnB,cAA2BxB,EAAMwB,QAAQ,IAAzC,MACNyC,MAAO,YAIF0b,GAAY,SAAC,GAA8D,IAA5D3I,EAA2D,EAA3DA,aAAcE,EAA6C,EAA7CA,aAAcI,EAA+B,EAA/BA,kBAC9CvB,EAAiB3H,YAAe2L,MAChCjY,EAAUnB,KAChB,EAAoCpB,mBAASwW,EAAO6J,YAApD,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,EAAwCvgB,mBAASwW,EAAOgK,WAAxD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwC1gB,mBAASwW,EAAOmK,WAAxD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoC7gB,mBAASwW,EAAOsK,SAApD,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,EAAgDhhB,mBAAUwW,EAAOsB,QAA2B,WAAjBtB,EAAOqB,MAAzB,UAAkDrB,EAAOqB,MAAzD,YAAkErB,EAAOsB,aAAW9L,GAA7I,mBAAOiV,EAAP,KAAwBC,EAAxB,KACA,EAAqDlhB,mBAAUwW,EAAOsB,QAA2B,cAAjBtB,EAAOqB,MAAzB,UAAqDrB,EAAOqB,MAA5D,YAAqErB,EAAOsB,aAAW9L,GAArJ,mBAAOmV,EAAP,KAA2BC,EAA3B,KAEQC,EAAqBC,eAArBD,iBACAE,EAAqBC,eAArBD,iBACAE,EAAmBC,eAAnBD,eAwBFE,EAAmB,SAAC5Q,EAAQ5J,GAC9B,OAAQA,GACJ,IAAK,YACDuZ,EAAgB3P,GAChB,MACJ,IAAK,YACD8P,EAAgB9P,GAChB,MACJ,IAAK,UACDiQ,EAAcjQ,GAItB4G,EAAa5G,EAAG5J,IAGdya,EAAqB,SAAC7Q,EAAQ5J,GAChC,GAAI4J,EAAG,CACH,MAAgBA,EAAExQ,MAAM,KAEV,WAFd,qBAGI2gB,EAAqBnQ,GACrBqQ,OAAuBpV,KAEvBoV,EAAuBrQ,GACvBmQ,OAAqBlV,SAGzBkV,EAAqBnQ,GACrBqQ,EAAuBrQ,GAG3B4G,EAAa5G,EAAG5J,IAGpB,OACI,eAACyD,EAAA,EAAD,CAAMC,WAAS,EAAC5I,QAAS,EAAzB,UACI,cAAC2I,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI8W,GAAI,EAAvB,SACI,cAAC,KAAD,CAAS5W,MAAM,iEAAf,SACI,cAAC,KAAD,CAAOnI,UAAWP,EAAQnE,OAAQD,KAAK,QAAQ2jB,YAAY,6CAAwBtjB,MAAO8hB,EAAY7hB,SA7D/F,SAACsS,GACpBwP,EAAcxP,EAAEgR,OAAOvjB,OACvB,IAAMoZ,EAAiB,6BAChBpB,GADgB,IAEnB6J,WAAY2B,YAAcjR,EAAEgR,OAAOvjB,OACnC2S,MAAO,IAGXsG,EAAaG,IAqD+HqK,YAAU,EAACC,OAAQ,cAACC,GAAA,EAAD,UAI3J,cAACvX,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI8W,GAAI,EAAvB,SACI,eAACjX,EAAA,EAAD,CAAMC,WAAS,EAAC5I,QAAS,EAAzB,UACI,cAAC2I,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI8W,GAAI,EAAvB,SACI,cAAC,KAAD,CAAS5W,MAAM,+FAAf,SACI,eAAC,KAAD,CAAQgX,YAAU,EAACxjB,SAAU,SAACsS,GAAD,OAAY4G,EAAa5G,EAAG,UAAUvS,MAAOgY,EAAO4L,MAAOtf,UAAWP,EAAQnE,OAAQ0jB,YAAY,aAAa3jB,KAAK,QAAjJ,UACI,cAAC+hB,GAAD,CAAQ1hB,MAAM,QAAd,mBACA,cAAC0hB,GAAD,CAAQ1hB,MAAM,OAAd,4CAKZ,cAACoM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI8W,GAAI,EAAvB,SACI,cAAC,KAAD,CAAS5W,MAAM,2DAAf,SACI,eAAC,KAAD,CAAQgX,YAAU,EAACxjB,SAAU,SAACsS,GAAD,OAAY6Q,EAAmB7Q,EAAG,UAAUvS,MAAOyiB,EAAiBne,UAAWP,EAAQnE,OAAQ0jB,YAAY,mBAAW3jB,KAAK,QAAxJ,UACI,cAAC+hB,GAAD,CAAQ1hB,MAAM,aAAd,kDACA,cAAC0hB,GAAD,CAAQ1hB,MAAM,cAAd,yDAKZ,cAACoM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI8W,GAAI,EAAvB,SACI,cAAC,KAAD,CAAS5W,MAAM,oFAAf,SACI,eAAC,KAAD,CAAQgX,YAAU,EAACxjB,SAAU,SAACsS,GAAD,OAAY6Q,EAAmB7Q,EAAG,UAAUvS,MAAO2iB,EAAoBre,UAAWP,EAAQnE,OAAQ0jB,YAAY,6BAAgB3jB,KAAK,QAAhK,UACI,cAAC+hB,GAAD,CAAQ1hB,MAAM,gBAAd,kDACA,cAAC0hB,GAAD,CAAQ1hB,MAAM,iBAAd,8DAOpB,cAACoM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI8W,GAAI,EAAvB,SACI,eAACjX,EAAA,EAAD,CAAMC,WAAS,EAAC5I,QAAS,EAAzB,UACI,cAAC2I,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI8W,GAAI,EAAvB,SACI,cAAC,KAAD,CAAS5W,MAAM,uFAAf,SACI,cAAC,KAAD,CACIxM,SAAU,SAACsS,GAAD,OAAY4Q,EAAiB5Q,EAAG,cAC1CvS,MAAOiiB,EACP3d,UAAWP,EAAQnE,OACnBD,KAAK,QACLH,QAASqjB,EACTS,YAAY,sCACZO,aAAc,SAACC,EAAYjjB,GAAb,OACuF,IAAjG2iB,YAAc3iB,EAAQxB,OAAO0kB,cAAcC,QAAQR,YAAcM,EAAWC,iBAEhFN,YAAU,QAKtB,cAACrX,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI8W,GAAI,EAAvB,SACI,cAAC,KAAD,CAAS5W,MAAM,8FAAf,SACI,cAAC,KAAD,CACIxM,SAAU,SAACsS,GAAD,OAAY4Q,EAAiB5Q,EAAG,cAC1CjO,UAAWP,EAAQnE,OACnBI,MAAOoiB,EACPziB,KAAK,QACLH,QAASujB,EACTO,YAAY,oDACZO,aAAc,SAACC,EAAYjjB,GAAb,OACuF,IAAjG2iB,YAAc3iB,EAAQxB,OAAO0kB,cAAcC,QAAQR,YAAcM,EAAWC,iBAEhFN,YAAU,QAKtB,cAACrX,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI8W,GAAI,EAAvB,SACI,cAAC,KAAD,CAAS5W,MAAM,8FAAf,SACI,cAAC,KAAD,CACIxM,SAAU,SAACsS,GAAD,OAAY4Q,EAAiB5Q,EAAG,YAC1CjO,UAAWP,EAAQnE,OACnBI,MAAOuiB,EACP5iB,KAAK,QACLH,QAASyjB,EACTK,YAAY,6CACZO,aAAc,SAACC,EAAYjjB,GAAb,OACuF,IAAjG2iB,YAAc3iB,EAAQxB,OAAO0kB,cAAcC,QAAQR,YAAcM,EAAWC,iBAEhFN,YAAU,QAKtB,cAACrX,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI8W,GAAI,EAAvB,SACI,cAAC,KAAD,CAAS5W,MAAM,iEAAf,SACI,cAAC,IAAD,CAAQnI,UAAWP,EAAQnE,OAAQ2E,QA5IhC,SAACgO,GACxBgH,IAEAwI,EAAc,IACdG,EAAgB,IAChBG,EAAgB,IAChBG,EAAc,IACdE,OAAqBlV,GACrBoV,OAAuBpV,IAoI6D/I,KAAK,UAAUmS,QAAM,EAACjX,KAAK,QAA3F,iCCxFbskB,GAlGM,WACjB,IAAM/T,EAAWC,cACX6H,EAAS3H,YAAe2L,MAExBpU,EAAUyI,YAAeyL,MAC/B,EAA4Cta,oBAAS,GAArD,mBAAO6W,EAAP,KAAuBC,EAAvB,KACA,EAAwC9W,qBAAxC,mBAAOkc,EAAP,KAAqB7B,EAArB,KAEA7X,qBAAU,WACNkM,EAAS2N,KAAYqG,QAAQlM,MAC9B,CAACA,EAAQ9H,IAEZ,IAAMiU,EAAgB,uCAAG,WAAO/b,GAAP,eAAAN,EAAA,sDACfsc,EADe,6BAEdhc,GAFc,IAGjBsU,QAA0B,UAAjBtU,EAAKsU,UAGlBxM,EAAS2N,KAAYwG,WAAWD,IAChC9L,GAAkB,GAPG,2CAAH,sDAyDtB,OACI,eAACjU,EAAA,EAAD,WACKuD,GAAW,cAACgQ,GAAA,EAAD,IAEZ,eAACvT,EAAA,EAAD,CAAKb,QAAS,EAAd,UACI,cAACa,EAAA,EAAD,CAAKqJ,GAAI,EAAT,SACI,cAAC,GAAD,CAAWuL,aAjDN,SAACjZ,GAClBkQ,EAAS2N,KAAY3E,mBAAmBlZ,KAgDWmZ,aA7ClC,SAAC5G,EAAQ5J,GAC1B,IAAIyQ,EAAY,GAEhB,GAAY,UAARzQ,EACA,GAAI4J,EAAG,CACH,MAAwBA,EAAExQ,MAAM,KAAhC,mBAAOsX,EAAP,KAAcC,EAAd,KAEAF,EAAS,6BACFpB,GADE,IAELqB,QACAC,gBAGJF,EAAS,6BACFpB,GADE,IAELqB,MAAO9G,EACP+G,OAAQ/G,IAKR,UAAR5J,GAA2B,YAARA,GAA6B,cAARA,GAA+B,cAARA,IAC/DyQ,EAAS,0CACFpB,GACAoB,GAFE,mBAGJzQ,EAAM4J,KAIfrC,EAAS2N,KAAYnL,UAAU0G,KAgBgDG,kBAbzD,WACtBrJ,EAAS2N,KAAYnL,UAAU,CAC3BC,MAAO,EACPqB,OAAQ,WAcJ,cAAC,GAAD,CACIsE,kBAAmBA,EACnBuD,gBAAiBA,EACjBjC,aA5DK,SAACpD,GAClBtG,EAAS2N,KAAYyG,WAAW9N,EAAO7N,SA8D9B+U,GACG,cAAC,GAAD,CAEIrF,eAAgBA,EAChBC,kBAAmBA,EACnBkG,SAAU2F,EACVzG,aAAcA,GAJTA,EAAa/U,YChF3B4b,GAXE,WAEb,OACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOrJ,KAAK,eAAZ,SACI,cAAC,GAAD,S,qECCVtY,GAAYC,cAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,CACFoD,MAAO,OACP7C,OAAQ,IACRkD,QAAS,OACTE,eAAgB,SAChBE,WAAY,SACZoG,UAAW9K,EAAM+S,QAAQ,GACzBxR,QAASvB,EAAMwB,QAAQ,EAAG,GAC1BC,aAAc,EAEd,UAAW,CACPwC,MAAO,SACP7C,OAAQ,SACRkD,QAAS,OACTkE,WAAY,SACZ/G,aAAc,MACdJ,WAAYrB,EAAM6E,QAAQ6D,QAAQC,KAClChE,YAAa3E,EAAMwB,QAAQ,KAE3B,UAAW,CACPoD,KAAM,OACNX,MAAO,MACP7C,OAAQ,QAIhB,YAAa,CACT,cAAe,CACXyB,SAAU,UACV0F,WAAY,KAGhB,UAAW,CACPxJ,MAAOiB,EAAM6E,QAAQC,KAAKC,UAC1BuD,cAAe,mBA4BhBia,GAtBO,SAAC,GAAsC,IAApCriB,EAAmC,EAAnCA,KAAM9C,EAA6B,EAA7BA,MAAO0L,EAAsB,EAAtBA,SAC5BhH,EAAUnB,KAEhB,OACI,eAACyB,EAAA,EAAD,CAAKC,UAAWP,EAAQjB,KAAxB,UACI,sBAAMwB,UAAU,OAAhB,SACKnC,IAGL,uBAAMmC,UAAU,SAAhB,UACI,cAACiE,EAAA,EAAD,CAAYjE,UAAU,WAAW/D,QAAQ,KAAzC,SACKwK,IAGL,cAACxC,EAAA,EAAD,CAAYjE,UAAU,OAAtB,SACKjF,WCvDfuD,GAAYC,cAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,CACFyD,QAAS,OACTke,oBAAqB,uCACrB/d,IAAK,QAIPge,GAAgB,CAClBC,QAAS,CACLxiB,KAAM,cAACyiB,GAAA,EAAD,IACNvlB,MAAO,qBAEXoP,MAAO,CACHtM,KAAM,cAAC0iB,GAAA,EAAD,IACNxlB,MAAO,mBAEXylB,SAAU,CACN3iB,KAAM,cAAC4iB,GAAA,EAAD,IACN1lB,MAAO,uBAEX2lB,OAAQ,CACJ7iB,KAAM,cAAC8iB,GAAA,EAAD,IACN5lB,MAAO,iBAEX0Q,KAAM,CACF5N,KAAM,cAAC+iB,GAAA,EAAD,IACN7lB,MAAO,qBAIF8lB,GAAa,SAAC,GAAqB,IAAnB/c,EAAkB,EAAlBA,KACnBrE,EAAUnB,KAEhB,OACI,cAACyB,EAAA,EAAD,CAAKC,UAAWP,EAAQjB,KAAM6C,UAAU,UAAxC,SACKiE,OAAOwb,QAAQhd,GAAMxH,KAAI,YAAmB,IAAD,mBAAhB+H,EAAgB,KAAX3I,EAAW,KAExC,EAAwB0kB,GAAc/b,GAA9BxG,EAAR,EAAQA,KAAM9C,EAAd,EAAcA,MAEd,OACI,cAAC,GAAD,CAEI8C,KAAMA,EACN9C,MAAOA,EACP0L,SAAU/K,GAHL2I,S,UC5CvB/F,GAAYC,cAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,CACFU,QAASvB,EAAMwB,QAAQ,GACvBsJ,UAAW9K,EAAM+S,QAAQ,GAEzB,aAAc,CACVlQ,SAAU,SACV0F,WAAY,IACZpE,aAAcnE,EAAMwB,QAAQ,IAGhC,UAAW,CACPD,QAASvB,EAAMwB,QAAQ,EAAG,SAqBvB4hB,GAhBgB,SAAC,GAAgC,IAA9BzhB,EAA6B,EAA7BA,SAAUvE,EAAmB,EAAnBA,MAClC0E,EAAUnB,KAEhB,OACI,eAACwI,GAAA,EAAD,CAAO9G,UAAWP,EAAQjB,KAA1B,UACI,cAACyF,EAAA,EAAD,CAAYjE,UAAU,QAAtB,SACKjF,IAGL,cAACgF,EAAA,EAAD,CAAKC,UAAU,OAAf,SACKV,Q,UCvBXhB,GAAYC,cAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,CACF,YAAa,CACToD,MAAO,GACP7C,OAAQ,IAGZ,aAAc,CACVyB,SAAU,UAGd,UAAW,CACPA,SAAU,gBAmEPwgB,GA9DgB,SAAC,GAAqB,IAAnBld,EAAkB,EAAlBA,KACxBrE,EAAUnB,KAChB,EAAsCpB,mBAAS,GAA/C,mBAAO+jB,EAAP,KAAoBC,EAApB,KAOA,OACI,eAACnhB,EAAA,EAAD,CAAKC,UAAWP,EAAQjB,KAAxB,UACI,cAACqC,EAAA,EAAD,CAAOxF,KAAK,QAAZ,SACI,cAAC8F,EAAA,EAAD,UACK2C,EAAKiF,MAVD,EAUOkY,EAVP,EAUmCA,EAVnC,GAWA3kB,KAAI,SAAA6kB,GAAQ,OACT,eAACpgB,EAAA,EAAD,CAA6BqgB,OAAK,EAAlC,UACI,cAACpgB,EAAA,EAAD,CACIvE,MAAO,CACHoO,aAAc,GAFtB,SAKI,cAAC,cAAD,CAAa/G,KAAMqd,EAASnR,MAA5B,SACI,cAAC,IAAD,CAAMhS,GAAE,mBAAcmjB,EAASnR,MAAMrO,KAArC,SACI,cAACmP,GAAA,EAAD,CAAQlL,IAAKub,EAASnR,MAAMe,UAAW/Q,UAAU,SAAjD,SACKmhB,EAASnR,MAAMhV,KAAK,WAMrC,cAACgG,EAAA,EAAD,CAAWC,MAAM,OAAjB,SACI,cAACgD,EAAA,EAAD,CAAYjE,UAAU,UAAtB,SACKmhB,EAAS7W,YAIlB,cAACtJ,EAAA,EAAD,CAAWC,MAAM,QAAjB,SACI,cAACgD,EAAA,EAAD,CAAYjE,UAAU,OAAtB,SACKgR,aAAyBmQ,EAASlR,iBAvBhCkR,EAASxf,YAgCxC,cAAC0f,GAAA,EAAD,CACIhgB,UAAU,MACVigB,mBAAoB,GACpBC,mBAAoB,gBAAGC,EAAH,EAAGA,KAAMxjB,EAAT,EAASA,GAAIuR,EAAb,EAAaA,MAAb,gBAA4BiS,EAA5B,YAAoCxjB,EAApC,sBAAyD,IAAXuR,EAAA,UAAkBA,EAAlB,0CAA8CvR,KAChHyjB,mBAAmB,uBACnBC,mBAAmB,wBACnBnS,MAAOzL,EAAKgF,OACZ6Y,YAnDS,EAoDTzT,KAAM+S,EACNW,aAnDa,SAAC3T,EAAQC,GAC9BgT,EAAehT,UCpBR2T,GAVQ,WACnB,IAAMC,EAAgB/V,YAAegW,MAErC,OACI,cAAC,GAAD,CAAwBhnB,MAAM,gDAA9B,SACI,cAACinB,GAAD,CAAuBle,KAAMge,EAAcG,QAAQC,gBCEzD5jB,GAAYC,cAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,CACF,YAAa,CACToD,MAAO,GACP7C,OAAQ,IAGZ,WAAY,CACRyB,SAAU,UAGd,UAAW,CACPA,SAAU,gBAmEP2hB,GA9DU,SAAC,GAAqB,IAAnBre,EAAkB,EAAlBA,KAClBrE,EAAUnB,KAChB,EAAsCpB,mBAAS,GAA/C,mBAAO+jB,EAAP,KAAoBC,EAApB,KAOA,OACI,eAACnhB,EAAA,EAAD,CAAKC,UAAWP,EAAQjB,KAAxB,UACI,cAACqC,EAAA,EAAD,CAAOxF,KAAK,QAAZ,SACI,cAAC8F,EAAA,EAAD,UACK2C,EAAKiF,MAVD,EAUOkY,EAVP,EAUmCA,EAVnC,GAWA3kB,KAAI,SAAA6N,GAAK,iBACN,eAACpJ,EAAA,EAAD,CAA0BqgB,OAAK,EAA/B,UACI,cAACpgB,EAAA,EAAD,CACIvE,MAAO,CACHoO,aAAc,GAFtB,SAKI,cAAC,cAAD,CAAa/G,KAAMqG,EAAM6F,MAAzB,SACI,cAAC,IAAD,CAAMhS,GAAE,6BAAcmM,EAAM6F,aAApB,aAAc,EAAarO,KAAnC,SACI,cAACmP,GAAA,EAAD,CAAQlL,IAAG,UAAEuE,EAAM6F,aAAR,aAAE,EAAae,UAAW/Q,UAAU,SAA/C,mBACKmK,EAAM6F,aADX,aACK,EAAahV,KAAK,WAMnC,cAACgG,EAAA,EAAD,CAAWC,MAAM,OAAjB,SACI,cAACgD,EAAA,EAAD,CAAYjE,UAAU,QAAtB,SACKmK,EAAMnP,SAIf,cAACgG,EAAA,EAAD,CAAWC,MAAM,QAAjB,SACI,cAACgD,EAAA,EAAD,CAAYjE,UAAU,OAAtB,SACKgR,aAAyB7G,EAAM8F,iBAvB7B9F,EAAMxI,YAgCrC,cAAC0f,GAAA,EAAD,CACIhgB,UAAU,MACVigB,mBAAoB,GACpBC,mBAAoB,gBAAGC,EAAH,EAAGA,KAAMxjB,EAAT,EAASA,GAAIuR,EAAb,EAAaA,MAAb,gBAA4BiS,EAA5B,YAAoCxjB,EAApC,sBAAyD,IAAXuR,EAAA,UAAkBA,EAAlB,0CAA8CvR,KAChHyjB,mBAAmB,uBACnBC,mBAAmB,wBACnBnS,MAAOzL,EAAKgF,OACZ6Y,YAnDS,EAoDTzT,KAAM+S,EACNW,aAnDa,SAAC3T,EAAQC,GAC9BgT,EAAehT,UCpBRkU,GAVK,WAChB,IAAMN,EAAgB/V,YAAegW,MAErC,OACI,cAAC,GAAD,CAAwBhnB,MAAM,sDAA9B,SACI,cAAC,GAAD,CAAkB+I,KAAMge,EAAcG,QAAQI,YCN7CC,GAAmB,WAC5B,OACI,cAACviB,EAAA,EAAD,UACI,eAAC+H,EAAA,EAAD,CAAMC,WAAS,EAAC5I,QAAS,EAAzB,UACI,cAAC2I,EAAA,EAAD,CAAME,MAAI,EAACua,GAAI,EAAf,SACI,cAAC,GAAD,MAEJ,cAACza,EAAA,EAAD,CAAME,MAAI,EAACua,GAAI,EAAf,SACI,cAAC,GAAD,Y,wCC2CLC,GA5CI,WACf,IAAMC,EAASC,mBACT9W,EAAWC,cACXiW,EAAqB/V,YAAegW,MAEpCY,EAAO,SAAC,GAAD,IAAGnmB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACT,cAACmmB,GAAA,EAAD,CAASnmB,MAAOA,EAAOsT,KAAM+R,EAAce,KAAKC,QAAQtmB,GAAQumB,UAAQ,KAiB5E,OAdArjB,qBAAU,WACN+iB,EAAOxJ,QAAU+J,IAEjB,IAAMC,EAAW,SAACnf,GACd8H,EAASsX,KAAiBC,cAAcrf,KAK5C,OAFA2e,EAAOxJ,QAAQmK,GAAGC,KAAaC,OAAQL,GAEhC,WAAO,IAAD,EACT,UAAAR,EAAOxJ,eAAP,SAAgBsK,IAAIF,KAAaC,OAAQL,MAE9C,CAACrX,IAGA,cAAC7L,EAAA,EAAD,CAAKtD,MAAO,CACRmF,MAAO,OACP7C,OAAQ,QAFZ,SAII,cAAC,KAAD,UACK,gBAAG6C,EAAH,EAAGA,MAAO7C,EAAV,EAAUA,OAAV,OACG,cAAC,KAAD,CACIykB,UAAW1B,EAAce,KAAKC,QAAQha,OACtC2a,SAAU,GACV1kB,OAAQA,EACR6C,MAAOA,EAJX,SAMK+gB,UCRVe,GA5BQ,SAACnoB,GACpB,IAAMumB,EAAqB/V,YAAegW,MAEpCY,EAAO,SAAC,GAAD,IAAGnmB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACT,cAACmmB,GAAA,EAAD,CAASnmB,MAAOA,EAAOsT,KAAM+R,EAAce,KAAKc,WAAWnnB,MAG/D,OACI,cAACuD,EAAA,EAAD,CAAKtD,MAAO,CACRmF,MAAO,OACP7C,OAAQ,QAFZ,SAII,cAAC,KAAD,UACK,gBAAG6C,EAAH,EAAGA,MAAO7C,EAAV,EAAUA,OAAV,OACG,cAAC,KAAD,CACIykB,UAAW1B,EAAce,KAAKc,WAAW7a,OACzC2a,SAAU,GACV1kB,OAAQA,EACR6C,MAAOA,EAJX,SAMK+gB,UC1BnBrkB,GAAYC,aAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,CACFO,OAAQ,OAER,iBAAkB,CACdyB,SAAU,SACVyF,cAAe,UAEf,WAAY,CACRjH,WAAYrB,EAAM6E,QAAQ6D,QAAQC,KAClC5J,MAAO,SAIf,kBAAmB,CACfqC,OAAQ,IACRe,SAAU,OACV2I,UAAW9K,EAAM+S,QAAQ,GACzBkT,cAAejmB,EAAMwB,QAAQ,GAE7B,yBAA0B,CACtByC,MAAO,SAMViiB,GAAYC,gBAAK,WAC1B,IAAMrkB,EAAUnB,KAChB,EAAgCpB,mBAAS,UAAzC,mBAAO6mB,EAAP,KAAiBC,EAAjB,KAEA,OACI,eAACjkB,EAAA,EAAD,CAAKC,UAAWP,EAAQjB,KAAxB,UACI,cAACuB,EAAA,EAAD,CAAKC,UAAU,WAAf,SACI,eAACikB,GAAA,EAAD,CAAa/nB,WAAS,EAAtB,UACI,cAAC+U,GAAA,EAAD,CACIjR,UAAS,sBAA8B,WAAb+jB,EAAwB,SAAW,IAC7D9jB,QAAS,kBAAM+jB,EAAY,WAF/B,kCAOA,cAAC/S,GAAA,EAAD,CACIjR,UAAS,sBAA8B,eAAb+jB,EAA4B,SAAW,IACjE9jB,QAAS,kBAAM+jB,EAAY,eAF/B,qCASR,cAACld,GAAA,EAAD,CAAO9G,UAAU,eAAjB,SACkB,WAAb+jB,EAAwB,cAAC,GAAD,IACnB,cAAC,GAAD,Y,UC3ChBzlB,GAAYC,aAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,CACFU,QAASvB,EAAMwB,QAAQ,GACvBsJ,UAAW9K,EAAM+S,QAAQ,GAEzB,aAAc,CACV7O,UAAW,SACXrB,SAAU,SACVsB,aAAcnE,EAAMwB,QAAQ,SAqBlC+kB,GAAa,SAACpgB,GAChB,MAjBqB,SAACA,GACtB,IAAIqgB,EAAU,EACVC,EAAW,EAWf,OATA9e,OAAOwb,QAAQhd,GAAM0B,SAAQ,YAAmB,IAAD,6BACrCA,SAAQ,SAACL,GACX,MAAwBA,EAAE8K,UAAlBoU,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEdH,EAAUE,EAAOF,EAAUE,EAAOF,EAClCC,EAAWE,EAAQF,GAAYC,IAASF,EAAUG,EAAQF,QAI3D,CAAED,UAASC,YAIUG,CAAiBzgB,GAAvCsgB,EAAN,EAAMA,SAAUD,EAAhB,EAAgBA,QAEhB,OAAO,IAAIK,MAAM,IAAIjiB,KAAK,IAAIjG,KAAI,WAM9B,QALM8nB,IAAa,IACfA,EAAW,GACXD,GAAoB,GAGjB,CACHE,KAAMF,EACNG,MAAOF,EAAW,MAEvBK,WAIDC,GAAe,SAAC3M,EAAoB4M,GACtC,OAAO5M,EAAQzb,KAAI,SAAA6I,GACf,IAAMyf,EAAgBD,EAAOvP,MAAK,SAAAyP,GAC9B,MAAwBA,EAAM5U,UAAtBqU,EAAR,EAAQA,MAAOD,EAAf,EAAeA,KAEf,OAAOlf,EAAEmf,QAAUA,GAASnf,EAAEkf,OAASA,KAG3C,OAAIO,EACOA,EAAcne,SAElB,SAIFqe,GAAYhB,gBAAK,YAAsB,IAAnBhgB,EAAkB,EAAlBA,KACvBrE,EAAUnB,KAEVymB,EAAkB9b,mBAAQ,WAC5B,GAAKnF,EAAL,CAEA,IAAMiU,EAAUmM,GAAWpgB,GACrBkhB,EAASjN,EAAQzb,KAAI,SAAA6I,GAAC,yBAAcA,EAAEmf,MAAhB,qBAA6Bnf,EAAEkf,SACrDY,EAAmBP,GAAa3M,EAASjU,EAAKmhB,kBAC9CC,EAAuBR,GAAa3M,EAASjU,EAAKohB,sBAGxD,MAAO,CACHF,SACAG,SAAU,CACN,CACIpqB,MAAO,+DACP+I,KAPgB4gB,GAAa3M,EAASjU,EAAKshB,qBAQ3C7iB,MAAM,EACN8iB,gBAAiB,uBACjBnU,YAAa,WAEjB,CACInW,MAAO,8DACP+I,KAAMohB,EACN3iB,MAAM,EACN8iB,gBAAiB,uBACjBnU,YAAa,WAEjB,CACInW,MAAO,sEACP+I,KAAMmhB,EACN1iB,MAAM,EACN8iB,gBAAiB,wBACjBnU,YAAa,gBAI1B,CAACpN,IAEJ,OACI,eAACgD,GAAA,EAAD,CAAO9G,UAAWP,EAAQjB,KAA1B,UACI,cAACyF,EAAA,EAAD,CAAYjE,UAAU,QAAQ/D,QAAQ,KAAtC,4EAIC8oB,GAAmB,cAAC,KAAD,CAAMjhB,KAAMihB,UChHtCzmB,GAAYC,aAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,CACFoD,MAAO,IACP1C,QAASvB,EAAMwB,QAAQ,EAAG,QAIrBmmB,GAAgBxB,gBAAK,YAAiC,IAA9BzoB,EAA6B,EAA7BA,KAAMkqB,EAAuB,EAAvBA,UACjC9lB,EAAUnB,KAEVwF,EAAOmF,mBAAQ,WACjB,GAAK5N,GAASkqB,EAAd,CAEA,IAAIP,EAAmB,GACnBlhB,EAAiB,GACjBuhB,EAA4B,GAuBhC,OArBIhqB,IACA2pB,EAAS,CAAC,8CAA0B,uCACpClhB,EAAO,CAACzI,EAAKmqB,SAAUnqB,EAAKoqB,UAAYpqB,EAAKmqB,UAC7CH,EAAkB,CACd,oBACA,oBAIJE,IACAA,EAAU/f,SAAQ,SAAAL,GACd6f,EAAOrf,KAAKR,EAAEnK,MACd8I,EAAK6B,KAAKR,EAAEsB,aAEhB4e,EAAkB,CACd,oBACA,oBACA,sBAID,CACHL,SACAG,SAAU,CACN,CACIrhB,OACAuhB,wBAIb,CAAChqB,EAAMkqB,IAEV,OACI,cAACxlB,EAAA,EAAD,CAAKC,UAAWP,EAAQjB,KAAxB,SACKsF,GAAQ,cAAC,KAAD,CAAUA,KAAMA,SC3CrC4hB,KAAQC,SACJC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA/d,KACAge,MAGJ,IAAM5nB,GAAYC,cAAW,SAACZ,GAAD,MAAmB,CAC5Ca,KAAM,CACFU,QAASvB,EAAMwB,QAAQ,KAEvB,mBAAoB,CAChB8C,QAAS,OACTE,eAAgB,eAChBsG,UAAW9K,EAAM+S,QAAQ,GACzB3S,UAAWJ,EAAMwB,QAAQ,SAqEtBgnB,GAhEO,SAAC5qB,GACnB,IAAMkE,EAAUnB,KACVmkB,EAASC,mBAET9W,EAAWC,cACXiW,EAAgB/V,YAAegW,MA8BrC,OA5BAriB,qBAAU,WACN+iB,EAAOxJ,QAAU+J,IAEjB,IAAMoD,EAAgB,SAACtiB,GACnB8H,EAASsX,KAAiBmD,eAAeviB,KAGvCwiB,EAAqB,SAACxiB,GACxB8H,EAASsX,KAAiBqD,oBAAoBziB,KAG5C0iB,EAAqB,SAAC1iB,GACxB8H,EAASsX,KAAiBuD,aAAa3iB,KAS3C,OANA2e,EAAOxJ,QAAQmK,GAAGC,KAAaqD,gBAAiBN,GAChD3D,EAAOxJ,QAAQmK,GAAGC,KAAanB,WAAYoE,GAC3C7D,EAAOxJ,QAAQmK,GAAGC,KAAaqD,gBAAiBF,GAEhD5a,EAASsX,KAAiByD,WAEnB,WAAO,IAAD,MACT,UAAAlE,EAAOxJ,eAAP,SAAgBsK,IAAIF,KAAaqD,gBAAiBN,GAClD,UAAA3D,EAAOxJ,eAAP,SAAgBsK,IAAIF,KAAanB,WAAYoE,GAC7C,UAAA7D,EAAOxJ,eAAP,SAAgBsK,IAAIF,KAAaqD,gBAAiBF,MAEvD,CAAC5a,IAGA,eAAC7L,EAAA,EAAD,CAAKC,UAAWP,EAAQjB,KAAxB,UACKsjB,EAAc8E,YAAc,cAAC,GAAD,CAAY9iB,KAAMge,EAAc8E,aAE7D,eAAC7mB,EAAA,EAAD,CAAKsP,GAAI,EAAT,UACI,eAACvH,EAAA,EAAD,CAAMC,WAAS,EAAC5I,QAAS,EAAzB,UACI,eAAC2I,EAAA,EAAD,CAAME,MAAI,EAACua,GAAI,GAAf,UACI,cAAC,GAAD,IAEA,eAACzb,GAAA,EAAD,CAAO9G,UAAU,gBAAjB,UACI,cAACslB,GAAD,CAAeC,UAAWzD,EAAc+E,SAAStB,YAEjD,cAACD,GAAD,CAAejqB,KAAMymB,EAAc+E,SAASxrB,aAIpD,cAACyM,EAAA,EAAD,CAAME,MAAI,EAACua,GAAI,EAAf,SACI,cAACsB,GAAD,SAIR,cAAC9jB,EAAA,EAAD,CAAKsP,GAAI,EAAT,SACI,cAACyV,GAAD,CAAWhhB,KAAMge,EAAc+C,iBCxF3CiC,GAAoBhqB,IAApBgqB,OAAQC,GAAYjqB,IAAZiqB,QAoDDC,UAlDG,WACd,OACI,eAAC,IAAD,CAAQvqB,MAAO,CAAEwqB,UAAW,SAA5B,UACI,cAACH,GAAD,UACI,cAAC,IAAD,CACI3mB,KAAK,UACLtC,KAAM,cAACqpB,EAAA,EAAD,IACN7rB,KAAK,QAHT,SAKI,cAAC,IAAD,CAAM2C,GAAG,IAAT,gCAMR,eAAC,IAAD,WACI,cAAC,EAAD,IAEA,cAAC+oB,GAAD,CAAStqB,MAAO,CAAEuC,WAAY,QAA9B,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO4X,KAAK,mBAAZ,SACI,cAAC,GAAD,MAGJ,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACI,cAAC,GAAD,MAGJ,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACI,cAAC,GAAD,MAGJ,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACI,cAAC,GAAD,MAGJ,cAAC,IAAD,CAAOA,KAAK,kBAAZ,SACI,cAAC,GAAD,MAGJ,cAAC,IAAD,CAAOA,KAAK,kBAAZ,SACI,cAAC,GAAD","file":"static/js/6.cecd8a84.chunk.js","sourcesContent":["import { FormHelperText } from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { FieldOption } from 'models';\r\nimport { Control, useController } from 'react-hook-form';\r\n\r\ninterface Props {\r\n    label: string;\r\n    name: string;\r\n    control: Control<any>;\r\n    options: Array<FieldOption>;\r\n    disabled?: boolean;\r\n    defaultValue?: any;\r\n    size?: 'medium' | 'small'\r\n    margin?: 'dense' | 'none' | 'normal'\r\n    [key: string]: any\r\n}\r\n\r\nexport const SelectField = ({ label, name, control, options, disabled = false, defaultValue, size = 'medium', margin = 'normal', ...props }: Props) => {\r\n    const { field: { value, onChange, onBlur, ref }, fieldState: { invalid, error } } = useController({\r\n        name,\r\n        control\r\n    })\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" fullWidth disabled={disabled} size={size} margin={margin}>\r\n            <InputLabel>{label}</InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                value={value}\r\n                onChange={onChange}\r\n                onBlur={onBlur}\r\n                inputRef={ref}\r\n                label={label}\r\n                inputProps={props}\r\n                error={invalid}\r\n                defaultValue={defaultValue}\r\n                {...props}\r\n            >\r\n                {\r\n                    options.map((option, index) => (\r\n                        <MenuItem key={index} value={option.value}>{option.label}</MenuItem>\r\n                    ))\r\n                }\r\n            </Select>\r\n            <FormHelperText style={{ color: '#f44336' }} id=\"component-error-text\">{error?.message}</FormHelperText>\r\n        </FormControl>\r\n    )\r\n}\r\n","import { FileDoneOutlined, HomeOutlined, PieChartOutlined, ReadOutlined, SolutionOutlined, UserOutlined } from '@ant-design/icons'\r\nimport { Layout, Menu } from 'antd'\r\nimport { useState } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nconst { Sider } = Layout\r\n\r\nexport const AdminSider = () => {\r\n    const location = useLocation()\r\n    const [collapsed, setCollapsed] = useState(false)\r\n\r\n    return (\r\n        <Sider\r\n            collapsible\r\n            collapsed={collapsed}\r\n            onCollapse={(collapsed) => setCollapsed(collapsed)}\r\n        >\r\n            <Menu defaultSelectedKeys={[location.pathname.split('/')[2]]} mode=\"inline\" theme='dark'>\r\n                <Menu.Item key='dashboard' icon={<PieChartOutlined />} style={{ marginTop: 0 }}>\r\n                    <Link to='/admin/dashboard'>Thống kê</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key='users' icon={<UserOutlined />}>\r\n                    <Link to='/admin/users'>Tài khoản</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key='motels' icon={<HomeOutlined />}>\r\n                    <Link to='/admin/motels'>Nhà trọ</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key='posts' icon={<ReadOutlined />}>\r\n                    <Link to='/admin/posts'>Bài viết</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key='approves' icon={<FileDoneOutlined />}>\r\n                    <Link to='/admin/approves'>Danh sách duyệt</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key='feedback' icon={<SolutionOutlined />}>\r\n                    <Link to='/admin/feedback'>Góp ý</Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n        </Sider>\r\n    )\r\n}\r\n","import { Box, makeStyles, Theme } from \"@material-ui/core\"\r\nimport { useEffect } from \"react\"\r\n\r\ninterface Props {\r\n    open: boolean\r\n    onClose: () => void\r\n    children: any\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        position: 'fixed',\r\n        inset: 0,\r\n        opacity: 0,\r\n        zIndex: 10000000000000,\r\n        transform: 'scale(0)',\r\n        transition: '300ms',\r\n\r\n        '&.active': {\r\n            transform: 'scale(1)',\r\n            opacity: 1,\r\n        },\r\n\r\n        '& .overlay-close': {\r\n            height: 40,\r\n            background: 'rgba(0,0,0,0.45)',\r\n            cursor: 'pointer'\r\n        },\r\n\r\n        '& .body': {\r\n            height: 'calc(100vh - 40px)',\r\n            background: '#fff',\r\n            padding: theme.spacing(2.5),\r\n            borderRadius: '20px 20px 0 0',\r\n        }\r\n    }\r\n}))\r\n\r\nconst ModalUp = ({ children, open, onClose }: Props) => {\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n        const body: any = document.querySelector(\"body\");\r\n\r\n        if (open) {\r\n            body.style.overflow = \"hidden\"\r\n        } else {\r\n            body.style.overflow = \"auto\"\r\n        }\r\n\r\n        return () => {\r\n            body.style.overflow = \"auto\"\r\n        }\r\n    }, [open])\r\n\r\n    return (\r\n        <Box className={`${classes.root} ${open ? 'active' : ''}`}>\r\n            <div className=\"overlay-close\" onClick={onClose} />\r\n\r\n            <Box className=\"body\">\r\n                {children}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ModalUp\r\n","import { createContext } from 'react';\r\n\r\nexport interface OpenModalApprove {\r\n  type: string;\r\n  id: string;\r\n}\r\n\r\ninterface ApproveContextState {\r\n  openModalApprove: OpenModalApprove;\r\n  setOpenModalApprove: (state: OpenModalApprove) => void;\r\n}\r\n\r\nexport const initialApproveContext = {\r\n  type: '',\r\n  id: '',\r\n};\r\n\r\nconst ApproveContext = createContext<ApproveContextState>({\r\n  openModalApprove: initialApproveContext,\r\n  setOpenModalApprove: () => {},\r\n});\r\n\r\nexport default ApproveContext;\r\n","import { makeStyles, Table, TableBody, TableCell, TableHead, TableRow, Theme } from '@material-ui/core'\r\nimport { Room } from 'models'\r\nimport { changeRoomToTable } from 'utils'\r\n\r\ninterface Props {\r\n    rooms: Room[]\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        '& .MuiTableCell-head': {\r\n            fontSize: '0.6rem'\r\n        },\r\n\r\n        '& .MuiTableCell-body': {\r\n            fontSize: '0.65rem'\r\n        },\r\n\r\n        '& .status': {\r\n            fontSize: '0.65rem !important',\r\n            padding: '1px 6px !important'\r\n        }\r\n    }\r\n}))\r\n\r\nconst TableRoom = ({ rooms }: Props) => {\r\n    const classes = useStyles()\r\n    const dataTable = changeRoomToTable(rooms)\r\n\r\n    return (\r\n        <Table className={classes.root} size='small'>\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell></TableCell>\r\n                    <TableCell align=\"center\">Giá thuê</TableCell>\r\n                    <TableCell align=\"center\">Trống/Tổng phòng</TableCell>\r\n                    <TableCell align=\"center\">Diện tích</TableCell>\r\n                    <TableCell align=\"center\" style={{ maxWidth: 150 }}>Tiện ích</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n                {dataTable.map((row) => (\r\n                    <TableRow key={row._id}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                            {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{row.price}</TableCell>\r\n                        <TableCell align=\"center\">{row.status}</TableCell>\r\n                        <TableCell align=\"center\">{row.area}</TableCell>\r\n                        <TableCell align=\"left\">{row.additional}</TableCell>\r\n                    </TableRow>\r\n                ))}\r\n            </TableBody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default TableRoom\r\n","import { Box, makeStyles, Table, TableBody, TableCell, TableHead, TableRow, Theme, Typography } from '@material-ui/core'\r\nimport { Email, Facebook, Phone } from '@material-ui/icons'\r\nimport approveApis from 'api/approve'\r\nimport { ReactComponent as Zalo } from 'assets/images/zalo.svg'\r\nimport { LoadingAdmin } from 'components/Common'\r\nimport { ComparisonMotel, Response, School } from 'models'\r\nimport { useEffect, useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport TableRoom from '../Motels/TableRoom'\r\n\r\ninterface Props {\r\n    motelId: string\r\n}\r\n\r\ninterface TableRowModel {\r\n    label: string\r\n    old: any\r\n    new: any\r\n    key: string\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        height: '100%',\r\n\r\n        '& *::-webkit-scrollbar': {\r\n            width: 0\r\n        },\r\n\r\n        '& > .title': {\r\n            textAlign: 'center',\r\n            fontSize: '1.5rem',\r\n            marginBottom: theme.spacing(2)\r\n        },\r\n\r\n        '& .table': {\r\n            margin: 'auto',\r\n            height: 'calc(100% - 40px)',\r\n            overflow: 'auto',\r\n\r\n            '& .thumbnail': {\r\n                maxHeight: 400,\r\n                width: '100%',\r\n                objectFit: 'cover'\r\n            },\r\n\r\n            '& .list-img': {\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n                gap: 10,\r\n\r\n                '& > .img': {\r\n                    width: '25%',\r\n\r\n                    '& .img': {\r\n                        width: '100%',\r\n                        height: 80,\r\n                        objectFit: 'cover'\r\n                    }\r\n                }\r\n            },\r\n\r\n            '& .list-contact': {\r\n                '& .row': {\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n\r\n                    '&:not(:last-child)': {\r\n                        marginBottom: theme.spacing(1)\r\n                    },\r\n\r\n                    '& svg': {\r\n                        width: 20,\r\n                        height: 20,\r\n                        marginRight: theme.spacing(1),\r\n                        fill: theme.palette.text.secondary\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}))\r\n\r\nconst listContactIcon = {\r\n    phone: <Phone />,\r\n    email: <Email />,\r\n    facebook: <Facebook />,\r\n    zalo: <Zalo />\r\n}\r\n\r\nconst ComparingBody = ({ motelId }: Props) => {\r\n    const classes = useStyles()\r\n\r\n    const [dataTable, setDataTable] = useState<TableRowModel[]>([])\r\n    const [loading, setLoading] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchComparisonMotel = async () => {\r\n            setLoading(true)\r\n\r\n            try {\r\n                const response: Response<ComparisonMotel> = await approveApis.getComparisonMotel(motelId)\r\n                const mapData = mapComparisonMotel(response.data)\r\n\r\n                setDataTable(mapData)\r\n\r\n                setLoading(false)\r\n            } catch (error: any) {\r\n                setLoading(false)\r\n                toast.error(error.response.data.message)\r\n            }\r\n        }\r\n\r\n        fetchComparisonMotel()\r\n    }, [motelId])\r\n\r\n    if (loading) return <LoadingAdmin size='large' />\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Typography\r\n                className='title'\r\n                variant='h3'\r\n            >\r\n                So sánh dữ liệu thay đổi\r\n            </Typography>\r\n\r\n            <Box className='table'>\r\n                <Table stickyHeader>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell style={{\r\n                                width: '10%'\r\n                            }}></TableCell>\r\n                            <TableCell style={{\r\n                                width: '45%'\r\n                            }}>\r\n                                Dữ liệu hiện tại\r\n                            </TableCell>\r\n\r\n                            <TableCell style={{\r\n                                width: '45%'\r\n                            }}>\r\n                                Dữ liệu thay đổi\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {dataTable.map(row => {\r\n                            const oldRow = mapRowTable(row.key, row.old)\r\n                            const newRow = mapRowTable(row.key, row.new)\r\n\r\n                            return (\r\n                                <TableRow key={row.key}>\r\n                                    <TableCell>{row.label}</TableCell>\r\n\r\n                                    <TableCell>{oldRow}</TableCell>\r\n\r\n                                    <TableCell>{newRow}</TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ComparingBody\r\n\r\nfunction mapComparisonMotel(data: ComparisonMotel) {\r\n    const listLabel = {\r\n        name: 'Tên nhà trọ',\r\n        address: 'Địa chỉ',\r\n        school: 'Trường học lân cận',\r\n        desc: 'Thông tin mô tả',\r\n        contact: 'Liên hệ',\r\n        phone: 'Điện thoại',\r\n        email: 'Email',\r\n        facebook: 'Facebook',\r\n        zalo: 'Zalo',\r\n        status: 'Trạng thái',\r\n        available: 'Phòng trống',\r\n        thumbnail: 'Ảnh bìa',\r\n        images: 'Ảnh khác',\r\n        room: 'Phòng trọ'\r\n    }\r\n\r\n    const listConvertData = {\r\n        school: (school: School[]) => {\r\n            return school.map(x => x.name).join(',')\r\n        },\r\n        status: (status: boolean) => status ? 'Còn phòng' : 'Hết phòng'\r\n    }\r\n\r\n    const result: TableRowModel[] = []\r\n\r\n\r\n    Object.keys(data.old).forEach(key => {\r\n        // @ts-ignore\r\n        if (!listLabel[key]) return\r\n\r\n        // convert data to stable data for table\r\n        // @ts-ignore\r\n        const oldData = listConvertData[key] ? listConvertData[key](data.old[key]) : data.old[key]\r\n        // @ts-ignore\r\n        const newData = listConvertData[key] ? listConvertData[key](data.new[key]) : data.new[key]\r\n\r\n        result.push({\r\n            // @ts-ignore\r\n            label: listLabel[key],\r\n            old: oldData ?? null,\r\n            new: newData ?? null,\r\n            key\r\n        })\r\n    })\r\n\r\n    return result\r\n}\r\n\r\nfunction mapRowTable(key: string, data: any) {\r\n    if (data === null) return ''\r\n\r\n    switch (key) {\r\n        case 'thumbnail':\r\n            return (\r\n                <img className='thumbnail' src={data} alt='' />\r\n            )\r\n        case 'images':\r\n            return (\r\n                <ul className='list-img'>\r\n                    {data.map((imgUrl: string, idx: number) => (\r\n                        <li key={idx} className=\"img\">\r\n                            <img src={imgUrl} alt='' />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )\r\n        case 'contact':\r\n            return (\r\n                <ul className=\"list-contact\">\r\n                    {Object.keys(data).map((key: string) => {\r\n                        if (!data[key]) return null\r\n\r\n                        return (\r\n                            <li key={key} className='row'>\r\n                                {/* @ts-ignore */}\r\n                                {listContactIcon[key]}\r\n                                {/* @ts-ignore */}\r\n                                <Typography className='text' component='span'>\r\n                                    {data[key]}\r\n                                </Typography>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            )\r\n        case 'room':\r\n            return (\r\n                <TableRoom rooms={data} />\r\n            )\r\n        default:\r\n            return (\r\n                <Typography className='text' component='span'>\r\n                    {data.toString()}\r\n                </Typography>\r\n            )\r\n    }\r\n}\r\n","import { Accordion, AccordionSummary, Paper, Theme, Typography } from \"@material-ui/core\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\ninterface Props {\r\n    children: any\r\n    label: string\r\n    isExpand: boolean\r\n    quantity: number\r\n    onClose: () => void\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        '& .MuiAccordionSummary-root': {\r\n            '& .label': {\r\n                fontSize: '1rem',\r\n                textTransform: 'uppercase',\r\n                fontWeight: 500,\r\n            },\r\n\r\n            '& .amount': {\r\n                display: 'grid',\r\n                placeItems: 'center',\r\n                width: 18,\r\n                height: 18,\r\n                marginLeft: theme.spacing(1),\r\n                background: theme.palette.primary.main,\r\n                fontSize: '0.65em',\r\n                color: '#fff',\r\n                borderRadius: '50%'\r\n            }\r\n        },\r\n\r\n        '& .wrapper': {\r\n            padding: theme.spacing(1),\r\n        }\r\n    }\r\n}))\r\n\r\nconst ApproveLayout = ({ children, label, isExpand, quantity, onClose }: Props) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Accordion\r\n            className={classes.root}\r\n            expanded={isExpand}\r\n            onChange={onClose}\r\n        >\r\n\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n            >\r\n                <Typography\r\n                    className='label'\r\n                    variant='h3'\r\n                >\r\n                    {label}\r\n                </Typography>\r\n\r\n                <Typography className=\"amount\" component='span'>\r\n                    {quantity}\r\n                </Typography>\r\n            </AccordionSummary>\r\n\r\n            <Paper className='wrapper'>\r\n                {children}\r\n            </Paper>\r\n        </Accordion>\r\n    )\r\n}\r\n\r\nexport default ApproveLayout\r\n","import { Box, Grid, Theme, Tooltip, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\ninterface Props {\r\n    labelLeft: string\r\n    contentLeft: string\r\n    titleContentLeft?: string\r\n    linkContentLeft?: string\r\n    labelRight?: string\r\n    contentRight?: string\r\n    titleContentRight?: string\r\n    linkContentRight?: string\r\n    wordBreak?: 'normal' | 'break-all' | 'keep-all' | 'break-word'\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        marginBlock: theme.spacing(1.2),\r\n\r\n        '& .row-content': {\r\n            fontSize: '0.9rem',\r\n\r\n            '&.link': {\r\n                cursor: 'pointer',\r\n                transition: '300ms',\r\n\r\n                '&:hover': {\r\n                    color: theme.palette.primary.main\r\n                }\r\n            }\r\n        }\r\n    }\r\n}))\r\n\r\nconst AddRowContent = ({ labelLeft, contentLeft, titleContentLeft, linkContentLeft, labelRight, contentRight, titleContentRight, linkContentRight, wordBreak = 'break-word' }: Props) => {\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n\r\n    const handleNavigate = (isLeft: boolean) => {\r\n        isLeft && linkContentLeft && history.push(linkContentLeft)\r\n        linkContentRight && history.push(linkContentRight)\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Grid container spacing={1}>\r\n                <Grid item sm={labelRight ? 6 : 12}>\r\n                    <Tooltip title={titleContentLeft ?? ''} arrow>\r\n                        <Typography\r\n                            className={`row-content ${linkContentLeft ? 'link' : ''}`}\r\n                            onClick={() => handleNavigate(true)}\r\n                        >\r\n                            {labelLeft}:&#xa0;&#xa0;&#xa0;{contentLeft}\r\n                        </Typography>\r\n                    </Tooltip>\r\n                </Grid>\r\n\r\n                {labelRight && <Grid item sm={6}>\r\n                    <Tooltip title={titleContentRight ?? ''} arrow>\r\n                        <Typography\r\n                            className={`row-content ${linkContentRight ? 'link' : ''}`}\r\n                            style={{\r\n                                wordBreak\r\n                            }}\r\n                            onClick={() => handleNavigate(false)}\r\n                        >\r\n                            {labelRight}:&#xa0;&#xa0;&#xa0;{contentRight}\r\n                        </Typography>\r\n                    </Tooltip>\r\n                </Grid>}\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddRowContent\r\n","import { Box, Theme } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport { MotelApprove } from \"models\"\r\nimport { useMemo } from \"react\"\r\nimport Carousel from 'react-elastic-carousel'\r\nimport AddRowContent from \"../common/AddRowContent\"\r\nimport TableRoom from \"./TableRoom\"\r\n\r\ninterface Props {\r\n    dataMotel: MotelApprove\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        '& .carousel': {\r\n            '& .rec-carousel': {\r\n                position: 'relative',\r\n            },\r\n\r\n            '& .rec-slider-container': {\r\n                margin: 0\r\n            },\r\n\r\n            '& .rec-arrow': {\r\n                position: 'absolute',\r\n                width: 25,\r\n                height: 40,\r\n                lineHeight: 'unset',\r\n                fontSize: 17,\r\n                background: 'rgba(0, 0, 0, 0.4)',\r\n                minWidth: 'unset',\r\n                borderRadius: 0,\r\n                border: \"none\",\r\n                outline: 'none',\r\n                boxShadow: 'none',\r\n                color: '#fff',\r\n\r\n                '&:disabled': {\r\n                    cursor: 'pointer'\r\n                },\r\n\r\n                '&:hover:enabled': {\r\n                    background: 'rgba(0, 0, 0, 0.4)',\r\n                },\r\n\r\n                '&.rec-arrow-right': {\r\n                    right: 0\r\n                },\r\n\r\n                '&.rec-arrow-left': {\r\n                    left: 0,\r\n                    zIndex: 5\r\n                }\r\n            },\r\n\r\n            '& .images': {\r\n                width: '100%',\r\n                height: 65,\r\n                objectFit: 'cover'\r\n            }\r\n        }\r\n    }\r\n}))\r\n\r\nconst AddBodyMotel = ({ dataMotel }: Props) => {\r\n    const classes = useStyles()\r\n\r\n    const desc = dataMotel.desc.length > 120 ? `${dataMotel.desc.slice(0, 120)}...` : dataMotel.desc\r\n\r\n    const listImg = [dataMotel.thumbnail, ...dataMotel.images]\r\n\r\n    const school = useMemo(() => {\r\n        return dataMotel.school.map(x => x.name).join(',')\r\n    }, [dataMotel])\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <AddRowContent\r\n                labelLeft='Tên nhà trọ'\r\n                contentLeft={dataMotel.name}\r\n                linkContentLeft={dataMotel.type === 'update' ? `/motels/${dataMotel._id}` : undefined}\r\n                labelRight=\"Địa chỉ\"\r\n                contentRight={dataMotel.address}\r\n            />\r\n\r\n            <AddRowContent\r\n                labelLeft='Mô tả'\r\n                contentLeft={desc}\r\n                titleContentLeft={dataMotel.desc}\r\n                labelRight=\"Trường học\"\r\n                contentRight={school}\r\n            />\r\n\r\n            <AddRowContent\r\n                labelLeft='Điện thoại'\r\n                contentLeft={dataMotel.contact.phone || ''}\r\n                labelRight=\"Email\"\r\n                contentRight={dataMotel.contact.email || ''}\r\n            />\r\n\r\n            <AddRowContent\r\n                labelLeft='Facebook'\r\n                contentLeft={dataMotel.contact.facebook || ''}\r\n                labelRight=\"Zalo\"\r\n                contentRight={dataMotel.contact.zalo || ''}\r\n            />\r\n\r\n            <AddRowContent\r\n                labelLeft='Trạng thái'\r\n                contentLeft={dataMotel.status ? 'Còn phòng' : 'Hết phòng'}\r\n                labelRight=\"Phòng trống\"\r\n                contentRight={dataMotel.available ? `${dataMotel.available} phòng` : ''}\r\n            />\r\n\r\n            {dataMotel.room && <TableRoom rooms={dataMotel.room} />}\r\n\r\n            <Box mt={2} mb={1}>\r\n                <Carousel\r\n                    className='carousel'\r\n                    itemsToShow={5}\r\n                    isRTL={false}\r\n                    pagination={false}\r\n                    itemPosition='START'\r\n                    enableSwipe={false}\r\n                    enableMouseSwipe={false}\r\n                    itemPadding={[0, 4, 0, 4]}\r\n                    showEmptySlots={true}\r\n                >\r\n                    {listImg.map((url, index) => {\r\n\r\n                        return (\r\n                            <img\r\n                                key={index.toString()}\r\n                                className=\"images\"\r\n                                src={url}\r\n                                alt=\"Tìm nhà trọ sinh viên\"\r\n                            />\r\n                        )\r\n                    })}\r\n                </Carousel>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddBodyMotel\r\n","import { Box, Theme } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { Post } from 'models'\r\nimport AddRowContent from '../common/AddRowContent'\r\n\r\ninterface Props {\r\n    data: Post\r\n}\r\n\r\nconst useStyles = makeStyles((them: Theme) => ({\r\n    root: {}\r\n}))\r\n\r\nconst AddBodyPost = ({ data }: Props) => {\r\n    const classes = useStyles()\r\n\r\n    const motelOrSchool = data.type === 1 ? data.require.schools.map(x => x.name).join(',') : data.motel?.name\r\n    const additionals = data?.require?.additional\r\n    const motelLink = data.type !== 1 ? `/motels/${data.motel._id}` : undefined\r\n\r\n    let content = data.type === 3 ? 'Không thể hiển thị trực tiếp. Nhấn vào nút \"Xem trước\" phía trên để xem' : data.content\r\n    content = content.length > 250 ? `${content.slice(0, 250)}...` : content\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.root}>\r\n                <AddRowContent\r\n                    labelLeft='Tiêu đề'\r\n                    contentLeft={data.title}\r\n                    labelRight='Danh sách tag'\r\n                    contentRight={data.tags.join(',')}\r\n                    wordBreak='break-all'\r\n                />\r\n\r\n                <AddRowContent\r\n                    labelLeft={data.type === 1 ? 'Trường lân cận' : 'Nhà trọ'}\r\n                    contentLeft={motelOrSchool}\r\n                    linkContentLeft={motelLink}\r\n                    labelRight={data.type === 3 ? undefined : 'Một số yêu cầu'}\r\n                    contentRight={additionals}\r\n                />\r\n\r\n                <AddRowContent\r\n                    labelLeft='Nội dung'\r\n                    contentLeft={content}\r\n                    titleContentLeft={data.type !== 3 && data.content.length > 250 ? data.content : ''}\r\n                />\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddBodyPost\r\n","import { Box, Theme, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\ninterface Props {\r\n    data: {\r\n        title: string\r\n        content: string\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 900,\r\n        height: 'calc(100% - 5px)',\r\n        overflow: 'auto',\r\n        margin: 'auto',\r\n\r\n        '&::-webkit-scrollbar': {\r\n            width: 0\r\n        },\r\n\r\n        '& > .title': {\r\n            fontSize: '2rem',\r\n            fontWeight: 500,\r\n            marginBottom: theme.spacing(4)\r\n        },\r\n\r\n        '& .content': {\r\n            '& h1': {\r\n                fontSize: '1.65em',\r\n                marginBottom: theme.spacing(2),\r\n            },\r\n            '& h2': {\r\n                fontSize: '1.6em',\r\n                marginBottom: theme.spacing(2),\r\n            },\r\n            '& h3': {\r\n                fontSize: '1.55em',\r\n                marginBottom: theme.spacing(2),\r\n            },\r\n            '& h4': {\r\n                fontSize: '1.5em',\r\n                marginBottom: theme.spacing(2),\r\n            },\r\n            '& h5': {\r\n                fontSize: '1.45em',\r\n                marginBottom: theme.spacing(2),\r\n            },\r\n            '& h6': {\r\n                fontSize: '1.4em',\r\n                marginBottom: theme.spacing(2),\r\n            },\r\n\r\n            '& a': {\r\n                color: theme.palette.primary.main,\r\n            },\r\n\r\n            '& img': {\r\n                width: '100%',\r\n                height: 'auto',\r\n                marginBlock: theme.spacing(2),\r\n                borderRadius: 10,\r\n            },\r\n\r\n            '& table': {\r\n                marginInline: 'auto',\r\n                marginBlock: theme.spacing(2),\r\n                border: '1px solid #ccc',\r\n\r\n                '& td': {\r\n                    padding: theme.spacing(1, 2),\r\n                },\r\n\r\n                '& tr': {\r\n                    borderBottom: '1px solid #ccc',\r\n                }\r\n            },\r\n\r\n            '& ul, & ol': {\r\n                listStylePosition: 'inside',\r\n                paddingLeft: theme.spacing(1),\r\n                marginBlock: theme.spacing(1),\r\n\r\n                \"& li\": {\r\n                    fontSize: '1.25em'\r\n                }\r\n            },\r\n\r\n            '& ul': {\r\n                listStyleType: 'disc',\r\n            },\r\n\r\n            '& ol': {\r\n                listStyleType: 'desc',\r\n            },\r\n\r\n            '& blockquote': {\r\n                overflow: 'hidden',\r\n                paddingRight: '1.5em',\r\n                paddingLeft: '1.5em',\r\n                margin: theme.spacing(2, 0),\r\n                fontStyle: 'italic',\r\n                borderLeft: '5px solid #ccc',\r\n            },\r\n\r\n            '& p': {\r\n                fontSize: '1.3em',\r\n                fontWeight: 400,\r\n                lineHeight: 1,\r\n                marginBlock: theme.spacing(2)\r\n            }\r\n        }\r\n    }\r\n}))\r\n\r\nconst PreviewingBody = ({ data }: Props) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Typography className='title' variant='h2'>\r\n                {data.title}\r\n            </Typography>\r\n\r\n            <Box\r\n                className='content'\r\n                dangerouslySetInnerHTML={{ __html: data.content }}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PreviewingBody\r\n","import { Box } from '@material-ui/core'\r\nimport { RateApprove } from 'models'\r\nimport AddRowContent from '../common/AddRowContent'\r\n\r\ninterface Props {\r\n    rate: RateApprove\r\n}\r\n\r\nconst AddBodyRate = ({ rate }: Props) => {\r\n    const content = rate.content.length > 250 ? `${rate.content.slice(0, 250)}...` : rate.content\r\n    const tooltipContent = rate.content.length > 250 ? rate.content : ''\r\n\r\n    return (\r\n        <Box>\r\n            <AddRowContent\r\n                labelLeft='Nhà trọ'\r\n                contentLeft={rate.motel.name}\r\n                linkContentLeft={`/motels/${rate.motel._id}`}\r\n                labelRight='Số điểm'\r\n                contentRight={`${rate.star} sao`}\r\n            />\r\n\r\n            <AddRowContent\r\n                labelLeft='Nội dung'\r\n                contentLeft={content}\r\n                titleContentLeft={tooltipContent}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddBodyRate\r\n","import { Box } from \"@material-ui/core\"\r\nimport { Report } from \"models\"\r\nimport AddRowContent from \"../common/AddRowContent\"\r\n\r\ninterface Props {\r\n    data: Report\r\n}\r\n\r\nconst BodyReport = ({ data }: Props) => {\r\n    const seeMoreLinks = {\r\n        rate: `/motels/${data.data?.motel?._id}`,\r\n        post: `/posts/${data.data?._id}`,\r\n        comment: `/posts/${data.data?.post}`,\r\n    }\r\n\r\n    const listLabel = {\r\n        rate: 'Nội dung đánh giá',\r\n        comment: 'Nội dung bình luận'\r\n    }\r\n\r\n    const content = data.type === 'rate' ?\r\n        data.data.content : data.type === 'comment' ?\r\n            data.data.content : undefined\r\n\r\n    return (\r\n        <Box>\r\n            <AddRowContent\r\n                labelLeft=\"Nội dung\"\r\n                contentLeft={data.content}\r\n                labelRight=\"Thông tin\"\r\n                contentRight=\"Xem chi tiết\"\r\n                // @ts-ignore\r\n                linkContentRight={seeMoreLinks[data.type]}\r\n            />\r\n\r\n            {data.type !== 'post' && <AddRowContent\r\n                // @ts-ignore\r\n                labelLeft={listLabel[data.type]}\r\n                contentLeft={content}\r\n            />}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default BodyReport\r\n","import { Box, Grid } from \"@material-ui/core\"\r\nimport { Pagination } from \"@material-ui/lab\"\r\nimport { useAppDispatch, useAppSelector } from \"app/hooks\"\r\nimport { LoadingAdmin } from \"components/Common\"\r\nimport ModalUp from \"components/Common/ModalUp\"\r\nimport ApproveContext, { initialApproveContext, OpenModalApprove } from \"contexts/ApproveContext\"\r\nimport { useState } from \"react\"\r\nimport { ApproveItem } from \".\"\r\nimport { motelApproveActions, selectDataMotelApprove, selectLoadingMotelApprove, selectPaginationMotelApprove } from \"../motelApprove\"\r\nimport { postApproveActions, selectDataPostApprove, selectLoadingPostApprove, selectPaginationPostApprove } from \"../postApprove\"\r\nimport { rateApproveActions, selectDataRateApprove, selectLoadingRateApprove, selectPaginationRateApprove } from \"../rateApprove\"\r\nimport { reportApproveActions, selectDataReportApprove, selectLoadingReportApprove, selectPaginationReportApprove } from \"../reportApprove\"\r\nimport ComparingBody from \"./common/ComparingBody\"\r\nimport ApproveLayout from \"./layouts/ApproveLayout\"\r\nimport AddBodyMotel from \"./Motels/AddBodyMotel\"\r\nimport AddBodyPost from \"./Posts/AddBodyPost\"\r\nimport PreviewingBody from \"./Posts/PreviewingBody\"\r\nimport AddBodyRate from \"./Rates/AddBodyRate\"\r\nimport BodyReport from \"./Reports/BodyReport\"\r\n\r\nexport const ApproveSection = () => {\r\n    const dispatch = useAppDispatch()\r\n\r\n    const dataMotelApprove = useAppSelector(selectDataMotelApprove)\r\n    const loadingMotelApprove = useAppSelector(selectLoadingMotelApprove)\r\n    const paginationMotelApprove = useAppSelector(selectPaginationMotelApprove)\r\n\r\n    const dataPostApprove = useAppSelector(selectDataPostApprove)\r\n    const loadingPostApprove = useAppSelector(selectLoadingPostApprove)\r\n    const paginationPostApprove = useAppSelector(selectPaginationPostApprove)\r\n\r\n    const dataRateApprove = useAppSelector(selectDataRateApprove)\r\n    const loadingRateApprove = useAppSelector(selectLoadingRateApprove)\r\n    const paginationRateApprove = useAppSelector(selectPaginationRateApprove)\r\n\r\n    const dataReportApprove = useAppSelector(selectDataReportApprove)\r\n    const loadingReportApprove = useAppSelector(selectLoadingReportApprove)\r\n    const paginationReportApprove = useAppSelector(selectPaginationReportApprove)\r\n\r\n    const [dataPreviewModal, setDataPreviewModal] = useState({\r\n        title: '',\r\n        content: ''\r\n    })\r\n    const [open, setOpen] = useState<OpenModalApprove>(initialApproveContext)\r\n    const [showAccordion, setShowAccordion] = useState('')\r\n\r\n    const handleShowAccordion = (panel: string) => {\r\n        setShowAccordion(prev => prev === panel ? '' : panel)\r\n    }\r\n\r\n    const actionApprovalMotel = {\r\n        handlePagination(e: any, page: number) {\r\n            dispatch(motelApproveActions.setFilter({\r\n                _page: page,\r\n            }))\r\n        },\r\n        handleApprove(motelId: string) {\r\n            dispatch(motelApproveActions.approve(motelId))\r\n        },\r\n        handleRefuse(motelId: string, type: string) {\r\n            dispatch(motelApproveActions.refuse({\r\n                motelId,\r\n                type\r\n            }))\r\n        }\r\n    }\r\n\r\n    const actionApprovalPost = {\r\n        handlePagination(e: any, page: number) {\r\n            dispatch(postApproveActions.setFilter({\r\n                _page: page,\r\n            }))\r\n        },\r\n        handleApprove(postId: string) {\r\n            dispatch(postApproveActions.approve(postId))\r\n        },\r\n        handleRefuse(postId: string) {\r\n            dispatch(postApproveActions.refuse(postId))\r\n        }\r\n    }\r\n\r\n    const actionApprovalRate = {\r\n        handlePagination(e: any, page: number) {\r\n            dispatch(rateApproveActions.setFilter({\r\n                _page: page,\r\n            }))\r\n        },\r\n        handleApprove(rateId: string) {\r\n            dispatch(rateApproveActions.approve(rateId))\r\n        },\r\n        handleRefuse(rateId: string, motelId: string) {\r\n            dispatch(rateApproveActions.refuse({\r\n                rateId,\r\n                motelId\r\n            }))\r\n        }\r\n    }\r\n\r\n    const actionApprovalReport = {\r\n        handlePagination(e: any, page: number) {\r\n            dispatch(reportApproveActions.setFilter({\r\n                _page: page,\r\n            }))\r\n        },\r\n        handleApprove(reportId: string) {\r\n            dispatch(reportApproveActions.approve(reportId))\r\n        },\r\n        handleRefuse(reportId: string) {\r\n            dispatch(reportApproveActions.refuse(reportId))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ApproveContext.Provider value={{\r\n                openModalApprove: open,\r\n                setOpenModalApprove: setOpen\r\n            }}>\r\n                <ApproveLayout\r\n                    label='Nhà trọ chờ duyệt'\r\n                    quantity={paginationMotelApprove._totalRows}\r\n                    isExpand={showAccordion === 'motel'}\r\n                    onClose={() => handleShowAccordion('motel')}\r\n                >\r\n                    {loadingMotelApprove ? <LoadingAdmin />\r\n                        : <>\r\n                            <Box display='flex' justifyContent='flex-end' my={2}>\r\n                                <Pagination\r\n                                    count={Math.ceil(paginationMotelApprove._totalRows / paginationMotelApprove._limit)}\r\n                                    page={paginationMotelApprove._page}\r\n                                    onChange={actionApprovalMotel.handlePagination}\r\n                                    variant='outlined'\r\n                                    shape=\"rounded\"\r\n                                    size='small'\r\n                                />\r\n                            </Box>\r\n\r\n                            <Grid container spacing={2}>\r\n                                {dataMotelApprove && dataMotelApprove.map(data => {\r\n                                    const type = data.type === 'update' ? 'Cập nhật' : 'Thêm mới'\r\n\r\n                                    return (\r\n                                        <Grid key={data._id} item xs={6}>\r\n                                            <ApproveItem\r\n                                                modalId={data._id}\r\n                                                type={type}\r\n                                                isUpdate={data.type === 'update'}\r\n                                                user={data.owner}\r\n                                                createdAt={data.createdAt}\r\n                                                onApprove={() => actionApprovalMotel.handleApprove(data._id)}\r\n                                                onRefuse={() => actionApprovalMotel.handleRefuse(data._id, data.type)}\r\n                                            >\r\n                                                <AddBodyMotel dataMotel={data} />\r\n                                            </ApproveItem>\r\n                                        </Grid>\r\n                                    )\r\n                                })}\r\n                            </Grid>\r\n                        </>\r\n                    }\r\n                </ApproveLayout>\r\n\r\n                <ApproveLayout\r\n                    label='Bài đăng chờ duyệt'\r\n                    quantity={paginationPostApprove._totalRows}\r\n                    isExpand={showAccordion === 'post'}\r\n                    onClose={() => handleShowAccordion('post')}\r\n                >\r\n                    {loadingPostApprove ? <LoadingAdmin />\r\n                        : <>\r\n                            <Box display='flex' justifyContent='flex-end' my={2}>\r\n                                <Pagination\r\n                                    count={Math.ceil(paginationPostApprove._totalRows / paginationPostApprove._limit)}\r\n                                    page={paginationPostApprove._page}\r\n                                    onChange={actionApprovalPost.handlePagination}\r\n                                    variant='outlined'\r\n                                    shape=\"rounded\"\r\n                                    size='small'\r\n                                />\r\n                            </Box>\r\n\r\n                            <Grid container spacing={2}>\r\n                                {dataPostApprove && dataPostApprove.map(post => {\r\n                                    return (\r\n                                        <Grid key={post._id} item xs={6}>\r\n                                            <ApproveItem\r\n                                                type={post.subject.name}\r\n                                                isReview={post.type === 3}\r\n                                                modalId={post._id}\r\n                                                user={post.owner}\r\n                                                createdAt={post.createdAt}\r\n                                                title={post.title}\r\n                                                content={post.content}\r\n                                                setDataPreviewModal={setDataPreviewModal}\r\n                                                onApprove={() => actionApprovalPost.handleApprove(post._id)}\r\n                                                onRefuse={() => actionApprovalPost.handleRefuse(post._id)}\r\n                                            >\r\n                                                <AddBodyPost data={post} />\r\n                                            </ApproveItem>\r\n                                        </Grid>\r\n                                    )\r\n                                })}\r\n                            </Grid>\r\n                        </>}\r\n                </ApproveLayout>\r\n\r\n\r\n                <ApproveLayout\r\n                    label='Đánh giá nhà trọ chờ duyệt'\r\n                    quantity={paginationRateApprove._totalRows}\r\n                    isExpand={showAccordion === 'rate'}\r\n                    onClose={() => handleShowAccordion('rate')}\r\n                >\r\n                    {loadingRateApprove ? <LoadingAdmin />\r\n                        : <>\r\n                            <Box display='flex' justifyContent='flex-end' my={2}>\r\n                                <Pagination\r\n                                    count={Math.ceil(paginationRateApprove._totalRows / paginationRateApprove._limit)}\r\n                                    page={paginationRateApprove._page}\r\n                                    onChange={actionApprovalRate.handlePagination}\r\n                                    variant='outlined'\r\n                                    shape=\"rounded\"\r\n                                    size='small'\r\n                                />\r\n                            </Box>\r\n\r\n                            <Grid container spacing={2}>\r\n                                {dataRateApprove && dataRateApprove.map(rate => (\r\n                                    <Grid key={rate._id} item xs={6}>\r\n                                        <ApproveItem\r\n                                            type=\"Đánh giá nhà trọ\"\r\n                                            user={rate.owner}\r\n                                            createdAt={rate.createAt}\r\n                                            onApprove={() => actionApprovalRate.handleApprove(rate._id)}\r\n                                            onRefuse={() => actionApprovalRate.handleRefuse(rate._id, rate.motel._id)}\r\n                                        >\r\n                                            <AddBodyRate rate={rate} />\r\n                                        </ApproveItem>\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                        </>}\r\n                </ApproveLayout>\r\n\r\n\r\n                <ApproveLayout\r\n                    label='Báo cáo nội dung xấu'\r\n                    quantity={paginationReportApprove._totalRows}\r\n                    isExpand={showAccordion === 'report'}\r\n                    onClose={() => handleShowAccordion('report')}\r\n                >\r\n                    {loadingReportApprove ? <LoadingAdmin />\r\n                        : <>\r\n                            <Box display='flex' justifyContent='flex-end' my={2}>\r\n                                <Pagination\r\n                                    count={Math.ceil(paginationReportApprove._totalRows / paginationReportApprove._limit)}\r\n                                    page={paginationReportApprove._page}\r\n                                    onChange={actionApprovalReport.handlePagination}\r\n                                    variant='outlined'\r\n                                    shape=\"rounded\"\r\n                                    size='small'\r\n                                />\r\n                            </Box>\r\n\r\n                            <Grid container spacing={2}>\r\n                                {dataReportApprove && dataReportApprove.map(report => {\r\n                                    const listType = {\r\n                                        rate: 'Báo cáo đánh giá',\r\n                                        post: 'Báo cáo bài viết',\r\n                                        comment: 'Báo cáo bình luận'\r\n                                    }\r\n\r\n                                    return (\r\n                                        <Grid key={report._id} item xs={6}>\r\n                                            <ApproveItem\r\n                                                isReport\r\n                                                // @ts-ignore\r\n                                                type={listType[report.type]}\r\n                                                user={report.owner}\r\n                                                createdAt={report.createdAt}\r\n                                                onApprove={() => actionApprovalReport.handleApprove(report._id)}\r\n                                                onRefuse={() => actionApprovalReport.handleRefuse(report._id)}\r\n                                            >\r\n                                                <BodyReport data={report} />\r\n                                            </ApproveItem>\r\n                                        </Grid>\r\n                                    )\r\n                                })}\r\n                            </Grid>\r\n                        </>}\r\n                </ApproveLayout>\r\n            </ApproveContext.Provider>\r\n\r\n            {open.type === 'update' && <ModalUp\r\n                open={open.type === 'update'}\r\n                onClose={() => setOpen(initialApproveContext)}\r\n            >\r\n                <ComparingBody motelId={open.id} />\r\n            </ModalUp>}\r\n\r\n            {open.type === 'review' && <ModalUp\r\n                open={open.type === 'review'}\r\n                onClose={() => setOpen(initialApproveContext)}\r\n            >\r\n                <PreviewingBody\r\n                    data={dataPreviewModal}\r\n                />\r\n            </ModalUp>}\r\n        </>\r\n    )\r\n}\r\n","import { Avatar, Box, Button, makeStyles, Paper, Theme, Typography } from '@material-ui/core'\r\nimport ApproveContext from 'contexts/ApproveContext'\r\nimport { Owner } from 'models'\r\nimport { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { calculateCreatedTimeHDMY } from 'utils/convert-date/calculateCreatedTime'\r\n\r\n\r\ninterface Props {\r\n    children: any\r\n    modalId?: string\r\n    isUpdate?: boolean\r\n    isReview?: boolean\r\n    isReport?: boolean\r\n    type: string\r\n    user: Owner\r\n    createdAt: string\r\n    title?: string\r\n    content?: string\r\n    setDataPreviewModal?: (state: any) => void\r\n    onApprove: () => void\r\n    onRefuse: () => void\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        padding: theme.spacing(1),\r\n\r\n        '& .top-wrapper': {\r\n            display: 'flex',\r\n\r\n            '& .left-info': {\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                flex: 1,\r\n\r\n                '& .avatar': {\r\n                    marginRight: theme.spacing(1),\r\n                },\r\n\r\n                '& .name a': {\r\n                    fontWeight: 500\r\n                },\r\n            },\r\n\r\n            '& .rows': {\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n\r\n                '& .date': {\r\n                    fontSize: '0.85em',\r\n                    color: theme.palette.text.secondary\r\n                },\r\n\r\n                '& .dot': {\r\n                    width: 5,\r\n                    height: 5,\r\n                    background: '#ccc',\r\n                    borderRadius: '50%',\r\n                    marginInline: 8,\r\n                },\r\n\r\n                '& .type': {\r\n                    fontSize: '0.65em',\r\n                    padding: theme.spacing(0.2, 0.7),\r\n                    borderRadius: 10,\r\n                    background: '#edeef2'\r\n                }\r\n            },\r\n        },\r\n\r\n        '& > .body': {\r\n            padding: theme.spacing(0.1, 1.5),\r\n            marginTop: theme.spacing(1),\r\n            boxShadow: theme.shadows[4]\r\n        }\r\n    }\r\n}))\r\n\r\nexport const ApproveItem = ({ children, modalId, isUpdate, isReview, isReport, type, user, createdAt, title, content, setDataPreviewModal, onApprove, onRefuse }: Props) => {\r\n    const classes = useStyles()\r\n    const valueContext = useContext(ApproveContext)\r\n\r\n    const handleOpenModal = () => {\r\n        if (isUpdate) {\r\n            valueContext.setOpenModalApprove({\r\n                ...valueContext.openModalApprove,\r\n                type: 'update',\r\n                id: modalId!\r\n            })\r\n        }\r\n        else if (isReview) {\r\n            setDataPreviewModal?.({\r\n                title: title || '',\r\n                content: content || ''\r\n            })\r\n            valueContext.setOpenModalApprove({\r\n                ...valueContext.openModalApprove,\r\n                type: 'review',\r\n                id: modalId!,\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className='top-wrapper'>\r\n                <Box className=\"left-info\">\r\n                    <Link to={`/profile/${user._id}`}>\r\n                        <Avatar\r\n                            className='avatar'\r\n                            src={user.avatarUrl}\r\n                        >\r\n                            {user.name[0]}\r\n                        </Avatar>\r\n                    </Link>\r\n\r\n                    <span className=\"details\">\r\n                        <Typography className='name'>\r\n                            <Link to={`/profile/${user._id}`}>\r\n                                {user.name}\r\n                            </Link>\r\n                        </Typography>\r\n\r\n                        <span className=\"rows\">\r\n                            <Typography className='date'>\r\n                                {calculateCreatedTimeHDMY(createdAt)}\r\n                            </Typography>\r\n\r\n                            <span className=\"dot\" />\r\n\r\n                            <Typography className='type'>\r\n                                {type}\r\n                            </Typography>\r\n                        </span>\r\n                    </span>\r\n                </Box>\r\n\r\n                <Box className='right-controls rows'>\r\n                    <Button\r\n                        className='btn btn-remove'\r\n                        color='primary'\r\n                        variant='outlined'\r\n                        size='small'\r\n                        style={{\r\n                            borderColor: '#ff4d4f',\r\n                            color: '#ff4d4f',\r\n                            marginRight: 16,\r\n                            textTransform: 'initial'\r\n                        }}\r\n                        onClick={onRefuse}\r\n                    >\r\n                        Xóa\r\n                    </Button>\r\n\r\n                    {(isUpdate || isReview) && <Button\r\n                        className='btn btn-remove'\r\n                        color='primary'\r\n                        variant='outlined'\r\n                        size='small'\r\n                        style={{\r\n                            borderColor: '#bb86fc',\r\n                            color: '#bb86fc',\r\n                            marginRight: 16,\r\n                            textTransform: 'initial'\r\n                        }}\r\n                        onClick={handleOpenModal}\r\n                    >\r\n                        {isReview ? 'Xem trước' : 'So sánh'}\r\n                    </Button>}\r\n\r\n                    {!isReport ? <Button\r\n                        className='btn btn-accept'\r\n                        color='primary'\r\n                        variant='contained'\r\n                        size='small'\r\n                        style={{\r\n                            textTransform: 'initial'\r\n                        }}\r\n                        onClick={onApprove}\r\n                    >\r\n                        Duyệt\r\n                    </Button>\r\n\r\n                        : <Button\r\n                            className='btn btn-accept'\r\n                            color='primary'\r\n                            variant='contained'\r\n                            size='small'\r\n                            style={{\r\n                                textTransform: 'initial'\r\n                            }}\r\n                        >\r\n                            Xem xét\r\n                        </Button>}\r\n                </Box>\r\n            </Box>\r\n\r\n            <Paper className='body'>\r\n                {children}\r\n            </Paper>\r\n        </Box>\r\n    )\r\n}\r\n","import { Box, makeStyles, Theme } from \"@material-ui/core\"\r\nimport { useAppDispatch, useAppSelector } from \"app/hooks\"\r\nimport { ApproveSection } from \"features/approves/components\"\r\nimport { motelApproveActions, selectFilterMotelApprove } from \"features/approves/motelApprove\"\r\nimport { postApproveActions, selectFilterPostApprove } from \"features/approves/postApprove\"\r\nimport { rateApproveActions, selectFilterRateApprove } from \"features/approves/rateApprove\"\r\nimport { reportApproveActions, selectFilterReportApprove } from \"features/approves/reportApprove\"\r\nimport { useEffect } from \"react\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2)\r\n    }\r\n}))\r\n\r\nconst ApprovePage = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useAppDispatch()\r\n\r\n    const filterMotelApprove = useAppSelector(selectFilterMotelApprove)\r\n    const filterPostApprove = useAppSelector(selectFilterPostApprove)\r\n    const filterRateApprove = useAppSelector(selectFilterRateApprove)\r\n    const filterReportApprove = useAppSelector(selectFilterReportApprove)\r\n\r\n    useEffect(() => {\r\n        dispatch(motelApproveActions.get(filterMotelApprove))\r\n    }, [filterMotelApprove, dispatch])\r\n\r\n    useEffect(() => {\r\n        dispatch(postApproveActions.get(filterPostApprove))\r\n    }, [filterPostApprove, dispatch])\r\n\r\n    useEffect(() => {\r\n        dispatch(rateApproveActions.get(filterRateApprove))\r\n    }, [filterRateApprove, dispatch])\r\n\r\n    useEffect(() => {\r\n        dispatch(reportApproveActions.get(filterReportApprove))\r\n    }, [filterReportApprove, dispatch])\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <ApproveSection />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ApprovePage\r\n","import { DeleteOutlined } from '@ant-design/icons'\r\nimport { Box, Theme } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { Avatar, Button, Popconfirm, Table, Tooltip } from 'antd'\r\nimport Column from 'antd/lib/table/Column'\r\nimport { UserTooltip } from 'components/Common'\r\nimport { Owner } from 'models'\r\n\r\ninterface Props {\r\n    dataTable: any[]\r\n    loading: boolean\r\n    handleRemoveFeedback: (feedbackId: string) => void\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        padding: theme.spacing(1),\r\n\r\n        '& .owner-info': {\r\n            display: 'grid',\r\n            placeItems: 'center'\r\n        }\r\n    }\r\n}))\r\n\r\nconst FeedbackTable = ({ dataTable, loading, handleRemoveFeedback }: Props) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Table dataSource={dataTable} loading={loading}>\r\n                <Column width={30} title=\"STT\" dataIndex=\"index\" key=\"index\" />\r\n\r\n                <Column\r\n                    title=\"Người góp ý\"\r\n                    dataIndex=\"owner\"\r\n                    key=\"owner\"\r\n                    width={130}\r\n                    align='center'\r\n                    render={(data: Owner) => (\r\n                        <UserTooltip data={data}>\r\n                            <Avatar\r\n                                src={data.avatarUrl}\r\n                                size='large'\r\n                            />\r\n                        </UserTooltip>\r\n                    )}\r\n                />\r\n\r\n                <Column title=\"Chủ đề\" width={180} dataIndex=\"category\" key=\"category\" />\r\n\r\n                <Column title=\"Nội dung\" dataIndex=\"content\" key=\"content\" />\r\n\r\n                <Column title=\"Thời gian\" dataIndex=\"date\" key=\"date\" />\r\n\r\n                <Column\r\n                    title=\"Hành động\"\r\n                    key=\"action\"\r\n                    align='center'\r\n                    render={(text, record: any) => (\r\n                        <Popconfirm\r\n                            title='Bạn có muốn xóa?'\r\n                            okText='Xóa'\r\n                            cancelText='Hủy'\r\n                            okButtonProps={{ danger: true }}\r\n                            onConfirm={() => handleRemoveFeedback(record.key)}\r\n                        >\r\n\r\n                            <Tooltip title='Xóa'>\r\n                                <Button type='primary' danger icon={<DeleteOutlined />} />\r\n                            </Tooltip>\r\n                        </Popconfirm>\r\n                    )}\r\n                />\r\n            </Table>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default FeedbackTable\r\n","import { Box, LinearProgress, makeStyles, Theme } from \"@material-ui/core\"\r\nimport FeedbackTable from \"../components/Feedback/FeedbackTable\"\r\nimport { useState, useEffect } from 'react'\r\nimport feedbackApis from 'api/feedback'\r\nimport Feedback from 'models/Feedback'\r\nimport { toast } from \"react-toastify\"\r\nimport { calculateCreatedTimeHDMY } from \"utils/convert-date/calculateCreatedTime\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {}\r\n}))\r\n\r\nconst mapFeedbackToTable = (feedbacks: Feedback[]) => {\r\n    return feedbacks.map((feedback, index) => ({\r\n        key: feedback._id,\r\n        index: index + 1,\r\n        owner: feedback.owner,\r\n        category: feedback.title,\r\n        content: feedback.content,\r\n        date: calculateCreatedTimeHDMY(feedback.createdAt)\r\n    }))\r\n}\r\n\r\nconst FeedbackPage = () => {\r\n    const classes = useStyles()\r\n    const [feedbackTable, setFeedbackTable] = useState<any[]>([])\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        fetchFeedback()\r\n    }, [])\r\n\r\n    const fetchFeedback = () => {\r\n        setLoading(true)\r\n\r\n        feedbackApis.getFeedback()\r\n            .then(res => {\r\n                setFeedbackTable(mapFeedbackToTable(res.data))\r\n                setLoading(false)\r\n            })\r\n            .catch((err: any) => {\r\n                setLoading(false)\r\n                toast.error(err.response.data.message)\r\n            })\r\n    }\r\n\r\n    const handleRemoveFeedback = (feedbackId: string) => {\r\n        feedbackApis.removeFeedback(feedbackId)\r\n            .then(fetchFeedback)\r\n            .catch((err: any) => toast.error(err.response.data.message))\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            {loading && <LinearProgress />}\r\n\r\n            <FeedbackTable\r\n                loading={loading}\r\n                dataTable={feedbackTable}\r\n                handleRemoveFeedback={handleRemoveFeedback}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default FeedbackPage\r\n","import { Box, LinearProgress } from \"@material-ui/core\"\r\nimport { useAppDispatch, useAppSelector } from \"app/hooks\"\r\nimport { MotelTable, Operation, UpdateForm } from \"features/motels/components\"\r\nimport { Filter, MotelDataTable, MotelOnly, Room } from \"models\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { motelActions, selectFilterMotel, selectLoadingMotel, selectMotelSplited } from \"features/motels/motelSlice\"\r\n\r\nconst MotelListPage = () => {\r\n    const dispatch = useAppDispatch()\r\n    const filter = useAppSelector(selectFilterMotel)\r\n    const loading = useAppSelector(selectLoadingMotel)\r\n\r\n    const dataMotelSplited = useAppSelector(selectMotelSplited)\r\n    const [showUpdateForm, setShowUpdateForm] = useState(false)\r\n    const [selectedMotelUpdate, setSelectMotelUpdate] = useState<MotelOnly>()\r\n\r\n    const [selectedRoomUpdate, setSelectRoomUpdate] = useState<Array<Room>>()\r\n    const [formThumbnail, setFormThumbnail] = useState<FormData>()\r\n    const [formImages, setFormImages] = useState<{ old: string[]; new: FormData | undefined } | undefined>(undefined)\r\n\r\n    useEffect(() => {\r\n        dispatch(motelActions.getMotel(filter))\r\n    }, [dispatch, filter])\r\n\r\n    const handleSearch = (filter: Filter) => {\r\n        dispatch(motelActions.searchWithDebounce(filter))\r\n    }\r\n\r\n    const handleFilter = (e: any, key: string) => {\r\n        let newFilter = {}\r\n\r\n        if (key === '_sort') {\r\n            if (e) {\r\n                const [_sort, _order] = e.split('.')\r\n\r\n                newFilter = {\r\n                    ...filter,\r\n                    _sort,\r\n                    _order\r\n                }\r\n            } else {\r\n                newFilter = {\r\n                    ...filter,\r\n                    _sort: e,\r\n                    _order: e\r\n                }\r\n            }\r\n        }\r\n\r\n        if (key === '_status') {\r\n            newFilter = {\r\n                ...filter,\r\n                [key]: e\r\n            }\r\n        }\r\n\r\n        dispatch(motelActions.setFilter(newFilter))\r\n    }\r\n\r\n    const handleClearFilter = () => {\r\n        dispatch(motelActions.setFilter({\r\n            _page: 1,\r\n            _limit: 15,\r\n        }))\r\n    }\r\n\r\n    const handleUpdateMotel = (data: MotelOnly) => {\r\n        //upload thumbnail\r\n        if (formThumbnail) {\r\n            formThumbnail.append('folder', data._id as string)\r\n        }\r\n\r\n        //upload images\r\n        if (formImages && formImages.new) {\r\n            formImages.new.append('folder', data._id as string)\r\n        }\r\n\r\n        data = {\r\n            ...data,\r\n            status: typeof data.status !== 'boolean' ? data.status === 'yes' ? true : false : data.status,\r\n            thumbnail: formThumbnail ? formThumbnail : data.thumbnail,\r\n            images: formImages ? formImages : data.images\r\n        }\r\n\r\n        dispatch(motelActions.updateMotel(data))\r\n        setShowUpdateForm(false)\r\n    }\r\n\r\n    const handleUpdateRoom = (data: Room) => {\r\n\r\n        const motelOfRoom = dataMotelSplited.find(item => item.motel.listRoomId.includes(data._id))\r\n\r\n        motelOfRoom && dispatch(motelActions.updateRoom({ ...data, motelId: motelOfRoom.motel._id }))\r\n    }\r\n\r\n    const handleRemove = (record: MotelDataTable) => {\r\n        dispatch(motelActions.removeMotel(record.key))\r\n    }\r\n\r\n    const handleUploadThumbnail = (files: any) => {\r\n        const formData = new FormData()\r\n        formData.append('file', files[0])\r\n        setFormThumbnail(formData)\r\n    }\r\n\r\n    const handleUploadImages = (files: Array<File | string>) => {\r\n        const filesSplit: { old: string[], new: File[] } = files.reduce((arr: any, file: any) => {\r\n            if (typeof (file) === 'string')\r\n                arr.old.push(file)\r\n            else arr.new.push(file)\r\n            return arr\r\n        }, { old: [], new: [] })\r\n        let isRead = false\r\n\r\n        const form = new FormData()\r\n\r\n        if (filesSplit.new.length > 0) {\r\n            isRead = true\r\n            filesSplit.new.forEach(file => {\r\n                form.append('files', file)\r\n            })\r\n        }\r\n\r\n        setFormImages({ ...filesSplit, new: isRead ? form : undefined })\r\n    }\r\n\r\n    const onClickEditMotel = (record: MotelDataTable) => {\r\n        const dataMotelUpdate = dataMotelSplited.find(motel => motel.motel._id === record.key)\r\n        const dataUpdateRoom = dataMotelUpdate?.room.map(room => ({ ...room, motelId: dataMotelUpdate.motel._id }))\r\n\r\n        if (dataMotelUpdate) {\r\n            setSelectMotelUpdate(dataMotelUpdate.motel)\r\n            setSelectRoomUpdate(dataUpdateRoom)\r\n            setShowUpdateForm(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            {loading && <LinearProgress />}\r\n\r\n            <Box padding={2}>\r\n                <Box mb={2}>\r\n                    <Operation\r\n                        handleSearch={handleSearch}\r\n                        handleFilter={handleFilter}\r\n                        handleClearFilter={handleClearFilter}\r\n                    />\r\n                </Box>\r\n\r\n\r\n                <MotelTable\r\n                    onClickEditMotel={onClickEditMotel}\r\n                    handleRemove={handleRemove}\r\n                />\r\n            </Box>\r\n\r\n            {selectedMotelUpdate && selectedRoomUpdate &&\r\n                <UpdateForm\r\n                    key={selectedMotelUpdate._id}\r\n                    showUpdateForm={showUpdateForm}\r\n                    setShowUpdateForm={setShowUpdateForm}\r\n                    selectedMotelUpdate={selectedMotelUpdate}\r\n                    selectedRoomUpdate={selectedRoomUpdate}\r\n                    handleUploadThumbnail={handleUploadThumbnail}\r\n                    handleUploadImages={handleUploadImages}\r\n                    handleUpdateMotel={handleUpdateMotel}\r\n                    handleUpdateRoom={handleUpdateRoom}\r\n                />}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default MotelListPage\r\n","import { Switch, Route } from 'react-router-dom'\r\nimport AddPage from './AddPage'\r\nimport MotelListPage from './MotelListPage'\r\n\r\nconst MotelPage = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path='/admin/motels' exact>\r\n                <MotelListPage />\r\n            </Route>\r\n\r\n            <Route path='/admin/motels/add'>\r\n                <AddPage />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default MotelPage\r\n","import { Box, LinearProgress } from \"@material-ui/core\"\r\nimport { useAppDispatch, useAppSelector } from \"app/hooks\"\r\nimport { Operation, PostTable } from \"features/posts/components\"\r\nimport { postAction, selectFilterPost, selectLoadingPost } from \"features/posts/postSlice\"\r\nimport { Filter } from \"models\"\r\nimport { useEffect } from \"react\"\r\n\r\nconst PostListPage = () => {\r\n    const dispatch = useAppDispatch()\r\n    const filter = useAppSelector(selectFilterPost)\r\n    const loading = useAppSelector(selectLoadingPost)\r\n\r\n    useEffect(() => {\r\n        dispatch(postAction.get({\r\n            ...filter,\r\n            _limit: 15\r\n        }))\r\n    }, [filter, dispatch])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(postAction.resetFilter())\r\n        }\r\n    }, [dispatch])\r\n\r\n    const handleSearch = (value: Filter) => {\r\n        dispatch(postAction.searchWidthDebounce(value))\r\n    }\r\n\r\n    const handleFilter = (e: any, key: string) => {\r\n        let newFilter = {};\r\n\r\n        if (key === '_sort') {\r\n            if (e) {\r\n                const [_sort, _order] = e.split('.')\r\n\r\n                newFilter = {\r\n                    ...filter,\r\n                    _sort,\r\n                    _order\r\n                }\r\n            } else {\r\n                newFilter = {\r\n                    ...filter,\r\n                    _sort: e,\r\n                    _order: e\r\n                }\r\n            }\r\n        }\r\n\r\n        if (key === '_subject') {\r\n            newFilter = {\r\n                ...filter,\r\n                ...newFilter,\r\n                [key]: e\r\n            }\r\n        }\r\n\r\n        if (key === '_block') {\r\n            newFilter = {\r\n                ...filter,\r\n                ...newFilter,\r\n                [key]: e === '1' ? true : e === '0' ? false : undefined\r\n            }\r\n        }\r\n\r\n        dispatch(postAction.setFilter(newFilter))\r\n    }\r\n\r\n    const handleClearFilter = () => {\r\n        dispatch(postAction.setFilter({\r\n            _page: 1,\r\n            _limit: 15,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            {loading && <LinearProgress />}\r\n\r\n            <Box padding={2}>\r\n                <Box mb={2}>\r\n                    <Operation handleSearch={handleSearch} handleFilter={handleFilter} handleClearFilter={handleClearFilter} />\r\n                </Box>\r\n\r\n\r\n                <PostTable loading={loading} />\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PostListPage\r\n","import { Box } from \"@material-ui/core\"\r\nimport PostListPage from \"./PostListPage\"\r\n\r\nconst PostPage = () => {\r\n    return (\r\n        <Box>\r\n            <PostListPage />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PostPage\r\n","import { DeleteFilled, EditFilled, EyeOutlined } from '@ant-design/icons'\r\nimport { Avatar, Button, Popconfirm, Space, Table, TablePaginationConfig, Tooltip } from 'antd'\r\nimport { useAppDispatch, useAppSelector } from 'app/hooks'\r\nimport { Pagination, User, UserDataTable, UserUpdate } from 'models'\r\nimport { getUserById } from 'utils'\r\nimport { useEffect, useState } from 'react'\r\nimport { selectData, selectFilter, selectLoading, selectPagination, userActions } from '../usersSlice'\r\nimport { Chip } from '@material-ui/core'\r\nimport { Face } from '@material-ui/icons'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { calculateCreatedTimeHDMY } from 'utils'\r\n\r\ninterface Props {\r\n    setShowUpdateForm: (value: boolean) => void;\r\n    setUserUpdating: (value: UserUpdate) => void;\r\n    handleRemove: (record: UserDataTable) => void\r\n}\r\n\r\nexport const UserTable = ({ setShowUpdateForm, setUserUpdating, handleRemove }: Props) => {\r\n    const [dataTable, setDataTable] = useState<UserDataTable[]>([])\r\n    const loading = useAppSelector(selectLoading)\r\n    const pagination: Pagination = useAppSelector(selectPagination)\r\n\r\n    const filter = useAppSelector(selectFilter)\r\n    const [paginationTB, setPaginationTB] = useState<TablePaginationConfig>({})\r\n    const dispatch = useAppDispatch()\r\n\r\n    const userData: User[] = useAppSelector(selectData)\r\n    const history = useHistory()\r\n\r\n    const columns = [\r\n        {\r\n            title: 'STT',\r\n            dataIndex: 'number',\r\n            key: 'number',\r\n            width: 60\r\n        },\r\n        {\r\n            title: 'Ảnh đại diện',\r\n            dataIndex: 'avatar',\r\n            key: 'avatar',\r\n            align: 'center' as 'center',\r\n            width: 120,\r\n            render: (avatar: any) => (\r\n                <Avatar src={avatar.url} size='large' />\r\n            )\r\n        },\r\n        {\r\n            title: 'Tên tài khoản',\r\n            dataIndex: 'username',\r\n            key: 'username',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n            ellipsis: {\r\n                showTitle: false,\r\n            },\r\n            render: (email: string) => (\r\n                <Tooltip placement=\"topLeft\" title={email}>\r\n                    {email}\r\n                </Tooltip>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Họ tên',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Uy tín',\r\n            dataIndex: 'credit',\r\n            key: 'credit',\r\n            width: 90,\r\n        },\r\n        {\r\n            title: 'Quyền',\r\n            dataIndex: 'isAdmin',\r\n            key: 'isAdmin',\r\n            width: 110,\r\n            align: 'center' as 'center',\r\n            render: (isAdmin: boolean) => {\r\n                if (isAdmin)\r\n                    return <Chip\r\n                        icon={<Face />}\r\n                        label='Admin'\r\n                        color='secondary'\r\n                        size=\"small\"\r\n                    />\r\n            }\r\n        },\r\n        {\r\n            title: 'Tỉnh',\r\n            dataIndex: 'province',\r\n            key: 'province',\r\n        },\r\n        {\r\n            title: 'Quận/Huyện/TP',\r\n            dataIndex: 'district',\r\n            key: 'district',\r\n        },\r\n        {\r\n            title: 'Trường học',\r\n            dataIndex: 'school',\r\n            key: 'school',\r\n            ellipsis: {\r\n                showTitle: false,\r\n            },\r\n            render: (school: string) => (\r\n                <Tooltip placement=\"topLeft\" title={school}>\r\n                    {school}\r\n                </Tooltip>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Ngày tạo',\r\n            dataIndex: 'createdAt',\r\n            key: 'createdAt',\r\n        },\r\n        {\r\n            title: 'Hành động',\r\n            key: 'action',\r\n            width: 140,\r\n            fixed: 'right' as 'right',\r\n            align: 'center' as 'center',\r\n            render: (text: string, record: any) => (\r\n                <Space size=\"small\">\r\n                    <Tooltip title='Xem chi tiết'>\r\n                        <Button\r\n                            style={{ background: '#bb86fc', borderColor: '#bb86fc' }}\r\n                            type='primary'\r\n                            icon={<EyeOutlined />}\r\n                            onClick={() => history.push(`/profile/${record.key}`)}\r\n                        />\r\n                    </Tooltip>\r\n\r\n                    <Tooltip title='Sửa'>\r\n                        <Button type='primary' icon={<EditFilled />} onClick={() => onClickEditBtn(record)} />\r\n                    </Tooltip>\r\n\r\n                    <Popconfirm\r\n                        title=\"Bạn muốn xóa?\"\r\n                        placement=\"leftTop\"\r\n                        onConfirm={() => handleRemove(record)}\r\n                        okText=\"Có\"\r\n                        okButtonProps={{ danger: true }}\r\n                        cancelText=\"Không\"\r\n                    >\r\n                        <Tooltip title='Xóa'>\r\n                            <Button type=\"primary\" danger icon={<DeleteFilled />} />\r\n                        </Tooltip>\r\n                    </Popconfirm>\r\n                </Space>\r\n            ),\r\n        },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        const newData = userData.map((user, index) => {\r\n            const number = index + 1;\r\n\r\n            return {\r\n                key: user._id,\r\n                number,\r\n                isAdmin: user.isAdmin,\r\n                username: user.username,\r\n                email: user.email,\r\n                name: user.name,\r\n                credit: user.credit,\r\n                province: user.province,\r\n                district: user.district,\r\n                school: user.school,\r\n                avatar: user.avatarUrl,\r\n                createdAt: calculateCreatedTimeHDMY(user.createdAt!)\r\n            } as UserDataTable\r\n        })\r\n\r\n        setDataTable(newData)\r\n\r\n        setPaginationTB({\r\n            current: pagination._page,\r\n            pageSize: pagination._limit,\r\n            total: pagination._totalRows\r\n        })\r\n    }, [pagination, filter, userData])\r\n\r\n    const handleChangeTable = (pagi: TablePaginationConfig) => {\r\n        dispatch(userActions.setFilter({\r\n            ...filter,\r\n            _limit: pagi.pageSize,\r\n            _page: pagi.current\r\n        }))\r\n    }\r\n\r\n    const onClickEditBtn = (record: UserDataTable) => {\r\n        setShowUpdateForm(true)\r\n\r\n        const userUpdating = getUserById(record.key, userData)\r\n\r\n        setUserUpdating({\r\n            key: userUpdating._id,\r\n            name: userUpdating.name,\r\n            isAdmin: userUpdating.isAdmin ? 'admin' : 'user',\r\n            email: userUpdating.email,\r\n            province: userUpdating.province,\r\n            district: userUpdating.district,\r\n            school: userUpdating.school,\r\n            credit: userUpdating.credit,\r\n        } as UserUpdate)\r\n    }\r\n\r\n    return (\r\n        <Table\r\n            dataSource={dataTable}\r\n            columns={columns}\r\n            onChange={handleChangeTable}\r\n            pagination={paginationTB}\r\n            loading={loading}\r\n            scroll={{ x: 1500 }}\r\n        />\r\n    )\r\n}\r\n","import { yupResolver } from '@hookform/resolvers/yup'\r\nimport { Box } from '@material-ui/core'\r\nimport { Alert, Form, Modal, Spin } from 'antd'\r\nimport districtApi from 'api/district'\r\nimport provinceApi from 'api/province'\r\nimport schoolApi from 'api/school'\r\nimport { useAppSelector } from 'app/hooks'\r\nimport { AutoCompleteField, InputField } from 'components/FormFields'\r\nimport { RadioBtnField } from 'components/FormFields/RadioBtnField'\r\nimport { SelectField } from 'components/FormFields/SelectField'\r\nimport { District, ListResponse, Province, FieldOption, School, UserUpdate } from 'models'\r\nimport { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { mapOptions, mapProvinces } from 'utils'\r\nimport * as yup from 'yup'\r\nimport { selectLoading } from '../usersSlice'\r\n\r\ninterface Props {\r\n    showUpdateForm: boolean;\r\n    setShowUpdateForm: (value: boolean) => void;\r\n    onSubmit: (e: any) => void;\r\n    userUpdating: UserUpdate\r\n}\r\n\r\nconst radioOptions: FieldOption[] = [\r\n    {\r\n        value: 'admin',\r\n        label: 'Admin'\r\n    },\r\n    {\r\n        value: 'user',\r\n        label: 'Người dùng'\r\n    },\r\n]\r\n\r\nconst schema = yup.object().shape({\r\n    name: yup\r\n        .string()\r\n        .trim('Không được chứa khoảng trắng ở đầu và cuối')\r\n        .strict()\r\n        .min(1, \"Tối thiểu 1 ký tự\")\r\n        .max(30, \"Tối thiểu 30 ký tự\"),\r\n    credit: yup\r\n        .number()\r\n        .min(0, 'Tối thiểu 0 điểm')\r\n        .max(99, 'Tối đa 99 điểm'),\r\n    province: yup\r\n        .string()\r\n        .required(),\r\n    district: yup\r\n        .string()\r\n        .required(),\r\n    school: yup\r\n        .string()\r\n        .required('Hãy chọn đủ Tỉnh, Quận/Huyện/TP và Trường'),\r\n    email: yup\r\n        .string()\r\n        .email('Hãy kiểm tra lại email'),\r\n})\r\n\r\nexport const FormUpdate = ({ showUpdateForm, setShowUpdateForm, onSubmit, userUpdating }: Props) => {\r\n    const { handleSubmit, control, setValue } = useForm({\r\n        defaultValues: userUpdating,\r\n        resolver: yupResolver(schema),\r\n    })\r\n    const loading = useAppSelector(selectLoading)\r\n    const [form] = Form.useForm();\r\n\r\n    const [province, setProvince] = useState<Province>();\r\n    const [optionsProvince, setOptionsProvince] = useState<Array<Province>>([]);\r\n\r\n    const [district, setDistrict] = useState<District | string>();\r\n    const [optionsDistrict, setOptionsDistrict] = useState<Array<District>>([]);\r\n    const [optionsSchool, setOptionsSchool] = useState<Array<FieldOption>>([]);\r\n\r\n    const [defaultValueSchool, setDefaultValueSchool] = useState<School>()\r\n    const [formLoading, setFormLoading] = useState(false)\r\n    const [isErrForm, setIsErrForm] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setFormLoading(true)\r\n\r\n        provinceApi.getAll()\r\n            .then((response: ListResponse<Province>) => {\r\n                const listProvince = mapProvinces(response.data)\r\n                setOptionsProvince(listProvince)\r\n\r\n                const defalultProvince = listProvince.find(province => province.codeName === userUpdating.province)\r\n                setProvince(defalultProvince)\r\n\r\n                //fetch district list when page is frist render\r\n                districtApi.getByCodeProvince(userUpdating.province).then((response: ListResponse<District>) => {\r\n                    const listDistrict = response.data\r\n\r\n                    setOptionsDistrict(listDistrict)\r\n\r\n                    const defalultDistrict = listDistrict.find(district => district.codeName === userUpdating.district)\r\n                    setDistrict(defalultDistrict)\r\n\r\n                    //fetch school list when page is frist render\r\n                    schoolApi.getByProDis(userUpdating.province, userUpdating.district).then((response: ListResponse<School>) => {\r\n                        const listSchool = response.data\r\n                        const options = mapOptions.school(response.data)\r\n\r\n                        setOptionsSchool(options);\r\n\r\n                        const defaultSchool = listSchool.find(school => school.codeName === userUpdating.school)\r\n                        setDefaultValueSchool(defaultSchool)\r\n                        setFormLoading(false)\r\n                    }).catch(err => {\r\n                        console.log(\"Khong the lay du lieu school\", err.message)\r\n                        setFormLoading(false)\r\n                        setIsErrForm(true)\r\n                    })\r\n                }).catch(err => {\r\n                    console.log(\"Khong the lay du lieu districts\", err.message)\r\n                    setFormLoading(false)\r\n                    setIsErrForm(true)\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(\"Khong the lay du lieu provinces\", err.message)\r\n                setFormLoading(false)\r\n                setIsErrForm(true)\r\n            });\r\n\r\n    }, [userUpdating.district, userUpdating.province, userUpdating.school])\r\n\r\n    const handleProvinceSelected = async (e: any, value: Province) => {\r\n        if (value?.codeName) {\r\n            setProvince(value)\r\n            setValue('province', value.codeName)\r\n\r\n            //reset district, school field when province filed is changed\r\n            setDistrict('')\r\n            setValue('school', '')\r\n            setOptionsSchool([])\r\n\r\n            setFormLoading(true)\r\n            const response: ListResponse<District> = await districtApi.getByCodeProvince(value.codeName);\r\n            setOptionsDistrict(response.data);\r\n            setFormLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleDistrictSelected = async (e: any, value: District) => {\r\n        if (value?.codeName) {\r\n            setDistrict(value)\r\n            setValue('district', value.codeName)\r\n\r\n            setFormLoading(true)\r\n            const response: ListResponse<School> = await schoolApi.getByProDis(province?.codeName as string, value.codeName)\r\n            const options = mapOptions.school(response.data)\r\n\r\n            setOptionsSchool(options);\r\n            setFormLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleOkBtn = () => {\r\n        form.submit()\r\n    }\r\n\r\n    return (\r\n        <Form onFinish={handleSubmit(onSubmit)} form={form}>\r\n            <Modal title=\"Chỉnh sửa thông tin tài khoản\" visible={showUpdateForm} onCancel={() => setShowUpdateForm(false)} onOk={handleOkBtn} okButtonProps={{ htmlType: 'submit' }}\r\n                confirmLoading={loading} okText='Cập nhật' cancelText='Hủy'>\r\n                <Box>\r\n                    <Spin spinning={formLoading} size='large'>\r\n                        {isErrForm && <Alert message='Đã xảy ra lỗi! Hãy tắt form và mở lại!' type='error' />}\r\n\r\n                        <InputField type='text' label='Họ tên*' name='name' control={control} required />\r\n\r\n                        <InputField type=\"email\" control={control} name='email' label='Email' required={true} />\r\n\r\n                        <InputField type='number' min='0' max='99' label='Điểm tín dụng' name='credit' control={control} required />\r\n\r\n                        <RadioBtnField name='isAdmin' label=\"Quyền*\" control={control} options={radioOptions} />\r\n\r\n                        {province && <AutoCompleteField label=\"Tỉnh*\" title='name' value={province} onChange={handleProvinceSelected} options={optionsProvince} disabled={optionsProvince.length === 0 ? true : false} />}\r\n\r\n                        {(district || district === '') && <AutoCompleteField label=\"Quận/Huyện/TP*\" title='name' value={district} onChange={handleDistrictSelected} options={optionsDistrict} disabled={optionsDistrict.length === 0 ? true : false} />}\r\n\r\n                        {defaultValueSchool && <SelectField label='Trường*' name='school' defaultValue={defaultValueSchool} control={control} disabled={optionsSchool.length === 0 ? true : false} options={optionsSchool} mt={16} mb={8} />}\r\n                    </Spin>\r\n                </Box>\r\n            </Modal>\r\n        </Form>\r\n    )\r\n}\r\n","import { SearchOutlined } from '@ant-design/icons'\r\nimport { Grid, Theme } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { AutoComplete, Button, Input, Select, Tooltip } from 'antd'\r\nimport { useAppSelector } from 'app/hooks'\r\nimport { useDistrict, useProvince, useSchool } from 'hooks'\r\nimport { Filter } from 'models'\r\nimport { ChangeEvent, useState } from 'react'\r\nimport { removeAccents } from 'utils'\r\nimport { selectFilter } from '../usersSlice'\r\n\r\ninterface Props {\r\n    handleSearch: (filter: Filter) => void\r\n    handleFilter: (e: any, key: string) => void\r\n    handleClearFilter: () => void\r\n}\r\n\r\nconst { Option } = Select\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    margin: {\r\n        margin: `${theme.spacing(1)}px ${theme.spacing(0.5)}px`,\r\n        width: '100%'\r\n    }\r\n}))\r\n\r\nexport const Operation = ({ handleSearch, handleFilter, handleClearFilter }: Props) => {\r\n    const filter: Filter = useAppSelector(selectFilter)\r\n    const classes = useStyles()\r\n    const [searchData, setSearchData] = useState(filter._keysearch)\r\n\r\n    const [provinceData, setProvinceData] = useState(filter._province)\r\n    const [districtData, setDistrictData] = useState(filter._district)\r\n    const [schoolData, setSchoolData] = useState(filter._school)\r\n\r\n    const [creditSortValue, setCreditSelectValue] = useState((filter._order && filter._sort === 'credit') ? `${filter._sort}.${filter._order}` : undefined)\r\n    const [createdAtSortValue, setCreateAtSelectValue] = useState((filter._order && filter._sort === 'createdat') ? `${filter._sort}.${filter._order}` : undefined)\r\n\r\n    const { autoCompProvince } = useProvince()\r\n    const { autoCompDistrict } = useDistrict()\r\n    const { autoCompSchool } = useSchool()\r\n\r\n    const onChangeSearch = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchData(e.target.value)\r\n        const newFilter: Filter = {\r\n            ...filter,\r\n            _keysearch: removeAccents(e.target.value),\r\n            _page: 1\r\n        }\r\n\r\n        handleSearch(newFilter)\r\n    }\r\n\r\n    const onClickClearFilter = (e: any) => {\r\n        handleClearFilter()\r\n\r\n        setSearchData('')\r\n        setProvinceData('')\r\n        setDistrictData('')\r\n        setSchoolData('')\r\n        setCreditSelectValue(undefined);\r\n        setCreateAtSelectValue(undefined);\r\n    }\r\n\r\n    const onChangeAutoComp = (e: any, key: string) => {\r\n        switch (key) {\r\n            case '_province':\r\n                setProvinceData(e)\r\n                break;\r\n            case '_district':\r\n                setDistrictData(e)\r\n                break;\r\n            case '_school':\r\n                setSchoolData(e)\r\n                break;\r\n        }\r\n\r\n        handleFilter(e, key)\r\n    }\r\n\r\n    const onChangeSortSelect = (e: any, key: string) => {\r\n        if (e) {\r\n            const [_sort] = e.split('.')\r\n\r\n            if (_sort === 'credit') {\r\n                setCreditSelectValue(e)\r\n                setCreateAtSelectValue(undefined)\r\n            } else {\r\n                setCreateAtSelectValue(e)\r\n                setCreditSelectValue(undefined)\r\n            }\r\n        } else {\r\n            setCreditSelectValue(e)\r\n            setCreateAtSelectValue(e)\r\n        }\r\n\r\n        handleFilter(e, key)\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={1}>\r\n            <Grid item sm={12} md={2}>\r\n                <Tooltip title=\"Nhập vào từ khóa để tìm kiếm\">\r\n                    <Input className={classes.margin} size='large' placeholder=\"Nhập từ khóa tìm kiếm\" value={searchData} onChange={onChangeSearch} allowClear prefix={<SearchOutlined />} />\r\n                </Tooltip>\r\n            </Grid>\r\n\r\n            <Grid item sm={12} md={4}>\r\n                <Grid container spacing={1}>\r\n                    <Grid item sm={12} md={4}>\r\n                        <Tooltip title=\"Chọn 1 giá trị để lọc dữ liệu quyền truy cập\">\r\n                            <Select allowClear onChange={(e: any) => handleFilter(e, '_role')} value={filter._role} className={classes.margin} placeholder=\"Admin/User\" size='large'>\r\n                                <Option value='admin'>Admin</Option>\r\n                                <Option value='user'>Người dùng</Option>\r\n                            </Select>\r\n                        </Tooltip>\r\n                    </Grid>\r\n\r\n                    <Grid item sm={12} md={4}>\r\n                        <Tooltip title=\"Sắp xếp tăng/giảm dần uy tín\">\r\n                            <Select allowClear onChange={(e: any) => onChangeSortSelect(e, '_sort')} value={creditSortValue} className={classes.margin} placeholder=\"Tín dụng\" size='large'>\r\n                                <Option value='credit.asc'>Sắp xếp tăng dần</Option>\r\n                                <Option value='credit.desc'>Sắp xếp giảm dần</Option>\r\n                            </Select>\r\n                        </Tooltip>\r\n                    </Grid>\r\n\r\n                    <Grid item sm={12} md={4}>\r\n                        <Tooltip title=\"Sắp xếp tăng/giảm dần ngày tạo tài khoản\">\r\n                            <Select allowClear onChange={(e: any) => onChangeSortSelect(e, '_sort')} value={createdAtSortValue} className={classes.margin} placeholder=\"Ngày khởi tạo\" size='large'>\r\n                                <Option value='createdat.asc'>Sắp xếp tăng dần</Option>\r\n                                <Option value='createdat.desc'>Sắp xếp giảm dần</Option>\r\n                            </Select>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item sm={12} md={6}>\r\n                <Grid container spacing={1}>\r\n                    <Grid item sm={12} md={4}>\r\n                        <Tooltip title=\"Chọn 1 giá trị để lọc dữ liệu tên tỉnh\">\r\n                            <AutoComplete\r\n                                onChange={(e: any) => onChangeAutoComp(e, '_province')}\r\n                                value={provinceData}\r\n                                className={classes.margin}\r\n                                size='large'\r\n                                options={autoCompProvince}\r\n                                placeholder=\"Nhập vào một tỉnh\"\r\n                                filterOption={(inputValue, option: any) =>\r\n                                    removeAccents(option!.label).toUpperCase().indexOf(removeAccents(inputValue.toUpperCase())) !== -1\r\n                                }\r\n                                allowClear\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n\r\n                    <Grid item sm={12} md={3}>\r\n                        <Tooltip title=\"Chọn 1 giá trị để lọc dữ liệu quận/huyện/tp\">\r\n                            <AutoComplete\r\n                                onChange={(e: any) => onChangeAutoComp(e, '_district')}\r\n                                className={classes.margin}\r\n                                value={districtData}\r\n                                size='large'\r\n                                options={autoCompDistrict}\r\n                                placeholder=\"Nhập vào một quận/huyện/tp\"\r\n                                filterOption={(inputValue, option: any) =>\r\n                                    removeAccents(option!.label).toUpperCase().indexOf(removeAccents(inputValue.toUpperCase())) !== -1\r\n                                }\r\n                                allowClear\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n\r\n                    <Grid item sm={12} md={3}>\r\n                        <Tooltip title=\"Chọn 1 giá trị để lọc dữ liệu tên trường\">\r\n                            <AutoComplete\r\n                                onChange={(e: any) => onChangeAutoComp(e, '_school')}\r\n                                className={classes.margin}\r\n                                value={schoolData as string}\r\n                                size='large'\r\n                                options={autoCompSchool}\r\n                                placeholder=\"Nhập vào một trường\"\r\n                                filterOption={(inputValue, option: any) =>\r\n                                    removeAccents(option!.label).toUpperCase().indexOf(removeAccents(inputValue.toUpperCase())) !== -1\r\n                                }\r\n                                allowClear\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n\r\n                    <Grid item sm={12} md={2}>\r\n                        <Tooltip title=\"Xóa tất cả dữ liệu đã chọn\">\r\n                            <Button className={classes.margin} onClick={onClickClearFilter} type='primary' danger size=\"large\">\r\n                                Xóa\r\n                            </Button>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import { Box, LinearProgress } from \"@material-ui/core\"\r\nimport { useAppDispatch, useAppSelector } from \"app/hooks\"\r\nimport { Filter, UserDataTable, UserUpdate } from \"models\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { FormUpdate, Operation, UserTable } from \"../../users/components\"\r\nimport { selectFilter, selectLoading, userActions } from \"../../users/usersSlice\"\r\n\r\nconst UserListPage = () => {\r\n    const dispatch = useAppDispatch()\r\n    const filter = useAppSelector(selectFilter)\r\n\r\n    const loading = useAppSelector(selectLoading)\r\n    const [showUpdateForm, setShowUpdateForm] = useState(false)\r\n    const [userUpdating, setUserUpdating] = useState<UserUpdate>();\r\n\r\n    useEffect(() => {\r\n        dispatch(userActions.getUser(filter))\r\n    }, [filter, dispatch])\r\n\r\n    const handleUpdateForm = async (data: UserDataTable) => {\r\n        const temp = {\r\n            ...data,\r\n            isAdmin: data.isAdmin === 'admin' ? true : false,\r\n        }\r\n\r\n        dispatch(userActions.updateUser(temp))\r\n        setShowUpdateForm(false)\r\n    }\r\n\r\n    const handleRemove = (record: UserDataTable) => {\r\n        dispatch(userActions.removeUser(record.key))\r\n    }\r\n\r\n    const handleSearch = (value: Filter) => {\r\n        dispatch(userActions.searchWithDebounce(value))\r\n    }\r\n\r\n    const handleFilter = (e: any, key: string) => {\r\n        let newFilter = {};\r\n\r\n        if (key === '_sort') {\r\n            if (e) {\r\n                const [_sort, _order] = e.split('.')\r\n\r\n                newFilter = {\r\n                    ...filter,\r\n                    _sort,\r\n                    _order\r\n                }\r\n            } else {\r\n                newFilter = {\r\n                    ...filter,\r\n                    _sort: e,\r\n                    _order: e\r\n                }\r\n            }\r\n        }\r\n\r\n        if (key === '_role' || key === \"_school\" || key === '_district' || key === '_province') {\r\n            newFilter = {\r\n                ...filter,\r\n                ...newFilter,\r\n                [key]: e\r\n            }\r\n        }\r\n\r\n        dispatch(userActions.setFilter(newFilter))\r\n    }\r\n\r\n    const handleClearFilter = () => {\r\n        dispatch(userActions.setFilter({\r\n            _page: 1,\r\n            _limit: 15,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            {loading && <LinearProgress />}\r\n\r\n            <Box padding={2}>\r\n                <Box mb={2}>\r\n                    <Operation handleSearch={handleSearch} handleFilter={handleFilter} handleClearFilter={handleClearFilter} />\r\n                </Box>\r\n\r\n\r\n                <UserTable\r\n                    setShowUpdateForm={setShowUpdateForm}\r\n                    setUserUpdating={setUserUpdating}\r\n                    handleRemove={handleRemove}\r\n                />\r\n\r\n                {userUpdating &&\r\n                    <FormUpdate\r\n                        key={userUpdating.key}\r\n                        showUpdateForm={showUpdateForm}\r\n                        setShowUpdateForm={setShowUpdateForm}\r\n                        onSubmit={handleUpdateForm}\r\n                        userUpdating={userUpdating}\r\n                    />}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default UserListPage\r\n","import { Route, Switch } from 'react-router-dom'\r\nimport UserListPage from './UserListPage'\r\n\r\nconst UserPage = () => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path='/admin/users'>\r\n                <UserListPage />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default UserPage\r\n","import { Box, Theme, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\n\r\ninterface Props {\r\n    icon: any\r\n    label: string\r\n    quantity: number\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: 120,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        boxShadow: theme.shadows[3],\r\n        padding: theme.spacing(1, 2),\r\n        borderRadius: 5,\r\n\r\n        '& .icon': {\r\n            width: '4.5rem',\r\n            height: '4.5rem',\r\n            display: 'grid',\r\n            placeItems: 'center',\r\n            borderRadius: '50%',\r\n            background: theme.palette.primary.main,\r\n            marginRight: theme.spacing(2.5),\r\n\r\n            '& > svg': {\r\n                fill: '#fff',\r\n                width: '2em',\r\n                height: '2em',\r\n            }\r\n        },\r\n\r\n        '& .detail': {\r\n            '& .quantity': {\r\n                fontSize: '1.85rem',\r\n                fontWeight: 600\r\n            },\r\n\r\n            '& .text': {\r\n                color: theme.palette.text.secondary,\r\n                textTransform: 'lowercase'\r\n            }\r\n        }\r\n    }\r\n}))\r\n\r\nconst StatisticCard = ({ icon, label, quantity }: Props) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <span className=\"icon\">\r\n                {icon}\r\n            </span>\r\n\r\n            <span className=\"detail\">\r\n                <Typography className='quantity' variant='h4'>\r\n                    {quantity}\r\n                </Typography>\r\n\r\n                <Typography className='text'>\r\n                    {label}\r\n                </Typography>\r\n            </span>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default StatisticCard\r\n","import { Box, Theme } from \"@material-ui/core\"\r\nimport { Folder, Hearing, Home, People, Queue } from \"@material-ui/icons\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport { Statistic } from \"models\"\r\nimport StatisticCard from \"./StatisticCard\"\r\n\r\ninterface Props {\r\n    data: Statistic\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(auto-fit, minmax(150px ,1fr))',\r\n        gap: 20\r\n    }\r\n}))\r\n\r\nconst listLabelIcon = {\r\n    account: {\r\n        icon: <People />,\r\n        label: 'Tài khoản'\r\n    },\r\n    motel: {\r\n        icon: <Home />,\r\n        label: 'Nhà trọ'\r\n    },\r\n    approval: {\r\n        icon: <Queue />,\r\n        label: 'Chờ duyệt'\r\n    },\r\n    access: {\r\n        icon: <Hearing />,\r\n        label: 'Truy cập'\r\n    },\r\n    post: {\r\n        icon: <Folder />,\r\n        label: 'Bài viết'\r\n    },\r\n}\r\n\r\nexport const Statistics = ({ data }: Props) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Box className={classes.root} component='section'>\r\n            {Object.entries(data).map(([key, value]) => {\r\n                //@ts-ignore\r\n                const { icon, label } = listLabelIcon[key]\r\n\r\n                return (\r\n                    <StatisticCard\r\n                        key={key}\r\n                        icon={icon}\r\n                        label={label}\r\n                        quantity={value}\r\n                    />\r\n                )\r\n            })}\r\n        </Box>\r\n    )\r\n}\r\n","import { Box, Paper, Theme, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\n\r\ninterface Props {\r\n    children: any\r\n    label: string\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        padding: theme.spacing(1),\r\n        boxShadow: theme.shadows[3],\r\n\r\n        '& > .title': {\r\n            fontSize: '1.1rem',\r\n            fontWeight: 300,\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n\r\n        '& .body': {\r\n            padding: theme.spacing(0, 1)\r\n        }\r\n    }\r\n}))\r\n\r\nconst RecentActivitiesLayout = ({ children, label }: Props) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Typography className='title'>\r\n                {label}\r\n            </Typography>\r\n\r\n            <Box className=\"body\">\r\n                {children}\r\n            </Box>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default RecentActivitiesLayout\r\n","import { Avatar, Box, Table, TableBody, TableCell, TablePagination, TableRow, Theme, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport { UserTooltip } from \"components/Common\"\r\nimport { RecentActivity } from \"models\"\r\nimport { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { calculateCreatedTimeHDMY } from \"utils/convert-date/calculateCreatedTime\"\r\n\r\ninterface Props {\r\n    data: RecentActivity[]\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        '& .avatar': {\r\n            width: 34,\r\n            height: 34,\r\n        },\r\n\r\n        '& .content': {\r\n            fontSize: '0.8rem',\r\n        },\r\n\r\n        '& .date': {\r\n            fontSize: '0.65rem'\r\n        },\r\n    }\r\n}))\r\n\r\nconst RecentActivitiesTablee = ({ data }: Props) => {\r\n    const classes = useStyles()\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const ROW_PER_PAGE = 5\r\n\r\n    const handleChangePage = (e: any, page: number) => {\r\n        setCurrentPage(page)\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Table size='small'>\r\n                <TableBody>\r\n                    {data.slice(currentPage * ROW_PER_PAGE, currentPage * ROW_PER_PAGE + ROW_PER_PAGE)\r\n                        .map(activity => (\r\n                            <TableRow key={activity._id} hover>\r\n                                <TableCell\r\n                                    style={{\r\n                                        paddingRight: 4\r\n                                    }}\r\n                                >\r\n                                    <UserTooltip data={activity.owner}>\r\n                                        <Link to={`/profile/${activity.owner._id}`}>\r\n                                            <Avatar src={activity.owner.avatarUrl} className='avatar'>\r\n                                                {activity.owner.name[0]}\r\n                                            </Avatar>\r\n                                        </Link>\r\n                                    </UserTooltip>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"left\">\r\n                                    <Typography className='content'>\r\n                                        {activity.content}\r\n                                    </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"right\">\r\n                                    <Typography className=\"date\">\r\n                                        {calculateCreatedTimeHDMY(activity.createdAt)}\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n\r\n            <TablePagination\r\n                component=\"div\"\r\n                rowsPerPageOptions={[]}\r\n                labelDisplayedRows={({ from, to, count }) => `${from}-${to} của ${count !== -1 ? `${count} dòng` : `nhiều hơn ${to}`}`}\r\n                nextIconButtonText='Trang tiếp theo'\r\n                backIconButtonText='Trang trước'\r\n                count={data.length}\r\n                rowsPerPage={ROW_PER_PAGE}\r\n                page={currentPage}\r\n                onPageChange={handleChangePage}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default RecentActivitiesTablee\r\n","import { useAppSelector } from \"app/hooks\"\r\nimport { selectDataDashboard } from \"features/dashboard/dashboardSlice\"\r\nimport RecentActivitiesLayout from \"../Layouts/RecentActivitiesLayout\"\r\nimport RecentActivitiesTable from \"./RecentActivitiesTable\"\r\n\r\nconst RecentActivity = () => {\r\n    const dashboardData = useAppSelector(selectDataDashboard)\r\n\r\n    return (\r\n        <RecentActivitiesLayout label='Hoạt động gần đây'>\r\n            <RecentActivitiesTable data={dashboardData.recents.activities} />\r\n        </RecentActivitiesLayout>\r\n    )\r\n}\r\n\r\nexport default RecentActivity","import { Avatar, Box, Table, TableBody, TableCell, TablePagination, TableRow, Theme, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport { UserTooltip } from \"components/Common\"\r\nimport { Motel } from \"models\"\r\nimport { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { calculateCreatedTimeHDMY } from \"utils/convert-date/calculateCreatedTime\"\r\n\r\ninterface Props {\r\n    data: Motel[]\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        '& .avatar': {\r\n            width: 34,\r\n            height: 34,\r\n        },\r\n\r\n        '& .motel': {\r\n            fontSize: '0.8rem',\r\n        },\r\n\r\n        '& .date': {\r\n            fontSize: '0.65rem'\r\n        }\r\n    }\r\n}))\r\n\r\nconst RecentMotelTable = ({ data }: Props) => {\r\n    const classes = useStyles()\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const ROW_PER_PAGE = 5\r\n\r\n    const handleChangePage = (e: any, page: number) => {\r\n        setCurrentPage(page)\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Table size='small'>\r\n                <TableBody>\r\n                    {data.slice(currentPage * ROW_PER_PAGE, currentPage * ROW_PER_PAGE + ROW_PER_PAGE)\r\n                        .map(motel => (\r\n                            <TableRow key={motel._id} hover>\r\n                                <TableCell\r\n                                    style={{\r\n                                        paddingRight: 4\r\n                                    }}\r\n                                >\r\n                                    <UserTooltip data={motel.owner!}>\r\n                                        <Link to={`/profile/${motel.owner?._id!}`}>\r\n                                            <Avatar src={motel.owner?.avatarUrl} className='avatar'>\r\n                                                {motel.owner?.name[0]}\r\n                                            </Avatar>\r\n                                        </Link>\r\n                                    </UserTooltip>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"left\">\r\n                                    <Typography className='motel'>\r\n                                        {motel.name}\r\n                                    </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"right\">\r\n                                    <Typography className=\"date\">\r\n                                        {calculateCreatedTimeHDMY(motel.createdAt!)}\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n\r\n            <TablePagination\r\n                component=\"div\"\r\n                rowsPerPageOptions={[]}\r\n                labelDisplayedRows={({ from, to, count }) => `${from}-${to} của ${count !== -1 ? `${count} dòng` : `nhiều hơn ${to}`}`}\r\n                nextIconButtonText='Trang tiếp theo'\r\n                backIconButtonText='Trang trước'\r\n                count={data.length}\r\n                rowsPerPage={ROW_PER_PAGE}\r\n                page={currentPage}\r\n                onPageChange={handleChangePage}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default RecentMotelTable\r\n","import { useAppSelector } from \"app/hooks\"\r\nimport { selectDataDashboard } from \"features/dashboard/dashboardSlice\"\r\nimport RecentActivitiesLayout from \"../Layouts/RecentActivitiesLayout\"\r\nimport RecentMotelTable from \"./RecentMotelTable\"\r\n\r\nconst RecentMotel = () => {\r\n    const dashboardData = useAppSelector(selectDataDashboard)\r\n\r\n    return (\r\n        <RecentActivitiesLayout label='Đăng nhà trọ gần đây'>\r\n            <RecentMotelTable data={dashboardData.recents.motels} />\r\n        </RecentActivitiesLayout>\r\n    )\r\n}\r\n\r\nexport default RecentMotel\r\n","import { Box, Grid } from \"@material-ui/core\"\r\nimport RecentActivity from \"./RecentActivity\"\r\nimport RecentMotel from \"./RecentMotel\"\r\n\r\nexport const RecentActivities = () => {\r\n    return (\r\n        <Box>\r\n            <Grid container spacing={2}>\r\n                <Grid item lg={5}>\r\n                    <RecentMotel />\r\n                </Grid>\r\n                <Grid item lg={7}>\r\n                    <RecentActivity />\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n","import { useAppDispatch, useAppSelector } from \"app/hooks\"\r\nimport { dashboardActions, selectDataDashboard } from \"features/dashboard/dashboardSlice\"\r\nimport { FixedSizeList as List } from \"react-window\";\r\nimport AutoSizer from \"react-virtualized-auto-sizer\"\r\nimport ListRow from './ListRow'\r\nimport { Box } from \"@material-ui/core\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { socketClient } from \"utils\";\r\nimport { SOCKET_EVENT } from \"constant/constant\";\r\n\r\nconst ListOnline = () => {\r\n    const socket = useRef<Socket>()\r\n    const dispatch = useAppDispatch()\r\n    const dashboardData: any = useAppSelector(selectDataDashboard)\r\n\r\n    const Row = (({ index, style }: { index: number; style: any }) => (\r\n        <ListRow style={style} user={dashboardData.list.onlines[index]} isOnline />\r\n    ))\r\n\r\n    useEffect(() => {\r\n        socket.current = socketClient\r\n\r\n        const listener = (data: any) => {\r\n            dispatch(dashboardActions.setListOnline(data))\r\n        }\r\n\r\n        socket.current.on(SOCKET_EVENT.online, listener)\r\n\r\n        return () => {\r\n            socket.current?.off(SOCKET_EVENT.online, listener)\r\n        }\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Box style={{\r\n            width: '100%',\r\n            height: '100%',\r\n        }}>\r\n            <AutoSizer>\r\n                {({ width, height }: { width: any, height: any }) => (\r\n                    <List\r\n                        itemCount={dashboardData.list.onlines.length}\r\n                        itemSize={50}\r\n                        height={height}\r\n                        width={width}\r\n                    >\r\n                        {Row}\r\n                    </List>\r\n                )}\r\n            </AutoSizer>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ListOnline\r\n","import { useAppSelector } from \"app/hooks\"\r\nimport { selectDataDashboard } from \"features/dashboard/dashboardSlice\"\r\nimport { FixedSizeList as List } from \"react-window\";\r\nimport AutoSizer from \"react-virtualized-auto-sizer\"\r\nimport ListRow from './ListRow'\r\nimport { Box } from \"@material-ui/core\";\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst ListPermission = (props: Props) => {\r\n    const dashboardData: any = useAppSelector(selectDataDashboard)\r\n\r\n    const Row = (({ index, style }: { index: number; style: any }) => (\r\n        <ListRow style={style} user={dashboardData.list.importants[index]} />\r\n    ))\r\n\r\n    return (\r\n        <Box style={{\r\n            width: '100%',\r\n            height: '100%'\r\n        }}>\r\n            <AutoSizer>\r\n                {({ width, height }: { width: any, height: any }) => (\r\n                    <List\r\n                        itemCount={dashboardData.list.importants.length}\r\n                        itemSize={50}\r\n                        height={height}\r\n                        width={width}\r\n                    >\r\n                        {Row}\r\n                    </List>\r\n                )}\r\n            </AutoSizer>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ListPermission","import { Box, Button, ButtonGroup, makeStyles, Paper, Theme } from '@material-ui/core'\r\nimport { memo, useState } from 'react'\r\nimport ListOnline from './ListOnline'\r\nimport ListPermission from './ListPermission'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        height: '100%',\r\n\r\n        '& .btn-control': {\r\n            fontSize: '0.7rem',\r\n            textTransform: 'initial',\r\n\r\n            '&.active': {\r\n                background: theme.palette.primary.main,\r\n                color: '#fff'\r\n            }\r\n        },\r\n\r\n        '& .list-wrapper': {\r\n            height: 600,\r\n            overflow: 'auto',\r\n            boxShadow: theme.shadows[3],\r\n            paddingInline: theme.spacing(1),\r\n\r\n            '& *::-webkit-scrollbar': {\r\n                width: 0\r\n            }\r\n        }\r\n    }\r\n}))\r\n\r\nexport const ListSider = memo(() => {\r\n    const classes = useStyles()\r\n    const [listMode, setListMode] = useState('online')\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className='controls'>\r\n                <ButtonGroup fullWidth>\r\n                    <Button\r\n                        className={`btn-control ${listMode === 'online' ? 'active' : ''}`}\r\n                        onClick={() => setListMode('online')}\r\n                    >\r\n                        Trực tuyến\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={`btn-control ${listMode === 'permission' ? 'active' : ''}`}\r\n                        onClick={() => setListMode('permission')}\r\n                    >\r\n                        Quản trị\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </Box>\r\n\r\n            <Paper className='list-wrapper'>\r\n                {listMode === 'online' ? <ListOnline />\r\n                    : <ListPermission />}\r\n            </Paper>\r\n        </Box>\r\n    )\r\n})\r\n","import { makeStyles, Paper, Theme, Typography } from '@material-ui/core';\r\nimport { Charts } from 'features/dashboard/dashboardSlice';\r\nimport { Chart } from 'models';\r\nimport { memo, useMemo } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\ninterface Props {\r\n    data: Charts\r\n}\r\n\r\ninterface Columns {\r\n    year: number\r\n    month: number\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n        boxShadow: theme.shadows[3],\r\n\r\n        '& > .title': {\r\n            textAlign: 'center',\r\n            fontSize: '1.7rem',\r\n            marginBottom: theme.spacing(3)\r\n        }\r\n    }\r\n}))\r\n\r\nconst calcMaxYearMonth = (data: Charts) => {\r\n    let maxYear = 0\r\n    let maxMonth = 1\r\n\r\n    Object.entries(data).forEach(([key, value]) => {\r\n        value.forEach((x: Chart) => {\r\n            const { year, month } = x.createdAt\r\n\r\n            maxYear = year > maxYear ? year : maxYear\r\n            maxMonth = month > maxMonth && year === maxYear ? month : maxMonth\r\n        })\r\n    })\r\n\r\n    return { maxYear, maxMonth }\r\n}\r\n\r\nconst calcColums = (data: Charts) => {\r\n    let { maxMonth, maxYear } = calcMaxYearMonth(data)\r\n\r\n    return new Array(12).fill('').map(() => {\r\n        if (--maxMonth <= -1) {\r\n            maxMonth = 11\r\n            maxYear = maxYear - 1\r\n        }\r\n\r\n        return {\r\n            year: maxYear,\r\n            month: maxMonth + 1\r\n        }\r\n    }).reverse()\r\n}\r\n\r\n// convert original data into data chart\r\nconst calcDataLine = (columns: Columns[], charts: Chart[]) => {\r\n    return columns.map(x => {\r\n        const mathMonthYear = charts.find(chart => {\r\n            const { month, year } = chart.createdAt\r\n\r\n            return x.month === month && x.year === year\r\n        })\r\n\r\n        if (mathMonthYear)\r\n            return mathMonthYear.quantity\r\n\r\n        return null\r\n    })\r\n}\r\n\r\nexport const LineChart = memo(({ data }: Props) => {\r\n    const classes = useStyles()\r\n\r\n    const createDataChart = useMemo(() => {\r\n        if (!data) return\r\n\r\n        const columns = calcColums(data)\r\n        const labels = columns.map(x => (`Tháng ${x.month} Năm ${x.year}`))\r\n        const registerdAccount = calcDataLine(columns, data.registerdAccount)\r\n        const totalMotelEveryMonth = calcDataLine(columns, data.totalMotelEveryMonth)\r\n        const totalPostEveryMonth = calcDataLine(columns, data.totalPostEveryMonth)\r\n\r\n        return {\r\n            labels,\r\n            datasets: [\r\n                {\r\n                    label: \"Tổng số bài viết đã đăng\",\r\n                    data: totalPostEveryMonth,\r\n                    fill: true,\r\n                    backgroundColor: \"rgba(75,192,192,0.2)\",\r\n                    borderColor: \"#2196f3\"\r\n                },\r\n                {\r\n                    label: \"Tổng số nhà trọ đã đăng\",\r\n                    data: totalMotelEveryMonth,\r\n                    fill: true,\r\n                    backgroundColor: \"rgba(255,200,87,0.2)\",\r\n                    borderColor: \"#FFC857\"\r\n                },\r\n                {\r\n                    label: \"Tổng số tài khoản đã đăng ký\",\r\n                    data: registerdAccount,\r\n                    fill: true,\r\n                    backgroundColor: \"rgba(187,134,252,0.2)\",\r\n                    borderColor: \"#bb86fc\"\r\n                },\r\n            ]\r\n        }\r\n    }, [data])\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Typography className='title' variant='h4'>\r\n                Dữ liệu trong từng tháng trong năm 2021\r\n            </Typography>\r\n\r\n            {createDataChart && <Line data={createDataChart} />}\r\n        </Paper>\r\n    )\r\n})\r\n","import { Box, makeStyles, Theme } from '@material-ui/core';\r\nimport { RatioPost, Size } from 'models';\r\nimport { memo, useMemo } from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\ninterface Props {\r\n    size?: Size\r\n    ratioPost?: RatioPost[]\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: 400,\r\n        padding: theme.spacing(2, 0)\r\n    }\r\n}))\r\n\r\nexport const DoughnutChart = memo(({ size, ratioPost }: Props) => {\r\n    const classes = useStyles()\r\n\r\n    const data = useMemo(() => {\r\n        if (!size && !ratioPost) return\r\n\r\n        let labels: string[] = []\r\n        let data: number[] = []\r\n        let backgroundColor: string[] = []\r\n\r\n        if (size) {\r\n            labels = ['Dung lượng đã dùng(MB)', 'Dung lượng trống(MB)']\r\n            data = [size.dataSize, size.totalSize - size.dataSize]\r\n            backgroundColor = [\r\n                'rgb(255, 99, 132)',\r\n                'rgb(83, 83, 83)',\r\n            ]\r\n        }\r\n\r\n        if (ratioPost) {\r\n            ratioPost.forEach(x => {\r\n                labels.push(x.name)\r\n                data.push(x.quantity)\r\n            })\r\n            backgroundColor = [\r\n                'rgb(255, 99, 132)',\r\n                'rgb(54, 162, 235)',\r\n                'rgb(255, 205, 86)'\r\n            ]\r\n        }\r\n\r\n        return {\r\n            labels,\r\n            datasets: [\r\n                {\r\n                    data,\r\n                    backgroundColor\r\n                },\r\n            ]\r\n        };\r\n    }, [size, ratioPost])\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            {data && <Doughnut data={data} />}\r\n        </Box>\r\n    )\r\n})\r\n","import { Box, Grid, Paper, Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\r\nimport {\r\n    ArcElement, CategoryScale, Chart as ChartJS, Legend, LinearScale, LineElement, PointElement, Title,\r\n    Tooltip\r\n} from 'chart.js';\r\nimport { SOCKET_EVENT } from 'constant/constant';\r\nimport { DoughnutChart, LineChart, ListSider, RecentActivities, Statistics } from 'features/dashboard/components';\r\nimport { dashboardActions, selectDataDashboard } from 'features/dashboard/dashboardSlice';\r\nimport { useEffect, useRef } from 'react';\r\nimport { Socket } from 'socket.io-client';\r\nimport { socketClient } from 'utils';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    ArcElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        padding: theme.spacing(1.5),\r\n\r\n        '& .chart-wrapper': {\r\n            display: 'flex',\r\n            justifyContent: 'space-around',\r\n            boxShadow: theme.shadows[3],\r\n            marginTop: theme.spacing(2)\r\n        }\r\n    }\r\n}))\r\n\r\nconst DashboardPage = (props: Props) => {\r\n    const classes = useStyles()\r\n    const socket = useRef<Socket>()\r\n\r\n    const dispatch = useAppDispatch()\r\n    const dashboardData = useAppSelector(selectDataDashboard)\r\n\r\n    useEffect(() => {\r\n        socket.current = socketClient\r\n\r\n        const listenerMotel = (data: any) => {\r\n            dispatch(dashboardActions.setRecentMotel(data))\r\n        }\r\n\r\n        const listenerActivities = (data: any) => {\r\n            dispatch(dashboardActions.setRecentActivities(data))\r\n        }\r\n\r\n        const listenerStatistics = (data: any) => {\r\n            dispatch(dashboardActions.setStatistic(data))\r\n        }\r\n\r\n        socket.current.on(SOCKET_EVENT.motelActivities, listenerMotel)\r\n        socket.current.on(SOCKET_EVENT.activities, listenerActivities)\r\n        socket.current.on(SOCKET_EVENT.motelActivities, listenerStatistics)\r\n\r\n        dispatch(dashboardActions.getData())\r\n\r\n        return () => {\r\n            socket.current?.off(SOCKET_EVENT.motelActivities, listenerMotel)\r\n            socket.current?.off(SOCKET_EVENT.activities, listenerActivities)\r\n            socket.current?.off(SOCKET_EVENT.motelActivities, listenerStatistics)\r\n        }\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            {dashboardData.statistics && <Statistics data={dashboardData.statistics} />}\r\n\r\n            <Box my={4}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item lg={10}>\r\n                        <RecentActivities />\r\n\r\n                        <Paper className='chart-wrapper'>\r\n                            <DoughnutChart ratioPost={dashboardData.doughnut.ratioPost} />\r\n\r\n                            <DoughnutChart size={dashboardData.doughnut.size} />\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item lg={2}>\r\n                        <ListSider />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Box my={2}>\r\n                    <LineChart data={dashboardData.chart} />\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default DashboardPage\r\n","import { ArrowLeftOutlined } from '@ant-design/icons'\r\nimport { Button, Layout } from 'antd'\r\nimport { AdminSider } from 'features/admin/components'\r\nimport ApprovePage from 'features/admin/pages/ApprovePage'\r\nimport FeedbackPage from 'features/admin/pages/FeedbackPage'\r\nimport MotelPage from 'features/admin/pages/MotelPage'\r\nimport PostPage from 'features/admin/pages/PostPage'\r\nimport UserPage from 'features/admin/pages/UserPage'\r\nimport { Link, Route, Switch } from 'react-router-dom'\r\nimport DashboardPage from '../features/admin/pages/DashboardPage'\r\n\r\nconst { Header, Content } = Layout\r\n\r\nconst AdminPage = () => {\r\n    return (\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n            <Header>\r\n                <Button\r\n                    type=\"primary\"\r\n                    icon={<ArrowLeftOutlined />}\r\n                    size='small'\r\n                >\r\n                    <Link to='/'>\r\n                        Trang chủ\r\n                    </Link>\r\n                </Button>\r\n            </Header>\r\n\r\n            <Layout>\r\n                <AdminSider />\r\n\r\n                <Content style={{ background: '#fff' }}>\r\n                    <Switch>\r\n                        <Route path='/admin/dashboard'>\r\n                            <DashboardPage />\r\n                        </Route>\r\n\r\n                        <Route path='/admin/users'>\r\n                            <UserPage />\r\n                        </Route>\r\n\r\n                        <Route path='/admin/motels'>\r\n                            <MotelPage />\r\n                        </Route>\r\n\r\n                        <Route path='/admin/posts'>\r\n                            <PostPage />\r\n                        </Route>\r\n\r\n                        <Route path='/admin/approves'>\r\n                            <ApprovePage />\r\n                        </Route>\r\n\r\n                        <Route path='/admin/feedback'>\r\n                            <FeedbackPage />\r\n                        </Route>\r\n                    </Switch>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AdminPage\r\n"],"sourceRoot":""}