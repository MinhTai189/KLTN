{"version":3,"sources":["pages/ChatPage.tsx"],"names":["ChatPage","dispatch","useAppDispatch","refetchChatGroup","useAppSelector","selectRefetchGroupChat","groupId","useParams","useEffect","getNewMessage","newMessage","chatActions","changeLastMessageGroup","socketClient","emit","SOCKET_EVENT","subscribeGroups","on","newMessageGroups","unsubscribeGroups","off","getChatGroup"],"mappings":"kGAAA,0EAyCeA,UAhCE,WACb,IAAMC,EAAWC,cACXC,EAAmBC,YAAeC,KAChCC,EAAYC,cAAZD,QAwBR,OAtBAE,qBAAU,WACN,IAAMC,EAAgB,SAACC,GACfA,EAAWJ,UAAYA,GAG3BL,EAASU,IAAYC,uBAAuBF,KAOhD,OAJAG,IAAaC,KAAKC,IAAaC,iBAE/BH,IAAaI,GAAGF,IAAaG,iBAAkBT,GAExC,WACHI,IAAaC,KAAKC,IAAaI,mBAC/BN,IAAaO,IAAIL,IAAaG,iBAAkBT,MAErD,CAACR,EAAUK,IAEdE,qBAAU,WACNP,EAASU,IAAYU,kBACtB,CAAClB,EAAkBF,IAGlB,cAAC,IAAD","file":"static/js/8.dfce7585.chunk.js","sourcesContent":["import { useAppDispatch, useAppSelector } from \"app/hooks\"\r\nimport { SOCKET_EVENT } from \"constant/constant\"\r\nimport { chatActions, selectRefetchGroupChat } from \"features/chats/chatSlice\"\r\nimport { ChatSection } from \"features/chats/components\"\r\nimport { AddLastMessage } from \"models\"\r\nimport { useEffect } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { socketClient } from \"utils\"\r\n\r\nconst ChatPage = () => {\r\n    const dispatch = useAppDispatch()\r\n    const refetchChatGroup = useAppSelector(selectRefetchGroupChat)\r\n    const { groupId } = useParams<{ groupId: string }>()\r\n\r\n    useEffect(() => {\r\n        const getNewMessage = (newMessage: AddLastMessage) => {\r\n            if (newMessage.groupId === groupId)\r\n                return\r\n\r\n            dispatch(chatActions.changeLastMessageGroup(newMessage))\r\n        }\r\n\r\n        socketClient.emit(SOCKET_EVENT.subscribeGroups)\r\n\r\n        socketClient.on(SOCKET_EVENT.newMessageGroups, getNewMessage)\r\n\r\n        return () => {\r\n            socketClient.emit(SOCKET_EVENT.unsubscribeGroups)\r\n            socketClient.off(SOCKET_EVENT.newMessageGroups, getNewMessage)\r\n        }\r\n    }, [dispatch, groupId])\r\n\r\n    useEffect(() => {\r\n        dispatch(chatActions.getChatGroup())\r\n    }, [refetchChatGroup, dispatch])\r\n\r\n    return (\r\n        <ChatSection />\r\n    )\r\n}\r\n\r\nexport default ChatPage\r\n"],"sourceRoot":""}