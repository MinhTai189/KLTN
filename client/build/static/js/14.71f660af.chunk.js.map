{"version":3,"sources":["../node_modules/@material-ui/icons/esm/LocalOffer.js","features/motels/components/PostView/MotelPreview.tsx","features/motels/components/Recommended/MotelRecommended.tsx","features/motels/components/Recommended/ListRecommended.tsx","features/posts/components/PostView/Layout/RecommendedLayout.tsx","features/posts/components/PostView/Recommended/MotelRecommendPost.tsx","features/posts/components/PostView/Recommended/RelatedPost.tsx","pages/PostViewPage.tsx"],"names":["createSvgIcon","React","d","useStyles","makeStyles","theme","root","padding","spacing","fontSize","textTransform","fontWeight","breakpoints","down","display","alignItems","marginBottom","marginRight","placeItems","background","palette","primary","main","borderRadius","width","height","fill","marginTop","objectFit","cursor","position","margin","lineHeight","minWidth","border","outline","boxShadow","color","right","left","zIndex","MotelPreview","motelData","classes","useState","showModalPreview","setShowModalReview","currentPreviewImg","setCurrentPreviewImg","images","thumbnail","Paper","className","Box","Typography","variant","name","Divider","style","LocationOn","address","LocalOffer","getPriceMotel","room","Star","mark","toFixed","itemsToShow","isRTL","pagination","itemPosition","enableSwipe","enableMouseSwipe","itemPadding","showEmptySlots","map","image","index","src","alt","onClick","toString","mt","mb","Button","fullWidth","to","_id","open","onCancel","currentIndex","setCurrentIndex","handleNextPreview","prev","length","handlePrevPreview","motelName","shadows","MotelRecommended","Card","CardActionArea","CardMedia","component","CardContent","DateRange","calculateCreatedTimeDMY","createdAt","gridTemplateColumns","gap","ListRecommended","listMotel","motel","RecommendedLayout","children","title","MotelRecommendPost","listStyle","marginLeft","overflow","whiteSpace","textOverflow","transition","RelatedPost","listPost","post","maxWidth","PostViewPage","dispatch","useAppDispatch","filterComment","useAppSelector","selectFilterComment","filterPost","selectFilterPost","paginationComment","selectPaginationComment","postData","selectDataPost","id","useParams","useEffect","postAction","getById","commentAction","get","_post","MainLayout","Grid","container","item","xs","undefined","sm","md","lg","xl","_page","my","posts","motels","justifyContent","Pagination","count","Math","ceil","_totalRows","_limit","onChange","e","page","setFilter","size","shape","hideNextButton","hidePrevButton"],"mappings":"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","file":"static/js/14.71f660af.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\"\n}), 'LocalOffer');","import { Box, Button, Divider, makeStyles, Paper, Theme, Typography } from \"@material-ui/core\"\r\nimport { LocalOffer, LocationOn, Star } from \"@material-ui/icons\"\r\nimport { Modal } from \"components/Common\"\r\nimport { Motel } from \"models\"\r\nimport { useState } from \"react\"\r\nimport Carousel from \"react-elastic-carousel\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { getPriceMotel } from \"utils/getPriceMotel\"\r\nimport { PreviewImages } from \"..\"\r\n\r\ninterface Props {\r\n    motelData: Motel\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n\r\n        '& .details': {\r\n            '& > .name': {\r\n                fontSize: '1.2em',\r\n                textTransform: 'uppercase',\r\n                fontWeight: 600,\r\n\r\n                [theme.breakpoints.down('xs')]: {\r\n                    fontSize: '1em'\r\n                },\r\n            },\r\n\r\n            '& .rows': {\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                marginBottom: theme.spacing(1.5),\r\n\r\n                [theme.breakpoints.down('xs')]: {\r\n                    marginBottom: theme.spacing(1)\r\n                },\r\n\r\n                '& .icon': {\r\n                    marginRight: theme.spacing(1),\r\n                    display: 'grid',\r\n                    placeItems: 'center',\r\n                    background: theme.palette.primary.main,\r\n                    padding: theme.spacing(0.5),\r\n                    borderRadius: '50%',\r\n\r\n                    '& .MuiSvgIcon-root': {\r\n                        width: 12,\r\n                        height: 12,\r\n                        fill: '#fff',\r\n\r\n                        [theme.breakpoints.down('xs')]: {\r\n                            width: 10,\r\n                            height: 10\r\n                        },\r\n                    }\r\n                },\r\n\r\n                '& .text': {\r\n                    fontSize: '0.9em',\r\n\r\n                    [theme.breakpoints.down('xs')]: {\r\n                        fontSize: '0.8em'\r\n                    },\r\n                }\r\n            },\r\n        },\r\n\r\n        '& > .images': {\r\n            marginTop: theme.spacing(4),\r\n\r\n            [theme.breakpoints.down('xs')]: {\r\n                marginTop: theme.spacing(2)\r\n            },\r\n\r\n            '& img': {\r\n                width: '100%',\r\n                height: 60,\r\n                objectFit: 'cover',\r\n                borderRadius: 5,\r\n                cursor: 'pointer'\r\n            },\r\n\r\n            '& .rec-carousel': {\r\n                position: 'relative',\r\n            },\r\n\r\n            '& .rec-slider-container': {\r\n                margin: 0\r\n            },\r\n\r\n            '& .rec-arrow': {\r\n                position: 'absolute',\r\n                width: 20,\r\n                height: 25,\r\n                lineHeight: 'unset',\r\n                fontSize: 15,\r\n                background: 'rgba(0, 0, 0, 0.4)',\r\n                minWidth: 'unset',\r\n                borderRadius: 5,\r\n                border: \"none\",\r\n                outline: 'none',\r\n                boxShadow: 'none',\r\n                color: '#fff',\r\n\r\n                '&:disabled': {\r\n                    cursor: 'pointer'\r\n                },\r\n\r\n                '&:hover:enabled': {\r\n                    background: 'rgba(0, 0, 0, 0.4)',\r\n                },\r\n\r\n                '&.rec-arrow-right': {\r\n                    right: 0\r\n                },\r\n\r\n                '&.rec-arrow-left': {\r\n                    left: 0,\r\n                    zIndex: 5\r\n                }\r\n            },\r\n        }\r\n    },\r\n}))\r\n\r\nexport const MotelPreview = ({ motelData }: Props) => {\r\n    const classes = useStyles()\r\n    const [showModalPreview, setShowModalReview] = useState(false)\r\n    const [currentPreviewImg, setCurrentPreviewImg] = useState(0)\r\n\r\n    const images = [...(motelData.images as string[]), (motelData.thumbnail as string)]\r\n\r\n    const handlePrevPreview = () => {\r\n        setCurrentPreviewImg(prev => {\r\n            if (prev <= 0)\r\n                return images.length - 1\r\n            return prev - 1\r\n        })\r\n    }\r\n\r\n    const handleNextPreview = () => {\r\n        setCurrentPreviewImg(prev => {\r\n            if (prev >= images.length - 1)\r\n                return 0\r\n            return prev + 1\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.root}>\r\n                <Box className='details'>\r\n                    <Typography\r\n                        className='name'\r\n                        variant='h5'\r\n                    >\r\n                        {motelData.name}\r\n                    </Typography>\r\n\r\n                    <Divider style={{ marginTop: 8, marginBottom: 16 }} />\r\n\r\n                    <Box className='rows'>\r\n                        <span className='icon'>\r\n                            <LocationOn />\r\n                        </span>\r\n\r\n                        <Typography className='text'>\r\n                            {motelData.address}\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Box className='rows'>\r\n                        <span className='icon'>\r\n                            <LocalOffer />\r\n                        </span>\r\n\r\n                        <Typography className='text'>\r\n                            {`${getPriceMotel(motelData.room)}/tháng`}\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Box className='rows'>\r\n                        <span className='icon'>\r\n                            <Star />\r\n                        </span>\r\n\r\n                        <Typography className='text'>\r\n                            {`${motelData.mark ? motelData.mark.toFixed(2) : '--'}/5`}\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n\r\n                <Box className='images'>\r\n                    <Carousel\r\n                        itemsToShow={3}\r\n                        isRTL={false}\r\n                        pagination={false}\r\n                        itemPosition='START'\r\n                        enableSwipe={false}\r\n                        enableMouseSwipe={false}\r\n                        itemPadding={[0, 4, 0, 4]}\r\n                        showEmptySlots={true}\r\n                    >\r\n                        {images.map((image, index) => {\r\n                            return (\r\n                                <img\r\n                                    key={index.toString()}\r\n                                    src={image}\r\n                                    alt=\"Tìm nhà trọ sinh viên\"\r\n                                    onClick={() => {\r\n                                        setShowModalReview(true)\r\n                                    }}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </Carousel>\r\n                </Box>\r\n\r\n                <Box mt={3} mb={1}>\r\n                    <Button\r\n                        variant='outlined'\r\n                        color='primary'\r\n                        fullWidth\r\n                        style={{ textTransform: 'initial' }}\r\n                    >\r\n                        <Link to={`/motels/${motelData._id}`}>\r\n                            Xem chi tiết\r\n                        </Link>\r\n                    </Button>\r\n                </Box>\r\n            </Paper>\r\n\r\n            <Modal\r\n                open={showModalPreview}\r\n                onCancel={() => setShowModalReview(false)}\r\n            >\r\n                <PreviewImages\r\n                    images={images}\r\n                    currentIndex={currentPreviewImg}\r\n                    setCurrentIndex={setCurrentPreviewImg}\r\n                    handleNextPreview={handleNextPreview}\r\n                    handlePrevPreview={handlePrevPreview}\r\n                    motelName={motelData.name}\r\n                />\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","import { Card, CardActionArea, CardContent, CardMedia, makeStyles, Theme, Typography } from '@material-ui/core'\r\nimport { DateRange, LocationOn } from '@material-ui/icons'\r\nimport { Motel } from 'models'\r\nimport { Link } from 'react-router-dom'\r\nimport { calculateCreatedTimeDMY } from 'utils/convert-date/calculateCreatedTime'\r\n\r\ninterface Props {\r\n    motelData: Motel\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        boxShadow: theme.shadows[3],\r\n\r\n        '& .thumbnail': {\r\n            width: '100%',\r\n            height: 120,\r\n            objectFit: 'cover',\r\n\r\n            [theme.breakpoints.down('xs')]: {\r\n                height: 130\r\n            }\r\n        },\r\n\r\n        '& .content': {\r\n            padding: theme.spacing(1),\r\n\r\n            '& .name': {\r\n                fontSize: '0.95em',\r\n                marginBottom: 4,\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 500\r\n            },\r\n\r\n            '& .list-info': {\r\n                marginTop: 8,\r\n\r\n                '& .rows': {\r\n                    marginBottom: 12,\r\n\r\n                    '& .info': {\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        fontSize: '0.8em',\r\n\r\n                        '& > svg': {\r\n                            width: '0.6em',\r\n                            height: '0.6em',\r\n                            marginRight: 8,\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n        },\r\n    }\r\n}))\r\n\r\nexport const MotelRecommended = ({ motelData }: Props) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <Link to={`/motels/${motelData._id}`}>\r\n                    <CardMedia\r\n                        className='thumbnail'\r\n                        src={motelData.thumbnail as string}\r\n                        alt='motel thumbnail'\r\n                        component='img'\r\n                    />\r\n\r\n                    <CardContent className='content'>\r\n                        <Typography\r\n                            className='name'\r\n                            variant='h5'\r\n                        >\r\n                            {motelData.name}\r\n                        </Typography>\r\n\r\n                        <ul className=\"list-info\">\r\n                            <li className=\"rows\">\r\n                                <Typography className='info'>\r\n                                    <LocationOn />\r\n\r\n                                    {motelData.address}\r\n                                </Typography>\r\n                            </li>\r\n\r\n                            <li className=\"rows\">\r\n                                <Typography className='info'>\r\n                                    <DateRange />\r\n\r\n                                    {calculateCreatedTimeDMY(motelData.createdAt!)}\r\n                                </Typography>\r\n                            </li>\r\n                        </ul>\r\n                    </CardContent>\r\n                </Link>\r\n            </CardActionArea>\r\n        </Card >\r\n    )\r\n}\r\n","import { makeStyles, Theme } from \"@material-ui/core\"\r\nimport { Motel } from \"models\"\r\nimport { MotelRecommended } from \"./MotelRecommended\"\r\n\r\ninterface Props {\r\n    listMotel: Motel[]\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(auto-fit, minmax(170px, 1fr))',\r\n        gap: 15,\r\n\r\n        [theme.breakpoints.down('xs')]: {\r\n            gap: 8\r\n        }\r\n    },\r\n}))\r\n\r\nexport const ListRecommended = ({ listMotel }: Props) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <ul className={classes.root}>\r\n            {listMotel.map(motel => (\r\n                <MotelRecommended key={motel._id} motelData={motel} />\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n","import { Box, makeStyles, Typography } from \"@material-ui/core\"\r\nimport { ReactElement } from \"react\"\r\n\r\ninterface Props {\r\n    children: ReactElement\r\n    title: string\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        '& > .title': {\r\n            fontSize: '1.2em',\r\n            fontWeight: 500,\r\n            marginBottom: 16\r\n        },\r\n    }\r\n})\r\n\r\nexport const RecommendedLayout = ({ children, title }: Props) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Typography\r\n                className='title'\r\n                variant='h3'\r\n            >\r\n                {title}\r\n            </Typography>\r\n\r\n            <Box>\r\n                {children}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n","import { ListRecommended } from 'features/motels/components/Recommended/ListRecommended'\r\nimport { Motel } from 'models'\r\nimport { RecommendedLayout } from '../Layout/RecommendedLayout'\r\n\r\ninterface Props {\r\n    listMotel: Motel[]\r\n}\r\n\r\nexport const MotelRecommendPost = ({ listMotel }: Props) => {\r\n    return (\r\n        <RecommendedLayout title='Nhà trọ gợi ý'>\r\n            <ListRecommended listMotel={listMotel} />\r\n        </RecommendedLayout>\r\n    )\r\n}\r\n","import { Theme } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { Link } from 'react-router-dom'\r\nimport { RecommendedLayout } from '../Layout/RecommendedLayout'\r\n\r\ninterface Props {\r\n    listPost: {\r\n        _id: string\r\n        title: string\r\n    }[]\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        listStyle: 'disc',\r\n        marginLeft: theme.spacing(3),\r\n\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginLeft: theme.spacing(2)\r\n        },\r\n\r\n        '& .item': {\r\n            marginBottom: 4,\r\n\r\n            '& a': {\r\n                display: 'block',\r\n                fontSize: '1.05em',\r\n                overflow: 'hidden',\r\n                whiteSpace: 'nowrap',\r\n                textOverflow: 'ellipsis',\r\n                transition: '300ms',\r\n\r\n                [theme.breakpoints.down('xs')]: {\r\n                    fontSize: '0.95em'\r\n                },\r\n\r\n                '&:hover': {\r\n                    color: theme.palette.primary.main\r\n                }\r\n            }\r\n        }\r\n    }\r\n}))\r\n\r\nexport const RelatedPost = ({ listPost }: Props) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <RecommendedLayout title='Bài viết liên quan'>\r\n            <ul className={classes.root}>\r\n                {listPost.map(post => (\r\n                    <li\r\n                        key={post._id}\r\n                        className=\"item\"\r\n                    >\r\n                        <Link to={`/posts/${post._id}`}>\r\n                            {post.title}\r\n                        </Link>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </RecommendedLayout>\r\n    )\r\n}\r\n","import { Box, Grid, Theme } from '@material-ui/core'\r\nimport { Pagination } from '@material-ui/lab'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { useAppDispatch, useAppSelector } from 'app/hooks'\r\nimport { MainLayout } from 'components/Layouts/MainLayout'\r\nimport { commentAction, selectFilterComment, selectPaginationComment } from 'features/comment/commentSlice'\r\nimport { CommentSection } from 'features/comment/components'\r\nimport { MotelPreview } from \"features/motels/components/PostView/MotelPreview\"\r\nimport { PostViewSection } from 'features/posts/components'\r\nimport { MotelRecommendPost } from 'features/posts/components/PostView/Recommended/MotelRecommendPost'\r\nimport { RelatedPost } from 'features/posts/components/PostView/Recommended/RelatedPost'\r\nimport { postAction, selectDataPost, selectFilterPost } from 'features/posts/postSlice'\r\nimport { Pagination as PaginationModel } from 'models'\r\nimport { useEffect } from 'react'\r\nimport { useParams } from 'react-router'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        '& .motel-side': {\r\n            [theme.breakpoints.down('md')]: {\r\n                display: 'none'\r\n            }\r\n        },\r\n\r\n        '& .motel-mobile': {\r\n            display: 'none',\r\n            width: '100%',\r\n            maxWidth: 450,\r\n\r\n            [theme.breakpoints.down('md')]: {\r\n                display: 'block',\r\n            }\r\n        },\r\n    }\r\n}))\r\n\r\nconst PostViewPage = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useAppDispatch()\r\n    const filterComment = useAppSelector(selectFilterComment)\r\n    const filterPost = useAppSelector(selectFilterPost)\r\n\r\n    const paginationComment: PaginationModel = useAppSelector(selectPaginationComment)\r\n\r\n    const postData = useAppSelector(selectDataPost)\r\n\r\n    const { id } = useParams<{ id: string }>()\r\n\r\n    useEffect(() => {\r\n        dispatch(postAction.getById(id))\r\n\r\n    }, [dispatch, filterPost, id])\r\n\r\n    useEffect(() => {\r\n        dispatch(commentAction.get({\r\n            ...filterComment,\r\n            _post: id\r\n        }))\r\n    }, [dispatch, filterComment, id])\r\n\r\n    const handlePaginationComment = (e: object, page: number) => {\r\n        dispatch(commentAction.setFilter({\r\n            ...paginationComment,\r\n            _page: page,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <MainLayout>\r\n            <Box\r\n                className='container'\r\n                mt={12}\r\n            >\r\n                <Box className={classes.root}>\r\n                    <Grid container>\r\n                        <Grid item xs={undefined} sm={undefined} md={undefined} lg={undefined} xl={1}></Grid>\r\n                        <Grid item xs={12} sm={12} md={12} lg={8} xl={7}>\r\n                            {postData && <PostViewSection postData={postData} />}\r\n\r\n                            <Box className='motel-mobile'>\r\n                                {postData && postData.motel && <MotelPreview motelData={postData.motel} />}\r\n                            </Box>\r\n\r\n                            {paginationComment._page <= 1 && <>\r\n                                {postData && <Box my={4}>\r\n                                    <RelatedPost listPost={postData.posts} />\r\n                                </Box>}\r\n\r\n                                {postData && <Box my={4}>\r\n                                    <MotelRecommendPost listMotel={postData.motels} />\r\n                                </Box>}\r\n                            </>}\r\n\r\n                            <Box\r\n                                display='flex'\r\n                                justifyContent='flex-end'\r\n                                mt={8}\r\n                            >\r\n                                <Pagination\r\n                                    count={Math.ceil(paginationComment._totalRows / paginationComment._limit)}\r\n                                    onChange={handlePaginationComment}\r\n                                    size=\"small\"\r\n                                    shape='rounded'\r\n                                    hideNextButton\r\n                                    hidePrevButton\r\n                                    color='primary'\r\n                                />\r\n                            </Box>\r\n\r\n                            <CommentSection />\r\n                        </Grid>\r\n                        <Grid className='motel-side' item xs={undefined} sm={undefined} md={undefined} lg={4} xl={3}>\r\n                            {postData && postData.motel && <MotelPreview motelData={postData.motel} />}\r\n                        </Grid>\r\n                        <Grid item xs={undefined} sm={undefined} md={undefined} lg={undefined} xl={1}></Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Box>\r\n        </MainLayout>\r\n    )\r\n}\r\n\r\nexport default PostViewPage\r\n"],"sourceRoot":""}