{"version":3,"sources":["assets/images/small-screen.jpg","features/posts/components/CreatePost/Review/CreateReview.tsx","pages/CreateReviewPage.tsx"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","width","maxWidth","margin","breakpoints","down","padding","resize","fontSize","border","outline","borderLeft","fontWeight","marginBlock","marginBottom","paddingLeft","minHeight","lineHeight","listStyleType","listStylePosition","borderColor","boxShadow","msgInfor","height","display","justifyContent","alignItems","flexDirection","textAlign","initialDataPost","title","tags","input","suggest","motel","undefined","content","CreateReview","classes","history","useHistory","areaRef","useRef","loadingCreateReview","useAppSelector","selectLoadingPost","useState","isHidden","setIsHidden","listMotel","selectDataMotel","loading","selectLoadingMotel","reviewData","setReviewData","useEffect","detectSmallScreen","window","innerWidth","addEventListener","removeEventListener","handleCreateReview","data","a","postApi","add","toast","success","push","error","response","message","Box","className","src","SmallScreen","alt","Typography","Button","variant","color","placeholder","ref","onInput","current","style","scrollHeight","value","onChange","e","prev","target","AutocompleteMotel","TagInput","placeHolder","setInput","setSuggest","typePost","fullWidth","size","onClick","errMessage","trim","checkTags","split","submitData","checkCommaLastString","mapTrimStringArray","join","subjectId","_id","CircularProgress","CreateReviewPage","dispatch","useAppDispatch","motelActions","getMotel"],"mappings":"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","file":"static/js/9.9ef3f77b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/small-screen.23d4e1b4.jpg\";","import { Box, Button, CircularProgress, makeStyles, Theme, Typography } from '@material-ui/core'\r\nimport { useAppSelector } from 'app/hooks'\r\nimport { BalloonCKEditor } from 'components/Common'\r\nimport { selectLoadingPost } from 'features/posts/postSlice'\r\nimport { selectDataMotel, selectLoadingMotel } from 'features/motels/motelSlice'\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport { checkCommaLastString, mapTrimStringArray } from 'utils'\r\nimport { AutocompleteMotel } from '../FindRommate/AutocompleteMotel'\r\nimport { DataPost, DataPostFinal } from '../models/create-post'\r\nimport { TagInput } from '../TagInput'\r\nimport { checkTags } from 'utils/check-valid/checkTag'\r\nimport SmallScreen from 'assets/images/small-screen.jpg'\r\nimport postApi from 'api/post'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(12),\r\n        width: '100%',\r\n        maxWidth: 800,\r\n        margin: 'auto',\r\n\r\n        [theme.breakpoints.down('md')]: {\r\n            padding: theme.spacing(0, 6),\r\n        },\r\n\r\n        '& .title-input': {\r\n            width: '100%',\r\n            resize: 'none',\r\n            padding: theme.spacing(1),\r\n            fontSize: '1.6rem',\r\n            border: 'none',\r\n            outline: 'none',\r\n            borderLeft: '1.5px solid transparent',\r\n            fontWeight: 500,\r\n\r\n            '&:focus': {\r\n                borderLeft: '1.5px solid',\r\n            }\r\n        },\r\n\r\n        '& .tags-wrapper': {\r\n            marginBlock: theme.spacing(1.5),\r\n\r\n            '& > .label': {\r\n                fontSize: '1rem',\r\n                marginBottom: theme.spacing(0.7),\r\n            }\r\n        },\r\n\r\n        '& .ck-content': {\r\n            paddingLeft: 8,\r\n            minHeight: 400,\r\n            fontSize: 17,\r\n            lineHeight: '25px',\r\n\r\n            '& > ul, & > ol': {\r\n                listStyleType: 'inherit',\r\n                listStylePosition: 'inside',\r\n                fontSize: 17,\r\n                marginTop: 6,\r\n                paddingLeft: 12\r\n            },\r\n\r\n            '& > ol': {\r\n                listStyleType: 'decimal',\r\n            }\r\n        },\r\n        '& .ck.ck-editor__editable:not(.ck-editor__nested-editable).ck-focused': {\r\n            borderColor: 'transparent',\r\n            boxShadow: 'none'\r\n        }\r\n    },\r\n    msgInfor: {\r\n        width: '100%',\r\n        height: '100vh',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        padding: theme.spacing(1),\r\n\r\n        '& > img': {\r\n            width: '65%'\r\n        },\r\n\r\n        '& .text': {\r\n            textAlign: 'center',\r\n            marginBottom: theme.spacing(2),\r\n            fontSize: '0.9rem'\r\n        }\r\n    }\r\n}))\r\n\r\nconst initialDataPost: DataPost = {\r\n    title: '',\r\n    tags: {\r\n        input: '',\r\n        suggest: [],\r\n    },\r\n    motel: undefined,\r\n    content: ''\r\n}\r\n\r\nexport const CreateReview = () => {\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n\r\n    const areaRef = useRef<HTMLAreaElement>(null)\r\n    const loadingCreateReview = useAppSelector(selectLoadingPost)\r\n    const [isHidden, setIsHidden] = useState(false)\r\n\r\n    const listMotel = useAppSelector(selectDataMotel)\r\n    const loading = useAppSelector(selectLoadingMotel)\r\n    const [reviewData, setReviewData] = useState<DataPost>(initialDataPost)\r\n\r\n    useEffect(() => {\r\n        const detectSmallScreen = () => {\r\n            if (window.innerWidth < 600) {\r\n                setIsHidden(true)\r\n                return\r\n            }\r\n\r\n            setIsHidden(false)\r\n        }\r\n\r\n        detectSmallScreen()\r\n\r\n        window.addEventListener('resize', detectSmallScreen)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', detectSmallScreen)\r\n        }\r\n    }, [])\r\n\r\n    const handleGrowArea = () => {\r\n        if (areaRef.current) {\r\n            areaRef.current.style.height = \"96px\";\r\n            areaRef.current.style.height = (areaRef.current.scrollHeight) + \"px\";\r\n        }\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        const { title, tags, motel, content } = reviewData\r\n        let errMessage = 'Hãy bổ sung đầy đủ thông tin: '\r\n\r\n        if (title.trim() === '')\r\n            errMessage += 'Tiêu đề bài viết,'\r\n        if (content === '')\r\n            errMessage += 'Nội dung bài viết,'\r\n        if (motel === undefined)\r\n            errMessage += 'Chọn một nhà trọ bạn muốn đánh giá'\r\n\r\n        if (errMessage !== 'Hãy bổ sung đầy đủ thông tin: ') {\r\n            toast.error(errMessage)\r\n            return\r\n        }\r\n\r\n        if (!checkTags(tags.input.split(','))) {\r\n            toast.error('Tag không hợp lệ!. Tag phải là ký tự không dấu và không được chứa khoảng cách.')\r\n            return\r\n        }\r\n\r\n        const submitData: any = {\r\n            ...reviewData,\r\n            title: title.trim(),\r\n            tags: `${checkCommaLastString(tags.input)}${mapTrimStringArray(tags.suggest).join(',')}`,\r\n            subjectId: '6173ba553c954151dcc8fdf9',\r\n            motel: motel ? motel._id : ''\r\n        }\r\n\r\n        handleCreateReview(submitData)\r\n    }\r\n\r\n    const handleCreateReview = async (data: Omit<DataPostFinal, 'additional'>) => {\r\n        try {\r\n            await postApi.add(data as any)\r\n\r\n            toast.success('Đã đăng bài viết thành công. Hãy chờ \"Quản trị web\" duyệt!!!')\r\n            setReviewData(initialDataPost)\r\n            history.push('/')\r\n        } catch (error: any) {\r\n            toast.error(error.response?.data.message)\r\n        }\r\n    }\r\n\r\n    if (isHidden)\r\n        return (\r\n            <Box className={classes.msgInfor}>\r\n                <img src={SmallScreen} alt='' />\r\n\r\n                <Typography className='text'>\r\n                    {'Bạn đang sử dụng màn hình có kích thước nhỏ(< 600px) nên sẽ không thể thực hiện chứ năng soạn thảo. Hãy chuyển sang màn hình có kích thước lớn hơn!'}\r\n                </Typography>\r\n\r\n                <Button variant='contained' color='primary'>\r\n                    Quay về\r\n                </Button>\r\n            </Box>\r\n        )\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <textarea\r\n                className='title-input'\r\n                placeholder='Nhập tiêu đề vào đây...'\r\n                ref={areaRef as any}\r\n                onInput={handleGrowArea}\r\n                value={reviewData.title}\r\n                onChange={(e) => setReviewData(prev => ({ ...prev, title: e.target.value }))}\r\n            />\r\n\r\n            <BalloonCKEditor\r\n                value={reviewData.content}\r\n                onChange={(data: string) => setReviewData(prev => ({ ...prev, content: data }))}\r\n            />\r\n\r\n            <Box className='tags-wrapper'>\r\n                <label className='label'>\r\n                    Chọn một nhà trọ bạn muốn đánh giá:\r\n                </label>\r\n\r\n                <AutocompleteMotel\r\n                    listMotel={listMotel}\r\n                    value={reviewData.motel}\r\n                    onChange={(e, value) => setReviewData(prev => ({ ...prev, motel: value || undefined }))}\r\n                    loading={loading}\r\n                />\r\n            </Box>\r\n\r\n            <Box className='tags-wrapper'>\r\n                <label className='label'>\r\n                    Tag cho bài để người khác biết bài viết về gì (ngăn cách bằng dấu phẩy):\r\n                </label>\r\n\r\n                <TagInput\r\n                    placeHolder='Nhập tag(VD: danhgianhatro,anninh)'\r\n                    input={reviewData.tags.input}\r\n                    setInput={(e) => setReviewData((prev: DataPost) => ({ ...prev, tags: { ...prev.tags, input: e.target.value } }))}\r\n                    suggest={reviewData.tags.suggest}\r\n                    setSuggest={(e) => setReviewData((prev: DataPost) => ({ ...prev, tags: { ...prev.tags, suggest: e.target.value } }))}\r\n                    typePost='review'\r\n                />\r\n            </Box>\r\n\r\n            <Button\r\n                color='primary'\r\n                variant='contained'\r\n                fullWidth\r\n                size='large'\r\n                onClick={handleSubmit}\r\n            >\r\n                {loadingCreateReview && <><CircularProgress color='secondary' size={15} /> &nbsp;</>}\r\n                Đăng\r\n            </Button>\r\n        </Box>\r\n    )\r\n}\r\n","import { useAppDispatch } from 'app/hooks'\r\nimport { MainLayout } from 'components/Layouts'\r\nimport { motelActions } from 'features/motels/motelSlice'\r\nimport { CreateReview } from 'features/posts/components/CreatePost/Review/CreateReview'\r\nimport { useEffect } from 'react'\r\n\r\nconst CreateReviewPage = () => {\r\n    const dispatch = useAppDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(motelActions.getMotel({}))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <MainLayout>\r\n            <CreateReview />\r\n        </MainLayout>\r\n    )\r\n}\r\n\r\nexport default CreateReviewPage\r\n"],"sourceRoot":""}