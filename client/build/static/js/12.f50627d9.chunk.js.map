{"version":3,"sources":["features/notification/components/Notification/Controls.tsx","pages/NotificationPage.tsx"],"names":["useStyles","makeStyles","theme","root","position","top","padding","spacing","breakpoints","down","margin","marginTop","display","flexDirection","Controls","classes","dispatch","useAppDispatch","notifyFilter","useAppSelector","selectFilterNotify","notifyData","selectDataNotify","notifyPagination","selectPaginationNotify","useState","read","unread","status","setStatus","useEffect","notifyActions","setFilter","_page","_read","handleChecked","e","prev","target","name","checked","Paper","className","Box","Button","variant","color","size","style","textTransform","onClick","readAll","FormControlLabel","control","Checkbox","onChange","label","justifyContent","Pagination","count","Math","ceil","_totalRows","_limit","page","shape","paddingTop","NotificationPage","get","Grid","container","item","sm","undefined","md","lg","xs"],"mappings":"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","file":"static/js/12.f50627d9.chunk.js","sourcesContent":["import { Box, Button, Checkbox, FormControlLabel, Paper, Theme } from \"@material-ui/core\"\r\nimport { Pagination } from \"@material-ui/lab\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport { useAppDispatch, useAppSelector } from \"app/hooks\"\r\nimport { notifyActions, selectFilterNotify, selectPaginationNotify, selectDataNotify } from \"features/notification/notifySlice\"\r\nimport { ChangeEvent, useEffect, useState } from \"react\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        position: 'sticky',\r\n        top: 65,\r\n        padding: theme.spacing(2),\r\n\r\n        [theme.breakpoints.down('sm')]: {\r\n            padding: theme.spacing(1.5),\r\n        },\r\n\r\n        '& .rows': {\r\n            margin: theme.spacing(1.5, 0),\r\n\r\n            [theme.breakpoints.down('sm')]: {\r\n                margin: theme.spacing(0.5, 0),\r\n            },\r\n\r\n            '&.mt': {\r\n                marginTop: theme.spacing(6),\r\n\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginTop: theme.spacing(4)\r\n                },\r\n\r\n                [theme.breakpoints.down('xs')]: {\r\n                    marginTop: theme.spacing(1),\r\n                }\r\n            }\r\n        },\r\n\r\n        '& .cb-group': {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n\r\n            [theme.breakpoints.down('xs')]: {\r\n                flexDirection: 'row',\r\n            }\r\n        }\r\n    }\r\n}))\r\n\r\nconst Controls = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useAppDispatch()\r\n    const notifyFilter = useAppSelector(selectFilterNotify)\r\n\r\n    const notifyData = useAppSelector(selectDataNotify)\r\n    const notifyPagination = useAppSelector(selectPaginationNotify)\r\n    const [status, setStatus] = useState({\r\n        read: true,\r\n        unread: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(notifyActions.setFilter({\r\n            ...notifyFilter,\r\n            _page: 1,\r\n            _read: [status.read, status.unread]\r\n        }))\r\n    }, [status, dispatch])\r\n\r\n    const handleChecked = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(prev => ({ ...prev, [e.target.name]: e.target.checked }))\r\n    }\r\n\r\n    const handleReadAll = () => {\r\n        dispatch(notifyActions.readAll())\r\n    }\r\n\r\n    const handlePagination = (e: any, page: number) => {\r\n        dispatch(notifyActions.setFilter({\r\n            ...notifyFilter,\r\n            _page: page,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Box className='rows'>\r\n                <Button\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    size='small'\r\n                    style={{\r\n                        textTransform: 'initial'\r\n                    }}\r\n                    onClick={handleReadAll}\r\n                >\r\n                    Đánh dấu xem tất cả\r\n                </Button>\r\n            </Box>\r\n\r\n            <Box className='cb-group'>\r\n                <FormControlLabel\r\n                    control={<Checkbox color='primary' checked={status.read} onChange={handleChecked} name=\"read\" />}\r\n                    label={`Đã xem: ${notifyData ? notifyData.read : 0}`}\r\n                />\r\n                <FormControlLabel\r\n                    control={<Checkbox color='primary' checked={status.unread} onChange={handleChecked} name=\"unread\" />}\r\n                    label={`Chưa xem: ${notifyData ? notifyData.unread : 0}`}\r\n                />\r\n            </Box>\r\n\r\n            <Box\r\n                className=\"rows mt\"\r\n                display='flex'\r\n                justifyContent='center'\r\n            >\r\n                <Pagination\r\n                    count={Math.ceil(notifyPagination._totalRows / notifyPagination._limit)}\r\n                    page={notifyPagination._page}\r\n                    onChange={handlePagination}\r\n                    variant=\"outlined\"\r\n                    shape=\"rounded\"\r\n                    size='small'\r\n                    color='primary'\r\n                />\r\n            </Box>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Controls\r\n","import { Box, Grid, Theme } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport { useAppDispatch, useAppSelector } from \"app/hooks\"\r\nimport { MainLayout } from \"components/Layouts\"\r\nimport { ListNotification } from \"features/notification/components\"\r\nimport Controls from \"features/notification/components/Notification/Controls\"\r\nimport { notifyActions, selectFilterNotify } from 'features/notification/notifySlice'\r\nimport { useEffect } from \"react\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        paddingTop: theme.spacing(12),\r\n\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingTop: theme.spacing(10),\r\n        },\r\n    }\r\n}))\r\n\r\nconst NotificationPage = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useAppDispatch()\r\n    const notifyFilter = useAppSelector(selectFilterNotify)\r\n\r\n    useEffect(() => {\r\n        dispatch(notifyActions.get(notifyFilter))\r\n    }, [dispatch, notifyFilter])\r\n\r\n    return (\r\n        <MainLayout>\r\n            <Box className={`${classes.root} container`}>\r\n                <Grid container>\r\n                    <Grid item sm={undefined} md={undefined} lg={1} />\r\n                    <Grid item xs={12} sm={4} md={4} lg={3}>\r\n                        <Controls />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={8} md={8} lg={6}>\r\n                        <ListNotification />\r\n                    </Grid>\r\n                    <Grid item sm={undefined} md={undefined} lg={2} />\r\n                </Grid>\r\n            </Box>\r\n        </MainLayout>\r\n    )\r\n}\r\n\r\nexport default NotificationPage\r\n"],"sourceRoot":""}