{"version":3,"sources":["components/FormFields/SelectField.tsx","assets/images/profile-background.jpg","features/profile/components/ModalBodyEdit.tsx","features/profile/components/ProfieDetail.tsx","features/profile/components/StepActivity.tsx","features/profile/components/Activities.tsx","pages/PersonalPage.tsx"],"names":["SelectField","label","name","control","options","disabled","defaultValue","size","margin","props","useController","field","value","onChange","onBlur","ref","fieldState","invalid","error","variant","fullWidth","labelId","inputRef","inputProps","map","option","index","style","color","id","message","useStyles","makeStyles","theme","root","width","display","flexDirection","alignItems","height","borderRadius","boxShadow","shadows","overflow","border","marginBottom","spacing","position","opacity","objectFit","inset","placeItems","background","transition","fill","cursor","visibility","schema","yup","shape","trim","strict","min","max","email","province","required","district","school","ModalBodyEdit","loading","updateUserData","handleSubmitEdit","classes","optionsProvince","useAppSelector","selectOptionsAutoCompProVince","useState","showAvatarErr","setShowAvatarErr","optionsDistrict","setOptionsDistrict","optionsSchool","setOptionsSchool","selectedProvince","setSelectedProvince","selectedDistrict","setSelectedDistrict","selectedAvatar","setSelectedAvatar","useForm","defaultValues","resolver","yupResolver","handleSubmit","getValues","setValue","isDirty","formState","useEffect","length","find","e","districtApi","getByCodeProvince","then","res","mapOptions","autoComp","data","x","schoolApi","getByProDis","handleProvinceSelected","a","response","handleDistrictSelected","Box","className","component","onSubmit","src","URL","createObjectURL","alt","CameraAlt","type","accept","VALIDATOR_IMAGE","files","target","checkSize","checkSizeImg","Alert","severity","sizeField","Grid","container","item","sm","title","mt","mb","CircularProgress","Background","backgroundSize","breakpoints","down","maxWidth","padding","textAlign","transform","marginLeft","paddingTop","flex","fontSize","fontWeight","paddingLeft","flexWrap","marginTop","gap","justifyContent","palette","text","secondary","marginRight","lineHeight","top","right","outline","content","left","minWidth","ProfieDetail","user","init","useParams","history","useHistory","dispatch","useAppDispatch","currentUser","selectCurrentUser","selectUpdateUserData","showDropdown","setShowDropdown","showModalEdit","setShowModalEdit","setLoading","isLike","setIsLike","checkLiked","likes","_id","listInfo","icon","SupervisedUserCircle","rank","CardGiftcard","credit","CloudUpload","posts","Loyalty","avatar","avatarUrl","updateData","formAvatar","FormData","append","axiosClient","post","headers","userApi","updateUser","rememberMe","localStorage","getItem","authActions","login","isAutoLogin","toast","success","handleChat","groupPrivate","group","getChatGroupByUserId","groupId","loadingActions","openLoading","chatApis","addChatGroup","members","closeLoading","push","Avatar","Typography","isAdmin","VerifiedUser","Button","startIcon","Favorite","textTransform","onClick","unlikeUser","catch","likeUser","QuestionAnswer","DetectClickOutsize","cb","setTimeout","List","ListItem","button","ListItemText","visible","onCancel","footer","StepActivity","activity","to","url","calculateCreatedTimeHDMY","createdAt","Activities","activities","steps","setSteps","expended","setExpended","years","Object","keys","result","forEach","year","month","reduce","obj","Stepper","orientation","el","Step","expanded","active","prev","StepLabel","split","StepContent","PersonalPage","listProvince","selectDataProvince","dataUser","setDataUser","mapActivities","useMemo","done","date","Date","getFullYear","getMonth","activitiesMonth","Array","useCallback","getUserById","err","console","log","provinceActions","getAll"],"mappings":"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","file":"static/js/7.02f7826f.chunk.js","sourcesContent":["import { FormHelperText } from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { FieldOption } from 'models';\r\nimport { Control, useController } from 'react-hook-form';\r\n\r\ninterface Props {\r\n    label: string;\r\n    name: string;\r\n    control: Control<any>;\r\n    options: Array<FieldOption>;\r\n    disabled?: boolean;\r\n    defaultValue?: any;\r\n    size?: 'medium' | 'small'\r\n    margin?: 'dense' | 'none' | 'normal'\r\n    [key: string]: any\r\n}\r\n\r\nexport const SelectField = ({ label, name, control, options, disabled = false, defaultValue, size = 'medium', margin = 'normal', ...props }: Props) => {\r\n    const { field: { value, onChange, onBlur, ref }, fieldState: { invalid, error } } = useController({\r\n        name,\r\n        control\r\n    })\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" fullWidth disabled={disabled} size={size} margin={margin}>\r\n            <InputLabel>{label}</InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                value={value}\r\n                onChange={onChange}\r\n                onBlur={onBlur}\r\n                inputRef={ref}\r\n                label={label}\r\n                inputProps={props}\r\n                error={invalid}\r\n                defaultValue={defaultValue}\r\n                {...props}\r\n            >\r\n                {\r\n                    options.map((option, index) => (\r\n                        <MenuItem key={index} value={option.value}>{option.label}</MenuItem>\r\n                    ))\r\n                }\r\n            </Select>\r\n            <FormHelperText style={{ color: '#f44336' }} id=\"component-error-text\">{error?.message}</FormHelperText>\r\n        </FormControl>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/profile-background.3f3e2b44.jpg\";","import { yupResolver } from '@hookform/resolvers/yup'\r\nimport { Box, CircularProgress, Grid, makeStyles, Theme } from \"@material-ui/core\"\r\nimport { Alert } from '@material-ui/lab'\r\nimport { CameraAlt } from \"@material-ui/icons\"\r\nimport districtApi from \"api/district\"\r\nimport schoolApi from \"api/school\"\r\nimport { useAppSelector } from 'app/hooks'\r\nimport { ButtonSubmit } from \"components/Common\"\r\nimport { AutoCompleteField, InputField } from \"components/FormFields\"\r\nimport { SelectField } from \"components/FormFields/SelectField\"\r\nimport { selectOptionsAutoCompProVince } from 'features/province/provinceSlice'\r\nimport { District, ListResponse, School, UpdateData } from \"models\"\r\nimport { ChangeEvent, useEffect, useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { mapOptions } from 'utils'\r\nimport * as yup from 'yup'\r\nimport { checkSizeImg } from 'utils'\r\nimport { VALIDATOR_IMAGE } from 'constant/constant'\r\n\r\ninterface Props {\r\n    loading: boolean\r\n    updateUserData: UpdateData\r\n    handleSubmitEdit: (data: UpdateData, avatar: File | undefined) => void\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n\r\n        '& .avatar-input': {\r\n            width: 100,\r\n            height: 100,\r\n            borderRadius: 100,\r\n            boxShadow: theme.shadows[2],\r\n            overflow: 'hidden',\r\n            border: '3px solid #fff',\r\n            marginBottom: theme.spacing(3),\r\n            position: 'relative',\r\n\r\n            '&:hover': {\r\n                '& .overlay': {\r\n                    opacity: 1,\r\n                }\r\n            },\r\n\r\n            '& > img': {\r\n                width: '100%',\r\n                height: '100%',\r\n                objectFit: 'cover'\r\n            },\r\n\r\n            '& .overlay': {\r\n                position: 'absolute',\r\n                inset: 0,\r\n                display: 'grid',\r\n                placeItems: 'center',\r\n                background: 'rgba(0,0,0,0.45)',\r\n                opacity: 0,\r\n                transition: '300ms',\r\n\r\n                '& > .MuiSvgIcon-root': {\r\n                    fill: '#fff',\r\n                    width: '2rem',\r\n                    height: '2rem',\r\n                }\r\n            },\r\n\r\n            '& > .file-input': {\r\n                position: 'absolute',\r\n                inset: 0,\r\n                cursor: 'pointer',\r\n                opacity: 0,\r\n                visibility: 'visible'\r\n            }\r\n        }\r\n    }\r\n}))\r\n\r\nconst schema = yup.object().shape({\r\n    name: yup\r\n        .string()\r\n        .trim('Không được chứa khoảng trắng ở đầu và cuối')\r\n        .strict()\r\n        .min(1, \"Tối thiểu 1 ký tự\")\r\n        .max(30, \"Tối thiểu 30 ký tự\"),\r\n    email: yup\r\n        .string()\r\n        .email('Hãy kiểm tra lại email'),\r\n    province: yup\r\n        .string()\r\n        .required(),\r\n    district: yup\r\n        .string()\r\n        .required(),\r\n    school: yup\r\n        .string()\r\n        .required('Hãy chọn đủ Tỉnh, Quận/Huyện/TP và Trường')\r\n})\r\n\r\nexport const ModalBodyEdit = ({ loading, updateUserData, handleSubmitEdit }: Props) => {\r\n    const classes = useStyles()\r\n    const optionsProvince = useAppSelector(selectOptionsAutoCompProVince)\r\n    const [showAvatarErr, setShowAvatarErr] = useState(false)\r\n\r\n    const [optionsDistrict, setOptionsDistrict] = useState<any[]>([])\r\n    const [optionsSchool, setOptionsSchool] = useState<any[]>([])\r\n\r\n    const [selectedProvince, setSelectedProvince] = useState<any>(null)\r\n    const [selectedDistrict, setSelectedDistrict] = useState<any>(null)\r\n    const [selectedAvatar, setSelectedAvatar] = useState<File | undefined>()\r\n\r\n    const { handleSubmit, control, getValues, setValue, formState: { isDirty } } = useForm({\r\n        defaultValues: updateUserData,\r\n        resolver: yupResolver(schema)\r\n    })\r\n\r\n    useEffect(() => {\r\n        // get default value for province field\r\n        if (optionsProvince.length > 0) {\r\n            const option = optionsProvince.find((e: any) => e.value === updateUserData.province)\r\n            setSelectedProvince(option || null)\r\n        }\r\n    }, [updateUserData, optionsProvince])\r\n\r\n    useEffect(() => {\r\n        districtApi.getByCodeProvince(updateUserData.province)\r\n            .then(res => {\r\n                const options = mapOptions.autoComp(res.data)\r\n                setOptionsDistrict(options)\r\n                setSelectedDistrict(options.find((x: any) => x.value === updateUserData.district) || null)\r\n            })\r\n\r\n        schoolApi.getByProDis(updateUserData.province, updateUserData.district)\r\n            .then(res => {\r\n                const options = mapOptions.school(res.data)\r\n                setOptionsSchool(options)\r\n                setValue('school', options.find((x: any) => x.value === updateUserData.school)?.value || '')\r\n            })\r\n    }, [updateUserData, setValue])\r\n\r\n    const handleProvinceSelected = async (e: any, value: any) => {\r\n        if (value) {\r\n            setSelectedProvince(value)\r\n            setValue('province', value.value)\r\n\r\n            //reset district, school field when province filed is changed\r\n            setSelectedDistrict('')\r\n            setValue('school', '')\r\n\r\n            const response: ListResponse<District> = await districtApi.getByCodeProvince(value.value);\r\n\r\n            const options = mapOptions.autoComp(response.data)\r\n            setOptionsDistrict(options);\r\n        }\r\n    }\r\n\r\n    const handleDistrictSelected = async (e: any, value: any) => {\r\n        if (value) {\r\n            setSelectedDistrict(value)\r\n            setValue('district', value.value)\r\n\r\n            setValue('school', '')\r\n\r\n            const response: ListResponse<School> = await schoolApi.getByProDis(getValues('province'), value.value)\r\n            const options = mapOptions.school(response.data)\r\n\r\n            setOptionsSchool(options);\r\n        }\r\n    }\r\n\r\n    const handleSelectAvatar = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const files = e.target.files\r\n\r\n        if (!files) return\r\n\r\n        const checkSize = checkSizeImg(files)\r\n        setShowAvatarErr(!checkSize)\r\n\r\n        if (!checkSize) return\r\n\r\n        setSelectedAvatar(files[0])\r\n    }\r\n\r\n    const handleSubmitForm = (data: UpdateData) => {\r\n        if (isDirty || selectedAvatar)\r\n            handleSubmitEdit(data, selectedAvatar)\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            className={classes.root}\r\n            component='form'\r\n            onSubmit={handleSubmit(handleSubmitForm)}\r\n        >\r\n            <Box className='avatar-input'>\r\n                <img\r\n                    src={selectedAvatar ? URL.createObjectURL(selectedAvatar) : getValues('avatarUrl')!}\r\n                    alt=\"avatar\"\r\n                />\r\n\r\n                <Box className='overlay'>\r\n                    <CameraAlt />\r\n                </Box>\r\n\r\n                <input type=\"file\" className='file-input' accept={VALIDATOR_IMAGE.accept} onChange={handleSelectAvatar} />\r\n            </Box>\r\n\r\n            {showAvatarErr && <Alert severity='error'>\r\n                Kích thước ảnh phải nhỏ hơn 500KB!\r\n            </Alert>}\r\n\r\n            <InputField type=\"text\" control={control} name='name' label='Họ và tên*' required sizeField='small' />\r\n\r\n            <InputField type=\"email\" control={control} name='email' label='Email*' required sizeField='small' />\r\n\r\n            <Grid container spacing={2}>\r\n                <Grid item sm={6}>\r\n                    {optionsProvince.length > 0 &&\r\n                        <AutoCompleteField label=\"Tỉnh*\" title='label' value={selectedProvince} onChange={handleProvinceSelected} size='small' options={optionsProvince} />}\r\n                </Grid>\r\n\r\n                <Grid item sm={6}>\r\n                    {optionsDistrict.length > 0 && <AutoCompleteField label=\"Quận/Huyện/TP*\" title='label' value={selectedDistrict} onChange={handleDistrictSelected} size='small' options={optionsDistrict} disabled={false} />}\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {optionsSchool && <SelectField label='Trường*' name='school' control={control} options={optionsSchool} mt={19} mb={8} size='small' />}\r\n\r\n            <Box style={{ width: '100%' }} mt={2}>\r\n                <ButtonSubmit\r\n                    type='submit'\r\n                    color='primary'\r\n                    fullWidth\r\n                    variant='contained'\r\n                    disabled={loading}\r\n                >\r\n                    {loading && <><CircularProgress color='secondary' size={15} /> &nbsp;</>}\r\n                    Cập nhật\r\n                </ButtonSubmit>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n","import { Avatar, Box, Button, List, ListItem, ListItemText, makeStyles, Theme, Typography } from '@material-ui/core'\r\nimport { CardGiftcard, CloudUpload, Favorite, Loyalty, QuestionAnswer, SupervisedUserCircle, VerifiedUser } from '@material-ui/icons'\r\nimport { Modal } from 'antd'\r\nimport axiosClient from 'api/axiosClient'\r\nimport chatApis from 'api/chat'\r\nimport { userApi } from 'api/user'\r\nimport { useAppDispatch, useAppSelector } from 'app/hooks'\r\nimport Background from 'assets/images/profile-background.jpg'\r\nimport { DetectClickOutsize } from 'components/Common/DetectClickOutsize'\r\nimport { authActions, selectCurrentUser, selectUpdateUserData } from 'features/auth/authSlice'\r\nimport { loadingActions } from 'features/loading/showLoadingSlice'\r\nimport { ProfileUser, Response, UpdateData, User } from 'models'\r\nimport { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { toast } from 'react-toastify'\r\nimport { getChatGroupByUserId } from 'utils'\r\nimport { ModalBodyEdit } from './ModalBodyEdit'\r\n\r\ninterface Props {\r\n    user: ProfileUser\r\n    init: () => void\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        '& > .background-container': {\r\n            width: '100%',\r\n            height: '50vh',\r\n            background: `url(${Background}) no-repeat center top`,\r\n            backgroundSize: 'cover',\r\n\r\n            [theme.breakpoints.down('xs')]: {\r\n                height: '30vh',\r\n            },\r\n        },\r\n\r\n        '& .container-profile': {\r\n            display: 'flex',\r\n            width: '100%',\r\n            maxWidth: 1100,\r\n            padding: theme.spacing(0, 1),\r\n            margin: 'auto',\r\n\r\n            [theme.breakpoints.down('xs')]: {\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                textAlign: 'center',\r\n                transform: 'translateY(-25%)',\r\n            },\r\n\r\n            '& > .avatar': {\r\n                width: '17vw',\r\n                height: '17vw',\r\n                boxShadow: theme.shadows[10],\r\n                transform: 'translateY(-40%)',\r\n                border: '5px solid #fff',\r\n\r\n                [theme.breakpoints.down('xs')]: {\r\n                    width: '40vw',\r\n                    height: '40vw',\r\n                    transform: 'translateY(0)',\r\n                },\r\n            },\r\n\r\n            '& > .wrapper': {\r\n                marginLeft: theme.spacing(4),\r\n                paddingTop: theme.spacing(2),\r\n                display: 'flex',\r\n                width: '100%',\r\n\r\n                [theme.breakpoints.down('md')]: {\r\n                    marginLeft: theme.spacing(3),\r\n                },\r\n\r\n                '& .detail-info': {\r\n                    flex: 1,\r\n\r\n                    '& .name': {\r\n                        fontSize: '2.3rem',\r\n                        fontWeight: 600,\r\n\r\n                        [theme.breakpoints.down('md')]: {\r\n                            fontSize: '1.9rem',\r\n                        }\r\n                    },\r\n\r\n                    '& .school': {\r\n                        fontSize: '1.05rem',\r\n                        paddingLeft: theme.spacing(0.5),\r\n                        fontWeight: 500,\r\n\r\n                        [theme.breakpoints.down('md')]: {\r\n                            fontSize: '0.95rem',\r\n                        }\r\n                    },\r\n\r\n                    '& .list-info': {\r\n                        display: 'flex',\r\n                        flexWrap: 'wrap',\r\n                        marginTop: theme.spacing(1),\r\n                        paddingLeft: theme.spacing(0.5),\r\n                        gap: theme.spacing(2),\r\n\r\n                        [theme.breakpoints.down('xs')]: {\r\n                            justifyContent: 'center'\r\n                        },\r\n\r\n                        '& .item': {\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n\r\n                            '& .icon': {\r\n                                fill: theme.palette.text.secondary,\r\n                                marginRight: theme.spacing(0.5),\r\n                                width: 16,\r\n                                height: 16,\r\n\r\n                                [theme.breakpoints.down('md')]: {\r\n                                    width: 14,\r\n                                    height: 14,\r\n                                }\r\n                            },\r\n\r\n                            '& .text': {\r\n                                color: theme.palette.text.secondary,\r\n                                fontSize: '0.825rem',\r\n                                lineHeight: 1,\r\n\r\n                                [theme.breakpoints.down('md')]: {\r\n                                    fontSize: '0.775rem',\r\n                                }\r\n                            },\r\n                        }\r\n                    },\r\n                },\r\n\r\n                '& .btn-wrapper': {\r\n                    position: 'relative',\r\n                    width: 32,\r\n                    height: 32,\r\n\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        position: 'fixed',\r\n                        top: 65,\r\n                        right: 10\r\n                    },\r\n\r\n                    '& .btn-action': {\r\n                        display: 'grid',\r\n                        placeItems: 'center',\r\n                        width: 32,\r\n                        height: 32,\r\n                        background: 'transparent',\r\n                        border: '1px solid #aaa',\r\n                        outline: 'none',\r\n                        borderRadius: 100,\r\n                        cursor: 'pointer',\r\n                        transition: '300ms',\r\n\r\n                        [theme.breakpoints.down('sm')]: {\r\n                            background: '#4646466b'\r\n                        },\r\n\r\n                        '&:hover': {\r\n                            background: '#efefef',\r\n                        },\r\n\r\n                        '& .dots': {\r\n                            width: 3.5,\r\n                            height: 3.5,\r\n                            background: '#aaa',\r\n                            borderRadius: 100,\r\n                            position: 'relative',\r\n\r\n                            '&::after, &::before': {\r\n                                content: '\"\"',\r\n                                position: 'absolute',\r\n                                background: '#aaa',\r\n                                width: 3.5,\r\n                                height: 3.5,\r\n                                borderRadius: 100,\r\n                                top: 0\r\n                            },\r\n\r\n                            '&::after': {\r\n                                left: 6,\r\n                            },\r\n\r\n                            '&::before': {\r\n                                right: 6,\r\n                            },\r\n                        },\r\n                    },\r\n\r\n                    '& .dropdown': {\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        top: '120%',\r\n                        background: '#fff',\r\n                        boxShadow: theme.shadows[3],\r\n                        minWidth: 150,\r\n                        padding: theme.spacing(0.5, 0),\r\n                        fontSize: '0.8rem'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}))\r\n\r\nexport const ProfieDetail = ({ user, init }: Props) => {\r\n    const classes = useStyles()\r\n    const { id } = useParams<{ id: string }>()\r\n    const history = useHistory()\r\n\r\n    const dispatch = useAppDispatch()\r\n    const currentUser: User | undefined = useAppSelector(selectCurrentUser)\r\n    const updateUserData = useAppSelector(selectUpdateUserData)\r\n\r\n    const [showDropdown, setShowDropdown] = useState(false)\r\n    const [showModalEdit, setShowModalEdit] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [isLike, setIsLike] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (!user || !currentUser)\r\n            return\r\n\r\n        const checkLiked = !!user.likes.find(x => x === currentUser._id)\r\n\r\n        setIsLike(checkLiked)\r\n    }, [user, currentUser])\r\n\r\n    const listInfo = [\r\n        { icon: <SupervisedUserCircle className='icon' />, label: user.rank },\r\n        { icon: <CardGiftcard className='icon' />, label: `${user.credit} điểm uy tín` },\r\n        { icon: <CloudUpload className='icon' />, label: `${user.posts} bài đăng` },\r\n        { icon: <Loyalty className='icon' />, label: `${user.likes.length} yêu thích` },\r\n    ]\r\n\r\n    const handleSubmitEdit = async (data: UpdateData, avatar: File | undefined) => {\r\n        setLoading(true)\r\n\r\n        const { avatarUrl, ...updateData } = data\r\n\r\n        try {\r\n            if (avatar) {\r\n                const formAvatar = new FormData()\r\n                formAvatar.append('file', avatar)\r\n                formAvatar.append('folder', 'user-avatar')\r\n\r\n                const response: Response<any> = await axiosClient.post('/uploads', formAvatar, { headers: { \"Content-type\": \"multipart/form-data\" } })\r\n\r\n                //@ts-ignore\r\n                updateData.avatarUrl = response.data\r\n            }\r\n\r\n            await userApi.updateUser(updateData, id)\r\n\r\n            init()\r\n\r\n            const rememberMe = !!localStorage.getItem('accessToken')\r\n\r\n            dispatch(authActions.login({ rememberMe, isAutoLogin: true }))\r\n\r\n            setLoading(false)\r\n            toast.success('Cập nhật thông tin thành công!')\r\n            setShowModalEdit(false)\r\n        } catch (error: any) {\r\n            setLoading(false)\r\n            toast.error(error.response.data.message)\r\n        }\r\n    }\r\n\r\n    const handleLikeUser = () => {\r\n        if (isLike) {\r\n            userApi.unlikeUser(id)\r\n                .then(() => { init() })\r\n                .catch(() => {\r\n                    toast.error(\"Đã xảy ra lỗi trong quá trình xử lý!\")\r\n                })\r\n        } else {\r\n            userApi.likeUser(id)\r\n                .then(() => init())\r\n                .catch(() => {\r\n                    toast.error(\"Đã xảy ra lỗi trong quá trình xử lý!\")\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleChat = async () => {\r\n        if (!user || !currentUser?.groupPrivate)\r\n            return\r\n\r\n        try {\r\n            const group = getChatGroupByUserId(currentUser.groupPrivate, user._id)\r\n            let groupId = group ? group._id : ''\r\n\r\n            if (!groupId) {\r\n                dispatch(loadingActions.openLoading())\r\n\r\n                const response: Response<string> = await chatApis.addChatGroup({\r\n                    members: [user._id],\r\n                    name: '',\r\n                    type: 'private'\r\n                })\r\n\r\n                groupId = response.data\r\n                dispatch(loadingActions.closeLoading())\r\n            }\r\n\r\n            history.push(`/chats/${groupId}`)\r\n        } catch (error: any) {\r\n            dispatch(loadingActions.closeLoading())\r\n            toast.error(error.response.data.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.root}>\r\n                <div className=\"background-container\" />\r\n\r\n                <Box className='container-profile'>\r\n                    <Avatar\r\n                        className='avatar'\r\n                        src={user.avatarUrl!}\r\n                    >\r\n                        U\r\n                    </Avatar>\r\n\r\n                    <Box className='wrapper'>\r\n                        <Box className='detail-info'>\r\n                            <Typography\r\n                                className='name'\r\n                                variant='h1'\r\n                            >\r\n                                {user.name}\r\n\r\n                                {user.isAdmin && <VerifiedUser\r\n                                    color='primary'\r\n                                    style={{\r\n                                        marginLeft: 4\r\n                                    }}\r\n                                />}\r\n                            </Typography>\r\n\r\n                            <Typography className='school'>\r\n                                {user.school.name}\r\n                            </Typography>\r\n\r\n                            <ul className=\"list-info\">\r\n                                {listInfo.map((item, index) => (\r\n                                    <li\r\n                                        key={index}\r\n                                        className=\"item\"\r\n                                    >\r\n                                        {item.icon}\r\n\r\n                                        <Typography className='text'>\r\n                                            {item.label}\r\n                                        </Typography>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n\r\n                            {currentUser && id !== currentUser?._id && <Box\r\n                                className='btn-group'\r\n                                mt={2}\r\n                            >\r\n                                <Button\r\n                                    size='small'\r\n                                    variant={isLike ? 'contained' : 'outlined'}\r\n                                    color='primary'\r\n                                    startIcon={isLike ? <Favorite /> : <Loyalty />}\r\n                                    style={{\r\n                                        textTransform: 'initial',\r\n                                        marginRight: 16,\r\n                                    }}\r\n                                    onClick={handleLikeUser}\r\n                                >\r\n                                    {isLike ? 'Đã thích' : 'Yêu thích'}\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    size='small'\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    startIcon={<QuestionAnswer />}\r\n                                    style={{\r\n                                        textTransform: 'initial'\r\n                                    }}\r\n                                    onClick={handleChat}\r\n                                >\r\n                                    Nhắn tin\r\n                                </Button>\r\n                            </Box>}\r\n                        </Box>\r\n\r\n                        {id === currentUser?._id && <Box\r\n                            className=\"btn-wrapper\"\r\n                            component='span'\r\n                        >\r\n                            <button\r\n                                className='btn-action'\r\n                                onClick={() => setShowDropdown(!showDropdown)}\r\n                            >\r\n                                <span className=\"dots\" />\r\n                            </button>\r\n\r\n                            {showDropdown && <DetectClickOutsize cb={() => setTimeout(() => setShowDropdown(false), 100)}>\r\n                                <List className='dropdown'>\r\n                                    <ListItem\r\n                                        button\r\n                                        onClick={() => setShowModalEdit(true)}\r\n                                    >\r\n                                        <ListItemText>\r\n                                            Chỉnh sửa\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n\r\n                                    <ListItem\r\n                                        button\r\n                                        onClick={() => history.push('/auth/change-password')}\r\n                                    >\r\n                                        <ListItemText>\r\n                                            Đổi mật khẩu\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                </List>\r\n                            </DetectClickOutsize>}\r\n                        </Box>}\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n\r\n            <Modal\r\n                visible={showModalEdit}\r\n                title='Chỉnh sửa thông tin'\r\n                onCancel={() => setShowModalEdit(false)}\r\n                footer={null}\r\n            >\r\n                {updateUserData && <ModalBodyEdit\r\n                    updateUserData={updateUserData}\r\n                    handleSubmitEdit={handleSubmitEdit}\r\n                    loading={loading}\r\n                />}\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","import { Box, Theme, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport { Activity } from \"models\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { calculateCreatedTimeHDMY } from \"utils/convert-date/calculateCreatedTime\"\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        marginBottom: theme.spacing(3),\r\n\r\n        '& .top': {\r\n            display: 'flex',\r\n            alignItems: 'flex-end',\r\n\r\n            '& .title': {\r\n                fontSize: '1rem',\r\n                fontWeight: 500,\r\n                marginRight: theme.spacing(1.5),\r\n\r\n                [theme.breakpoints.down('xs')]: {\r\n                    fontSize: '0.9rem',\r\n                }\r\n            },\r\n\r\n            '& .date': {\r\n                fontSize: '0.9rem',\r\n                color: theme.palette.text.secondary,\r\n\r\n                [theme.breakpoints.down('xs')]: {\r\n                    fontSize: '0.75rem',\r\n                }\r\n            }\r\n        },\r\n\r\n        '& .content': {\r\n            background: '#edeef2',\r\n            padding: theme.spacing(1.5),\r\n            marginTop: theme.spacing(1),\r\n            borderRadius: 5,\r\n            fontSize: '0.85rem',\r\n\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: '0.75rem',\r\n                padding: theme.spacing(0.7, 1),\r\n                lineHeight: 1.3\r\n            }\r\n        }\r\n    }\r\n}))\r\n\r\nconst StepActivity = ({ activity }: Props) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Link to={activity.url}>\r\n                <Box className=\"top\">\r\n                    <Typography variant=\"h5\" className='title'>\r\n                        {activity.title}\r\n                    </Typography>\r\n\r\n                    <Typography className=\"date\">\r\n                        {calculateCreatedTimeHDMY(activity.createdAt)}\r\n                    </Typography>\r\n                </Box>\r\n\r\n                <Box className=\"content\">\r\n                    {activity.content}\r\n                </Box>\r\n            </Link>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default StepActivity\r\n","import { Box, Step, StepContent, StepLabel, Stepper, Theme } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport { Activity } from \"models\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { ActivitiesInYears } from \"../models/Activity\"\r\nimport StepActivity from \"./StepActivity\"\r\n\r\ninterface Props {\r\n    activities: ActivitiesInYears\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 800,\r\n        margin: '0 auto',\r\n\r\n        '& .MuiStepper-root': {\r\n            [theme.breakpoints.down('sm')]: {\r\n                padding: 0\r\n            }\r\n        }\r\n    }\r\n}))\r\n\r\nconst Activities = ({ activities }: Props) => {\r\n    const classes = useStyles()\r\n    const [steps, setSteps] = useState<any>({})\r\n    const [expended, setExpended] = useState('')\r\n\r\n    const years = Object.keys(activities)\r\n\r\n    useEffect(() => {\r\n        let result = {}\r\n\r\n        years.forEach(year => {\r\n            const month = activities[year].reduce((obj, activities, index) => {\r\n                if (!activities) return obj\r\n\r\n                // @ts-ignore\r\n                obj[`${index}-${year}`] = activities\r\n\r\n                return obj\r\n            }, {})\r\n\r\n            result = { ...month, ...result }\r\n        })\r\n\r\n        setSteps(result)\r\n        setExpended(Object.keys(result)[0])\r\n    }, [activities])\r\n\r\n    const handleClickExpand = (id: string) => {\r\n        setExpended(prev => {\r\n            if (prev === id)\r\n                return prev\r\n            return id\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Stepper orientation=\"vertical\">\r\n                {Object.keys(steps).map(el => (\r\n                    <Step key={el} expanded={expended === el} active={expended === el} onClick={() => handleClickExpand(el)}>\r\n                        <StepLabel>{`Tháng ${+el.split('-')[0] + 1} - Năm ${el.split('-')[1]}`}</StepLabel>\r\n\r\n                        <StepContent>\r\n                            {steps[el].map((activity: Activity) => (\r\n                                <StepActivity key={activity._id} activity={activity} />\r\n                            ))}\r\n                        </StepContent>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Activities\r\n","import { Box, Typography } from '@material-ui/core'\r\nimport { userApi } from 'api/user'\r\nimport { useAppDispatch, useAppSelector } from 'app/hooks'\r\nimport { MainLayout } from 'components/Layouts'\r\nimport { ProfieDetail } from 'features/profile/components'\r\nimport Activities from 'features/profile/components/Activities'\r\nimport { ActivitiesInYears } from 'features/profile/models/Activity'\r\nimport { provinceActions, selectDataProvince } from 'features/province/provinceSlice'\r\nimport { ProfileUser } from 'models'\r\nimport { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\n\r\nconst PersonalPage = () => {\r\n    const dispatch = useAppDispatch()\r\n    const { id } = useParams<{ id: string }>()\r\n\r\n    const listProvince = useAppSelector(selectDataProvince)\r\n    const [dataUser, setDataUser] = useState<ProfileUser | undefined>()\r\n\r\n    const mapActivities: ActivitiesInYears = useMemo(() => {\r\n        if (!dataUser) return {}\r\n\r\n        const result = dataUser.done.reduce((obj, activity) => {\r\n            const date = new Date(activity.createdAt)\r\n            const year = date.getFullYear()\r\n            const month = date.getMonth()\r\n\r\n            //@ts-ignore\r\n            let activitiesMonth = obj[year] ? obj[year] : new Array(12).fill(null)\r\n\r\n            activitiesMonth[month] = activitiesMonth[month] ? [...activitiesMonth[month], activity] : [activity]\r\n\r\n            //@ts-ignore\r\n            obj[year] = activitiesMonth\r\n\r\n            return obj\r\n        }, {})\r\n\r\n        return result\r\n    }, [dataUser])\r\n\r\n    const init = useCallback(() => {\r\n        userApi.getUserById(id)\r\n            .then(res => setDataUser(res.data))\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        if (listProvince.length === 0)\r\n            dispatch(provinceActions.getAll())\r\n\r\n        init()\r\n    }, [id, dispatch, init, listProvince.length])\r\n\r\n    return (\r\n        <MainLayout>\r\n            {dataUser && <ProfieDetail\r\n                user={dataUser}\r\n                init={init}\r\n            />}\r\n\r\n            <Box className='container' display='flex' justifyContent='center' mt={2}>\r\n                {Object.keys(mapActivities).length > 0 ?\r\n                    <Activities activities={mapActivities} />\r\n                    : <Typography>\r\n                        Tài khoản hiện tại không có bất kì hoạt động nào\r\n                    </Typography>\r\n                }\r\n            </Box>\r\n        </MainLayout>\r\n    )\r\n}\r\n\r\nexport default PersonalPage\r\n"],"sourceRoot":""}